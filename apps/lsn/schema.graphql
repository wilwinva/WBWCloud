schema {
  query: query_root
  mutation: mutation_root
  subscription: subscription_root
}

"""
Direct the client to resolve this field locally, either from the cache or local resolvers.
"""
directive @client(
  """
  When true, the client will never use the cache for this value. See
  https://www.apollographql.com/docs/react/essentials/local-state/#forcing-resolvers-with-clientalways-true
  """
  always: Boolean
) on FIELD | FRAGMENT_DEFINITION | INLINE_FRAGMENT

"""
Export this locally resolved field as a variable to be used in the remainder of this query. See
https://www.apollographql.com/docs/react/essentials/local-state/#using-client-fields-as-variables
"""
directive @export(
  """
  The variable name to export this field as.
  """
  as: String!
) on FIELD

"""
Specify a custom store key for this result. See
https://www.apollographql.com/docs/react/advanced/caching/#the-connection-directive
"""
directive @connection(
  """
  Specify the store key.
  """
  key: String!

  """
  An array of query argument names to include in the generated custom store key.
  """
  filter: [String!]
) on FIELD

scalar bpchar

"""
expression to compare columns of type bpchar. All fields are combined with logical 'AND'.
"""
input bpchar_comparison_exp {
  _eq: bpchar
  _gt: bpchar
  _gte: bpchar
  _in: [bpchar!]
  _is_null: Boolean
  _lt: bpchar
  _lte: bpchar
  _neq: bpchar
  _nin: [bpchar!]
}

"""
columns and relationships of "efiles.contain"
"""
type efiles_contain {
  alt_image_path: String
  annotationpath: String
  containerid: String!
  created_date: timestamp
  created_user: String
  file_check: bpchar
  firstpage: float8
  imagepath: String!
  imagepath_backup: String
  imagepath_backup2: String
  lastpage: float8
  modified_date: timestamp
  modified_user: String
  nstyle: float8
  path2: String
  rowid: String!
  ssz_path: String
  volumelabel: String
}

"""
aggregated selection of "efiles.contain"
"""
type efiles_contain_aggregate {
  aggregate: efiles_contain_aggregate_fields
  nodes: [efiles_contain!]!
}

"""
aggregate fields of "efiles.contain"
"""
type efiles_contain_aggregate_fields {
  avg: efiles_contain_avg_fields
  count(columns: [efiles_contain_select_column!], distinct: Boolean): Int
  max: efiles_contain_max_fields
  min: efiles_contain_min_fields
  stddev: efiles_contain_stddev_fields
  stddev_pop: efiles_contain_stddev_pop_fields
  stddev_samp: efiles_contain_stddev_samp_fields
  sum: efiles_contain_sum_fields
  var_pop: efiles_contain_var_pop_fields
  var_samp: efiles_contain_var_samp_fields
  variance: efiles_contain_variance_fields
}

"""
order by aggregate values of table "efiles.contain"
"""
input efiles_contain_aggregate_order_by {
  avg: efiles_contain_avg_order_by
  count: order_by
  max: efiles_contain_max_order_by
  min: efiles_contain_min_order_by
  stddev: efiles_contain_stddev_order_by
  stddev_pop: efiles_contain_stddev_pop_order_by
  stddev_samp: efiles_contain_stddev_samp_order_by
  sum: efiles_contain_sum_order_by
  var_pop: efiles_contain_var_pop_order_by
  var_samp: efiles_contain_var_samp_order_by
  variance: efiles_contain_variance_order_by
}

"""
input type for inserting array relation for remote table "efiles.contain"
"""
input efiles_contain_arr_rel_insert_input {
  data: [efiles_contain_insert_input!]!
  on_conflict: efiles_contain_on_conflict
}

"""
aggregate avg on columns
"""
type efiles_contain_avg_fields {
  firstpage: Float
  lastpage: Float
  nstyle: Float
}

"""
order by avg() on columns of table "efiles.contain"
"""
input efiles_contain_avg_order_by {
  firstpage: order_by
  lastpage: order_by
  nstyle: order_by
}

"""
Boolean expression to filter rows from the table "efiles.contain". All fields are combined with a logical 'AND'.
"""
input efiles_contain_bool_exp {
  _and: [efiles_contain_bool_exp]
  _not: efiles_contain_bool_exp
  _or: [efiles_contain_bool_exp]
  alt_image_path: String_comparison_exp
  annotationpath: String_comparison_exp
  containerid: String_comparison_exp
  created_date: timestamp_comparison_exp
  created_user: String_comparison_exp
  file_check: bpchar_comparison_exp
  firstpage: float8_comparison_exp
  imagepath: String_comparison_exp
  imagepath_backup: String_comparison_exp
  imagepath_backup2: String_comparison_exp
  lastpage: float8_comparison_exp
  modified_date: timestamp_comparison_exp
  modified_user: String_comparison_exp
  nstyle: float8_comparison_exp
  path2: String_comparison_exp
  rowid: String_comparison_exp
  ssz_path: String_comparison_exp
  volumelabel: String_comparison_exp
}

"""
unique or primary key constraints on table "efiles.contain"
"""
enum efiles_contain_constraint {
  """
  unique or primary key constraint
  """
  contain_pkey
}

"""
input type for incrementing integer column in table "efiles.contain"
"""
input efiles_contain_inc_input {
  firstpage: float8
  lastpage: float8
  nstyle: float8
}

"""
input type for inserting data into table "efiles.contain"
"""
input efiles_contain_insert_input {
  alt_image_path: String
  annotationpath: String
  containerid: String
  created_date: timestamp
  created_user: String
  file_check: bpchar
  firstpage: float8
  imagepath: String
  imagepath_backup: String
  imagepath_backup2: String
  lastpage: float8
  modified_date: timestamp
  modified_user: String
  nstyle: float8
  path2: String
  rowid: String
  ssz_path: String
  volumelabel: String
}

"""
aggregate max on columns
"""
type efiles_contain_max_fields {
  alt_image_path: String
  annotationpath: String
  containerid: String
  created_date: timestamp
  created_user: String
  firstpage: float8
  imagepath: String
  imagepath_backup: String
  imagepath_backup2: String
  lastpage: float8
  modified_date: timestamp
  modified_user: String
  nstyle: float8
  path2: String
  rowid: String
  ssz_path: String
  volumelabel: String
}

"""
order by max() on columns of table "efiles.contain"
"""
input efiles_contain_max_order_by {
  alt_image_path: order_by
  annotationpath: order_by
  containerid: order_by
  created_date: order_by
  created_user: order_by
  firstpage: order_by
  imagepath: order_by
  imagepath_backup: order_by
  imagepath_backup2: order_by
  lastpage: order_by
  modified_date: order_by
  modified_user: order_by
  nstyle: order_by
  path2: order_by
  rowid: order_by
  ssz_path: order_by
  volumelabel: order_by
}

"""
aggregate min on columns
"""
type efiles_contain_min_fields {
  alt_image_path: String
  annotationpath: String
  containerid: String
  created_date: timestamp
  created_user: String
  firstpage: float8
  imagepath: String
  imagepath_backup: String
  imagepath_backup2: String
  lastpage: float8
  modified_date: timestamp
  modified_user: String
  nstyle: float8
  path2: String
  rowid: String
  ssz_path: String
  volumelabel: String
}

"""
order by min() on columns of table "efiles.contain"
"""
input efiles_contain_min_order_by {
  alt_image_path: order_by
  annotationpath: order_by
  containerid: order_by
  created_date: order_by
  created_user: order_by
  firstpage: order_by
  imagepath: order_by
  imagepath_backup: order_by
  imagepath_backup2: order_by
  lastpage: order_by
  modified_date: order_by
  modified_user: order_by
  nstyle: order_by
  path2: order_by
  rowid: order_by
  ssz_path: order_by
  volumelabel: order_by
}

"""
response of any mutation on the table "efiles.contain"
"""
type efiles_contain_mutation_response {
  """
  number of affected rows by the mutation
  """
  affected_rows: Int!

  """
  data of the affected rows by the mutation
  """
  returning: [efiles_contain!]!
}

"""
input type for inserting object relation for remote table "efiles.contain"
"""
input efiles_contain_obj_rel_insert_input {
  data: efiles_contain_insert_input!
  on_conflict: efiles_contain_on_conflict
}

"""
on conflict condition type for table "efiles.contain"
"""
input efiles_contain_on_conflict {
  constraint: efiles_contain_constraint!
  update_columns: [efiles_contain_update_column!]!
  where: efiles_contain_bool_exp
}

"""
ordering options when selecting data from "efiles.contain"
"""
input efiles_contain_order_by {
  alt_image_path: order_by
  annotationpath: order_by
  containerid: order_by
  created_date: order_by
  created_user: order_by
  file_check: order_by
  firstpage: order_by
  imagepath: order_by
  imagepath_backup: order_by
  imagepath_backup2: order_by
  lastpage: order_by
  modified_date: order_by
  modified_user: order_by
  nstyle: order_by
  path2: order_by
  rowid: order_by
  ssz_path: order_by
  volumelabel: order_by
}

"""
primary key columns input for table: "efiles.contain"
"""
input efiles_contain_pk_columns_input {
  containerid: String!
}

"""
select columns of table "efiles.contain"
"""
enum efiles_contain_select_column {
  """
  column name
  """
  alt_image_path

  """
  column name
  """
  annotationpath

  """
  column name
  """
  containerid

  """
  column name
  """
  created_date

  """
  column name
  """
  created_user

  """
  column name
  """
  file_check

  """
  column name
  """
  firstpage

  """
  column name
  """
  imagepath

  """
  column name
  """
  imagepath_backup

  """
  column name
  """
  imagepath_backup2

  """
  column name
  """
  lastpage

  """
  column name
  """
  modified_date

  """
  column name
  """
  modified_user

  """
  column name
  """
  nstyle

  """
  column name
  """
  path2

  """
  column name
  """
  rowid

  """
  column name
  """
  ssz_path

  """
  column name
  """
  volumelabel
}

"""
input type for updating data in table "efiles.contain"
"""
input efiles_contain_set_input {
  alt_image_path: String
  annotationpath: String
  containerid: String
  created_date: timestamp
  created_user: String
  file_check: bpchar
  firstpage: float8
  imagepath: String
  imagepath_backup: String
  imagepath_backup2: String
  lastpage: float8
  modified_date: timestamp
  modified_user: String
  nstyle: float8
  path2: String
  rowid: String
  ssz_path: String
  volumelabel: String
}

"""
aggregate stddev on columns
"""
type efiles_contain_stddev_fields {
  firstpage: Float
  lastpage: Float
  nstyle: Float
}

"""
order by stddev() on columns of table "efiles.contain"
"""
input efiles_contain_stddev_order_by {
  firstpage: order_by
  lastpage: order_by
  nstyle: order_by
}

"""
aggregate stddev_pop on columns
"""
type efiles_contain_stddev_pop_fields {
  firstpage: Float
  lastpage: Float
  nstyle: Float
}

"""
order by stddev_pop() on columns of table "efiles.contain"
"""
input efiles_contain_stddev_pop_order_by {
  firstpage: order_by
  lastpage: order_by
  nstyle: order_by
}

"""
aggregate stddev_samp on columns
"""
type efiles_contain_stddev_samp_fields {
  firstpage: Float
  lastpage: Float
  nstyle: Float
}

"""
order by stddev_samp() on columns of table "efiles.contain"
"""
input efiles_contain_stddev_samp_order_by {
  firstpage: order_by
  lastpage: order_by
  nstyle: order_by
}

"""
aggregate sum on columns
"""
type efiles_contain_sum_fields {
  firstpage: float8
  lastpage: float8
  nstyle: float8
}

"""
order by sum() on columns of table "efiles.contain"
"""
input efiles_contain_sum_order_by {
  firstpage: order_by
  lastpage: order_by
  nstyle: order_by
}

"""
update columns of table "efiles.contain"
"""
enum efiles_contain_update_column {
  """
  column name
  """
  alt_image_path

  """
  column name
  """
  annotationpath

  """
  column name
  """
  containerid

  """
  column name
  """
  created_date

  """
  column name
  """
  created_user

  """
  column name
  """
  file_check

  """
  column name
  """
  firstpage

  """
  column name
  """
  imagepath

  """
  column name
  """
  imagepath_backup

  """
  column name
  """
  imagepath_backup2

  """
  column name
  """
  lastpage

  """
  column name
  """
  modified_date

  """
  column name
  """
  modified_user

  """
  column name
  """
  nstyle

  """
  column name
  """
  path2

  """
  column name
  """
  rowid

  """
  column name
  """
  ssz_path

  """
  column name
  """
  volumelabel
}

"""
aggregate var_pop on columns
"""
type efiles_contain_var_pop_fields {
  firstpage: Float
  lastpage: Float
  nstyle: Float
}

"""
order by var_pop() on columns of table "efiles.contain"
"""
input efiles_contain_var_pop_order_by {
  firstpage: order_by
  lastpage: order_by
  nstyle: order_by
}

"""
aggregate var_samp on columns
"""
type efiles_contain_var_samp_fields {
  firstpage: Float
  lastpage: Float
  nstyle: Float
}

"""
order by var_samp() on columns of table "efiles.contain"
"""
input efiles_contain_var_samp_order_by {
  firstpage: order_by
  lastpage: order_by
  nstyle: order_by
}

"""
aggregate variance on columns
"""
type efiles_contain_variance_fields {
  firstpage: Float
  lastpage: Float
  nstyle: Float
}

"""
order by variance() on columns of table "efiles.contain"
"""
input efiles_contain_variance_order_by {
  firstpage: order_by
  lastpage: order_by
  nstyle: order_by
}

"""
columns and relationships of "efiles.doc_main"
"""
type efiles_doc_main {
  TEXT: bpchar
  VERSION: float8
  ads_bates_fpage: String
  ads_bates_lpage: String
  ads_bates_range: String
  ads_ctrname: String!
  ads_docdates: String!
  ads_fpack: numeric
  ads_fpage: numeric!
  ads_lpack: numeric
  ads_lpage: numeric!
  ads_udi: String!
  batch_no: String
  bax_file_load_date: timestamp
  box_no: float8
  challenged: bpchar
  challenged_date: String
  collection_id: numeric
  collection_type: bpchar
  container: String
  created_date: timestamp
  created_user: String
  ctr_page_range: String
  dat_file_load_date: timestamp
  database_name: String
  dm_comment: String
  docdates_c: String
  dtype: bpchar
  header_only: String
  hsc_flag: bpchar
  hsc_proc: bpchar
  hsc_proc_date: timestamp
  incomplete: float8
  is_checked_out: bpchar
  is_hot: bpchar
  is_rework: bpchar
  last_user: String
  load_datex: timestamp
  lsn_access_cntrl: String
  lsn_relevancy_date: String
  lvload: String
  lvload_date: timestamp
  media_code: String
  media_count: float8
  modified_date: timestamp
  modified_user: String
  mts1: String
  mts2: String
  mts3: String
  mts4: String
  mts5: String
  ocr_load_date: timestamp
  ocr_load_status: bpchar
  ocr_moved: bpchar
  on_irs: String
  p_acc_no: String!
  pac_flag: String
  package_id: String
  pads_udi: String
  pctype: String
  pctype_date: timestamp
  priv_att: bpchar
  privacy: bpchar
  privileged: bpchar
  prop: bpchar
  qa: String
  qa_record: bpchar
  redaction_status: bpchar
  released: bpchar
  released_date: timestamp
  relevancy: bpchar
  ret_code: bpchar
  rms_load_date: timestamp
  rowid: String!
  shipping_status: bpchar
  splv: String
  splv_date: timestamp
  staged: bpchar
  staged_date: timestamp
  status_code: bpchar
  title: String!
  title_redacted: String

  """
  An array relationship
  """
  types(
    """
    distinct select on columns
    """
    distinct_on: [efiles_type_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [efiles_type_order_by!]

    """
    filter the rows returned
    """
    where: efiles_type_bool_exp
  ): [efiles_type!]!

  """
  An aggregated array relationship
  """
  types_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [efiles_type_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [efiles_type_order_by!]

    """
    filter the rows returned
    """
    where: efiles_type_bool_exp
  ): efiles_type_aggregate!
  unique_id: String!
  xml_load_date: timestamp
}

"""
aggregated selection of "efiles.doc_main"
"""
type efiles_doc_main_aggregate {
  aggregate: efiles_doc_main_aggregate_fields
  nodes: [efiles_doc_main!]!
}

"""
aggregate fields of "efiles.doc_main"
"""
type efiles_doc_main_aggregate_fields {
  avg: efiles_doc_main_avg_fields
  count(columns: [efiles_doc_main_select_column!], distinct: Boolean): Int
  max: efiles_doc_main_max_fields
  min: efiles_doc_main_min_fields
  stddev: efiles_doc_main_stddev_fields
  stddev_pop: efiles_doc_main_stddev_pop_fields
  stddev_samp: efiles_doc_main_stddev_samp_fields
  sum: efiles_doc_main_sum_fields
  var_pop: efiles_doc_main_var_pop_fields
  var_samp: efiles_doc_main_var_samp_fields
  variance: efiles_doc_main_variance_fields
}

"""
order by aggregate values of table "efiles.doc_main"
"""
input efiles_doc_main_aggregate_order_by {
  avg: efiles_doc_main_avg_order_by
  count: order_by
  max: efiles_doc_main_max_order_by
  min: efiles_doc_main_min_order_by
  stddev: efiles_doc_main_stddev_order_by
  stddev_pop: efiles_doc_main_stddev_pop_order_by
  stddev_samp: efiles_doc_main_stddev_samp_order_by
  sum: efiles_doc_main_sum_order_by
  var_pop: efiles_doc_main_var_pop_order_by
  var_samp: efiles_doc_main_var_samp_order_by
  variance: efiles_doc_main_variance_order_by
}

"""
input type for inserting array relation for remote table "efiles.doc_main"
"""
input efiles_doc_main_arr_rel_insert_input {
  data: [efiles_doc_main_insert_input!]!
  on_conflict: efiles_doc_main_on_conflict
}

"""
aggregate avg on columns
"""
type efiles_doc_main_avg_fields {
  VERSION: Float
  ads_fpack: Float
  ads_fpage: Float
  ads_lpack: Float
  ads_lpage: Float
  box_no: Float
  collection_id: Float
  incomplete: Float
  media_count: Float
}

"""
order by avg() on columns of table "efiles.doc_main"
"""
input efiles_doc_main_avg_order_by {
  VERSION: order_by
  ads_fpack: order_by
  ads_fpage: order_by
  ads_lpack: order_by
  ads_lpage: order_by
  box_no: order_by
  collection_id: order_by
  incomplete: order_by
  media_count: order_by
}

"""
Boolean expression to filter rows from the table "efiles.doc_main". All fields are combined with a logical 'AND'.
"""
input efiles_doc_main_bool_exp {
  TEXT: bpchar_comparison_exp
  VERSION: float8_comparison_exp
  _and: [efiles_doc_main_bool_exp]
  _not: efiles_doc_main_bool_exp
  _or: [efiles_doc_main_bool_exp]
  ads_bates_fpage: String_comparison_exp
  ads_bates_lpage: String_comparison_exp
  ads_bates_range: String_comparison_exp
  ads_ctrname: String_comparison_exp
  ads_docdates: String_comparison_exp
  ads_fpack: numeric_comparison_exp
  ads_fpage: numeric_comparison_exp
  ads_lpack: numeric_comparison_exp
  ads_lpage: numeric_comparison_exp
  ads_udi: String_comparison_exp
  batch_no: String_comparison_exp
  bax_file_load_date: timestamp_comparison_exp
  box_no: float8_comparison_exp
  challenged: bpchar_comparison_exp
  challenged_date: String_comparison_exp
  collection_id: numeric_comparison_exp
  collection_type: bpchar_comparison_exp
  container: String_comparison_exp
  created_date: timestamp_comparison_exp
  created_user: String_comparison_exp
  ctr_page_range: String_comparison_exp
  dat_file_load_date: timestamp_comparison_exp
  database_name: String_comparison_exp
  dm_comment: String_comparison_exp
  docdates_c: String_comparison_exp
  dtype: bpchar_comparison_exp
  header_only: String_comparison_exp
  hsc_flag: bpchar_comparison_exp
  hsc_proc: bpchar_comparison_exp
  hsc_proc_date: timestamp_comparison_exp
  incomplete: float8_comparison_exp
  is_checked_out: bpchar_comparison_exp
  is_hot: bpchar_comparison_exp
  is_rework: bpchar_comparison_exp
  last_user: String_comparison_exp
  load_datex: timestamp_comparison_exp
  lsn_access_cntrl: String_comparison_exp
  lsn_relevancy_date: String_comparison_exp
  lvload: String_comparison_exp
  lvload_date: timestamp_comparison_exp
  media_code: String_comparison_exp
  media_count: float8_comparison_exp
  modified_date: timestamp_comparison_exp
  modified_user: String_comparison_exp
  mts1: String_comparison_exp
  mts2: String_comparison_exp
  mts3: String_comparison_exp
  mts4: String_comparison_exp
  mts5: String_comparison_exp
  ocr_load_date: timestamp_comparison_exp
  ocr_load_status: bpchar_comparison_exp
  ocr_moved: bpchar_comparison_exp
  on_irs: String_comparison_exp
  p_acc_no: String_comparison_exp
  pac_flag: String_comparison_exp
  package_id: String_comparison_exp
  pads_udi: String_comparison_exp
  pctype: String_comparison_exp
  pctype_date: timestamp_comparison_exp
  priv_att: bpchar_comparison_exp
  privacy: bpchar_comparison_exp
  privileged: bpchar_comparison_exp
  prop: bpchar_comparison_exp
  qa: String_comparison_exp
  qa_record: bpchar_comparison_exp
  redaction_status: bpchar_comparison_exp
  released: bpchar_comparison_exp
  released_date: timestamp_comparison_exp
  relevancy: bpchar_comparison_exp
  ret_code: bpchar_comparison_exp
  rms_load_date: timestamp_comparison_exp
  rowid: String_comparison_exp
  shipping_status: bpchar_comparison_exp
  splv: String_comparison_exp
  splv_date: timestamp_comparison_exp
  staged: bpchar_comparison_exp
  staged_date: timestamp_comparison_exp
  status_code: bpchar_comparison_exp
  title: String_comparison_exp
  title_redacted: String_comparison_exp
  types: efiles_type_bool_exp
  unique_id: String_comparison_exp
  xml_load_date: timestamp_comparison_exp
}

"""
unique or primary key constraints on table "efiles.doc_main"
"""
enum efiles_doc_main_constraint {
  """
  unique or primary key constraint
  """
  doc_main_paccno_indx

  """
  unique or primary key constraint
  """
  doc_main_pkey

  """
  unique or primary key constraint
  """
  doc_main_unique_id_idx
}

"""
input type for incrementing integer column in table "efiles.doc_main"
"""
input efiles_doc_main_inc_input {
  VERSION: float8
  ads_fpack: numeric
  ads_fpage: numeric
  ads_lpack: numeric
  ads_lpage: numeric
  box_no: float8
  collection_id: numeric
  incomplete: float8
  media_count: float8
}

"""
input type for inserting data into table "efiles.doc_main"
"""
input efiles_doc_main_insert_input {
  TEXT: bpchar
  VERSION: float8
  ads_bates_fpage: String
  ads_bates_lpage: String
  ads_bates_range: String
  ads_ctrname: String
  ads_docdates: String
  ads_fpack: numeric
  ads_fpage: numeric
  ads_lpack: numeric
  ads_lpage: numeric
  ads_udi: String
  batch_no: String
  bax_file_load_date: timestamp
  box_no: float8
  challenged: bpchar
  challenged_date: String
  collection_id: numeric
  collection_type: bpchar
  container: String
  created_date: timestamp
  created_user: String
  ctr_page_range: String
  dat_file_load_date: timestamp
  database_name: String
  dm_comment: String
  docdates_c: String
  dtype: bpchar
  header_only: String
  hsc_flag: bpchar
  hsc_proc: bpchar
  hsc_proc_date: timestamp
  incomplete: float8
  is_checked_out: bpchar
  is_hot: bpchar
  is_rework: bpchar
  last_user: String
  load_datex: timestamp
  lsn_access_cntrl: String
  lsn_relevancy_date: String
  lvload: String
  lvload_date: timestamp
  media_code: String
  media_count: float8
  modified_date: timestamp
  modified_user: String
  mts1: String
  mts2: String
  mts3: String
  mts4: String
  mts5: String
  ocr_load_date: timestamp
  ocr_load_status: bpchar
  ocr_moved: bpchar
  on_irs: String
  p_acc_no: String
  pac_flag: String
  package_id: String
  pads_udi: String
  pctype: String
  pctype_date: timestamp
  priv_att: bpchar
  privacy: bpchar
  privileged: bpchar
  prop: bpchar
  qa: String
  qa_record: bpchar
  redaction_status: bpchar
  released: bpchar
  released_date: timestamp
  relevancy: bpchar
  ret_code: bpchar
  rms_load_date: timestamp
  rowid: String
  shipping_status: bpchar
  splv: String
  splv_date: timestamp
  staged: bpchar
  staged_date: timestamp
  status_code: bpchar
  title: String
  title_redacted: String
  types: efiles_type_arr_rel_insert_input
  unique_id: String
  xml_load_date: timestamp
}

"""
aggregate max on columns
"""
type efiles_doc_main_max_fields {
  VERSION: float8
  ads_bates_fpage: String
  ads_bates_lpage: String
  ads_bates_range: String
  ads_ctrname: String
  ads_docdates: String
  ads_fpack: numeric
  ads_fpage: numeric
  ads_lpack: numeric
  ads_lpage: numeric
  ads_udi: String
  batch_no: String
  bax_file_load_date: timestamp
  box_no: float8
  challenged_date: String
  collection_id: numeric
  container: String
  created_date: timestamp
  created_user: String
  ctr_page_range: String
  dat_file_load_date: timestamp
  database_name: String
  dm_comment: String
  docdates_c: String
  header_only: String
  hsc_proc_date: timestamp
  incomplete: float8
  last_user: String
  load_datex: timestamp
  lsn_access_cntrl: String
  lsn_relevancy_date: String
  lvload: String
  lvload_date: timestamp
  media_code: String
  media_count: float8
  modified_date: timestamp
  modified_user: String
  mts1: String
  mts2: String
  mts3: String
  mts4: String
  mts5: String
  ocr_load_date: timestamp
  on_irs: String
  p_acc_no: String
  pac_flag: String
  package_id: String
  pads_udi: String
  pctype: String
  pctype_date: timestamp
  qa: String
  released_date: timestamp
  rms_load_date: timestamp
  rowid: String
  splv: String
  splv_date: timestamp
  staged_date: timestamp
  title: String
  title_redacted: String
  unique_id: String
  xml_load_date: timestamp
}

"""
order by max() on columns of table "efiles.doc_main"
"""
input efiles_doc_main_max_order_by {
  VERSION: order_by
  ads_bates_fpage: order_by
  ads_bates_lpage: order_by
  ads_bates_range: order_by
  ads_ctrname: order_by
  ads_docdates: order_by
  ads_fpack: order_by
  ads_fpage: order_by
  ads_lpack: order_by
  ads_lpage: order_by
  ads_udi: order_by
  batch_no: order_by
  bax_file_load_date: order_by
  box_no: order_by
  challenged_date: order_by
  collection_id: order_by
  container: order_by
  created_date: order_by
  created_user: order_by
  ctr_page_range: order_by
  dat_file_load_date: order_by
  database_name: order_by
  dm_comment: order_by
  docdates_c: order_by
  header_only: order_by
  hsc_proc_date: order_by
  incomplete: order_by
  last_user: order_by
  load_datex: order_by
  lsn_access_cntrl: order_by
  lsn_relevancy_date: order_by
  lvload: order_by
  lvload_date: order_by
  media_code: order_by
  media_count: order_by
  modified_date: order_by
  modified_user: order_by
  mts1: order_by
  mts2: order_by
  mts3: order_by
  mts4: order_by
  mts5: order_by
  ocr_load_date: order_by
  on_irs: order_by
  p_acc_no: order_by
  pac_flag: order_by
  package_id: order_by
  pads_udi: order_by
  pctype: order_by
  pctype_date: order_by
  qa: order_by
  released_date: order_by
  rms_load_date: order_by
  rowid: order_by
  splv: order_by
  splv_date: order_by
  staged_date: order_by
  title: order_by
  title_redacted: order_by
  unique_id: order_by
  xml_load_date: order_by
}

"""
aggregate min on columns
"""
type efiles_doc_main_min_fields {
  VERSION: float8
  ads_bates_fpage: String
  ads_bates_lpage: String
  ads_bates_range: String
  ads_ctrname: String
  ads_docdates: String
  ads_fpack: numeric
  ads_fpage: numeric
  ads_lpack: numeric
  ads_lpage: numeric
  ads_udi: String
  batch_no: String
  bax_file_load_date: timestamp
  box_no: float8
  challenged_date: String
  collection_id: numeric
  container: String
  created_date: timestamp
  created_user: String
  ctr_page_range: String
  dat_file_load_date: timestamp
  database_name: String
  dm_comment: String
  docdates_c: String
  header_only: String
  hsc_proc_date: timestamp
  incomplete: float8
  last_user: String
  load_datex: timestamp
  lsn_access_cntrl: String
  lsn_relevancy_date: String
  lvload: String
  lvload_date: timestamp
  media_code: String
  media_count: float8
  modified_date: timestamp
  modified_user: String
  mts1: String
  mts2: String
  mts3: String
  mts4: String
  mts5: String
  ocr_load_date: timestamp
  on_irs: String
  p_acc_no: String
  pac_flag: String
  package_id: String
  pads_udi: String
  pctype: String
  pctype_date: timestamp
  qa: String
  released_date: timestamp
  rms_load_date: timestamp
  rowid: String
  splv: String
  splv_date: timestamp
  staged_date: timestamp
  title: String
  title_redacted: String
  unique_id: String
  xml_load_date: timestamp
}

"""
order by min() on columns of table "efiles.doc_main"
"""
input efiles_doc_main_min_order_by {
  VERSION: order_by
  ads_bates_fpage: order_by
  ads_bates_lpage: order_by
  ads_bates_range: order_by
  ads_ctrname: order_by
  ads_docdates: order_by
  ads_fpack: order_by
  ads_fpage: order_by
  ads_lpack: order_by
  ads_lpage: order_by
  ads_udi: order_by
  batch_no: order_by
  bax_file_load_date: order_by
  box_no: order_by
  challenged_date: order_by
  collection_id: order_by
  container: order_by
  created_date: order_by
  created_user: order_by
  ctr_page_range: order_by
  dat_file_load_date: order_by
  database_name: order_by
  dm_comment: order_by
  docdates_c: order_by
  header_only: order_by
  hsc_proc_date: order_by
  incomplete: order_by
  last_user: order_by
  load_datex: order_by
  lsn_access_cntrl: order_by
  lsn_relevancy_date: order_by
  lvload: order_by
  lvload_date: order_by
  media_code: order_by
  media_count: order_by
  modified_date: order_by
  modified_user: order_by
  mts1: order_by
  mts2: order_by
  mts3: order_by
  mts4: order_by
  mts5: order_by
  ocr_load_date: order_by
  on_irs: order_by
  p_acc_no: order_by
  pac_flag: order_by
  package_id: order_by
  pads_udi: order_by
  pctype: order_by
  pctype_date: order_by
  qa: order_by
  released_date: order_by
  rms_load_date: order_by
  rowid: order_by
  splv: order_by
  splv_date: order_by
  staged_date: order_by
  title: order_by
  title_redacted: order_by
  unique_id: order_by
  xml_load_date: order_by
}

"""
response of any mutation on the table "efiles.doc_main"
"""
type efiles_doc_main_mutation_response {
  """
  number of affected rows by the mutation
  """
  affected_rows: Int!

  """
  data of the affected rows by the mutation
  """
  returning: [efiles_doc_main!]!
}

"""
input type for inserting object relation for remote table "efiles.doc_main"
"""
input efiles_doc_main_obj_rel_insert_input {
  data: efiles_doc_main_insert_input!
  on_conflict: efiles_doc_main_on_conflict
}

"""
on conflict condition type for table "efiles.doc_main"
"""
input efiles_doc_main_on_conflict {
  constraint: efiles_doc_main_constraint!
  update_columns: [efiles_doc_main_update_column!]!
  where: efiles_doc_main_bool_exp
}

"""
ordering options when selecting data from "efiles.doc_main"
"""
input efiles_doc_main_order_by {
  TEXT: order_by
  VERSION: order_by
  ads_bates_fpage: order_by
  ads_bates_lpage: order_by
  ads_bates_range: order_by
  ads_ctrname: order_by
  ads_docdates: order_by
  ads_fpack: order_by
  ads_fpage: order_by
  ads_lpack: order_by
  ads_lpage: order_by
  ads_udi: order_by
  batch_no: order_by
  bax_file_load_date: order_by
  box_no: order_by
  challenged: order_by
  challenged_date: order_by
  collection_id: order_by
  collection_type: order_by
  container: order_by
  created_date: order_by
  created_user: order_by
  ctr_page_range: order_by
  dat_file_load_date: order_by
  database_name: order_by
  dm_comment: order_by
  docdates_c: order_by
  dtype: order_by
  header_only: order_by
  hsc_flag: order_by
  hsc_proc: order_by
  hsc_proc_date: order_by
  incomplete: order_by
  is_checked_out: order_by
  is_hot: order_by
  is_rework: order_by
  last_user: order_by
  load_datex: order_by
  lsn_access_cntrl: order_by
  lsn_relevancy_date: order_by
  lvload: order_by
  lvload_date: order_by
  media_code: order_by
  media_count: order_by
  modified_date: order_by
  modified_user: order_by
  mts1: order_by
  mts2: order_by
  mts3: order_by
  mts4: order_by
  mts5: order_by
  ocr_load_date: order_by
  ocr_load_status: order_by
  ocr_moved: order_by
  on_irs: order_by
  p_acc_no: order_by
  pac_flag: order_by
  package_id: order_by
  pads_udi: order_by
  pctype: order_by
  pctype_date: order_by
  priv_att: order_by
  privacy: order_by
  privileged: order_by
  prop: order_by
  qa: order_by
  qa_record: order_by
  redaction_status: order_by
  released: order_by
  released_date: order_by
  relevancy: order_by
  ret_code: order_by
  rms_load_date: order_by
  rowid: order_by
  shipping_status: order_by
  splv: order_by
  splv_date: order_by
  staged: order_by
  staged_date: order_by
  status_code: order_by
  title: order_by
  title_redacted: order_by
  types_aggregate: efiles_type_aggregate_order_by
  unique_id: order_by
  xml_load_date: order_by
}

"""
primary key columns input for table: "efiles.doc_main"
"""
input efiles_doc_main_pk_columns_input {
  ads_udi: String!
}

"""
select columns of table "efiles.doc_main"
"""
enum efiles_doc_main_select_column {
  """
  column name
  """
  TEXT

  """
  column name
  """
  VERSION

  """
  column name
  """
  ads_bates_fpage

  """
  column name
  """
  ads_bates_lpage

  """
  column name
  """
  ads_bates_range

  """
  column name
  """
  ads_ctrname

  """
  column name
  """
  ads_docdates

  """
  column name
  """
  ads_fpack

  """
  column name
  """
  ads_fpage

  """
  column name
  """
  ads_lpack

  """
  column name
  """
  ads_lpage

  """
  column name
  """
  ads_udi

  """
  column name
  """
  batch_no

  """
  column name
  """
  bax_file_load_date

  """
  column name
  """
  box_no

  """
  column name
  """
  challenged

  """
  column name
  """
  challenged_date

  """
  column name
  """
  collection_id

  """
  column name
  """
  collection_type

  """
  column name
  """
  container

  """
  column name
  """
  created_date

  """
  column name
  """
  created_user

  """
  column name
  """
  ctr_page_range

  """
  column name
  """
  dat_file_load_date

  """
  column name
  """
  database_name

  """
  column name
  """
  dm_comment

  """
  column name
  """
  docdates_c

  """
  column name
  """
  dtype

  """
  column name
  """
  header_only

  """
  column name
  """
  hsc_flag

  """
  column name
  """
  hsc_proc

  """
  column name
  """
  hsc_proc_date

  """
  column name
  """
  incomplete

  """
  column name
  """
  is_checked_out

  """
  column name
  """
  is_hot

  """
  column name
  """
  is_rework

  """
  column name
  """
  last_user

  """
  column name
  """
  load_datex

  """
  column name
  """
  lsn_access_cntrl

  """
  column name
  """
  lsn_relevancy_date

  """
  column name
  """
  lvload

  """
  column name
  """
  lvload_date

  """
  column name
  """
  media_code

  """
  column name
  """
  media_count

  """
  column name
  """
  modified_date

  """
  column name
  """
  modified_user

  """
  column name
  """
  mts1

  """
  column name
  """
  mts2

  """
  column name
  """
  mts3

  """
  column name
  """
  mts4

  """
  column name
  """
  mts5

  """
  column name
  """
  ocr_load_date

  """
  column name
  """
  ocr_load_status

  """
  column name
  """
  ocr_moved

  """
  column name
  """
  on_irs

  """
  column name
  """
  p_acc_no

  """
  column name
  """
  pac_flag

  """
  column name
  """
  package_id

  """
  column name
  """
  pads_udi

  """
  column name
  """
  pctype

  """
  column name
  """
  pctype_date

  """
  column name
  """
  priv_att

  """
  column name
  """
  privacy

  """
  column name
  """
  privileged

  """
  column name
  """
  prop

  """
  column name
  """
  qa

  """
  column name
  """
  qa_record

  """
  column name
  """
  redaction_status

  """
  column name
  """
  released

  """
  column name
  """
  released_date

  """
  column name
  """
  relevancy

  """
  column name
  """
  ret_code

  """
  column name
  """
  rms_load_date

  """
  column name
  """
  rowid

  """
  column name
  """
  shipping_status

  """
  column name
  """
  splv

  """
  column name
  """
  splv_date

  """
  column name
  """
  staged

  """
  column name
  """
  staged_date

  """
  column name
  """
  status_code

  """
  column name
  """
  title

  """
  column name
  """
  title_redacted

  """
  column name
  """
  unique_id

  """
  column name
  """
  xml_load_date
}

"""
input type for updating data in table "efiles.doc_main"
"""
input efiles_doc_main_set_input {
  TEXT: bpchar
  VERSION: float8
  ads_bates_fpage: String
  ads_bates_lpage: String
  ads_bates_range: String
  ads_ctrname: String
  ads_docdates: String
  ads_fpack: numeric
  ads_fpage: numeric
  ads_lpack: numeric
  ads_lpage: numeric
  ads_udi: String
  batch_no: String
  bax_file_load_date: timestamp
  box_no: float8
  challenged: bpchar
  challenged_date: String
  collection_id: numeric
  collection_type: bpchar
  container: String
  created_date: timestamp
  created_user: String
  ctr_page_range: String
  dat_file_load_date: timestamp
  database_name: String
  dm_comment: String
  docdates_c: String
  dtype: bpchar
  header_only: String
  hsc_flag: bpchar
  hsc_proc: bpchar
  hsc_proc_date: timestamp
  incomplete: float8
  is_checked_out: bpchar
  is_hot: bpchar
  is_rework: bpchar
  last_user: String
  load_datex: timestamp
  lsn_access_cntrl: String
  lsn_relevancy_date: String
  lvload: String
  lvload_date: timestamp
  media_code: String
  media_count: float8
  modified_date: timestamp
  modified_user: String
  mts1: String
  mts2: String
  mts3: String
  mts4: String
  mts5: String
  ocr_load_date: timestamp
  ocr_load_status: bpchar
  ocr_moved: bpchar
  on_irs: String
  p_acc_no: String
  pac_flag: String
  package_id: String
  pads_udi: String
  pctype: String
  pctype_date: timestamp
  priv_att: bpchar
  privacy: bpchar
  privileged: bpchar
  prop: bpchar
  qa: String
  qa_record: bpchar
  redaction_status: bpchar
  released: bpchar
  released_date: timestamp
  relevancy: bpchar
  ret_code: bpchar
  rms_load_date: timestamp
  rowid: String
  shipping_status: bpchar
  splv: String
  splv_date: timestamp
  staged: bpchar
  staged_date: timestamp
  status_code: bpchar
  title: String
  title_redacted: String
  unique_id: String
  xml_load_date: timestamp
}

"""
aggregate stddev on columns
"""
type efiles_doc_main_stddev_fields {
  VERSION: Float
  ads_fpack: Float
  ads_fpage: Float
  ads_lpack: Float
  ads_lpage: Float
  box_no: Float
  collection_id: Float
  incomplete: Float
  media_count: Float
}

"""
order by stddev() on columns of table "efiles.doc_main"
"""
input efiles_doc_main_stddev_order_by {
  VERSION: order_by
  ads_fpack: order_by
  ads_fpage: order_by
  ads_lpack: order_by
  ads_lpage: order_by
  box_no: order_by
  collection_id: order_by
  incomplete: order_by
  media_count: order_by
}

"""
aggregate stddev_pop on columns
"""
type efiles_doc_main_stddev_pop_fields {
  VERSION: Float
  ads_fpack: Float
  ads_fpage: Float
  ads_lpack: Float
  ads_lpage: Float
  box_no: Float
  collection_id: Float
  incomplete: Float
  media_count: Float
}

"""
order by stddev_pop() on columns of table "efiles.doc_main"
"""
input efiles_doc_main_stddev_pop_order_by {
  VERSION: order_by
  ads_fpack: order_by
  ads_fpage: order_by
  ads_lpack: order_by
  ads_lpage: order_by
  box_no: order_by
  collection_id: order_by
  incomplete: order_by
  media_count: order_by
}

"""
aggregate stddev_samp on columns
"""
type efiles_doc_main_stddev_samp_fields {
  VERSION: Float
  ads_fpack: Float
  ads_fpage: Float
  ads_lpack: Float
  ads_lpage: Float
  box_no: Float
  collection_id: Float
  incomplete: Float
  media_count: Float
}

"""
order by stddev_samp() on columns of table "efiles.doc_main"
"""
input efiles_doc_main_stddev_samp_order_by {
  VERSION: order_by
  ads_fpack: order_by
  ads_fpage: order_by
  ads_lpack: order_by
  ads_lpage: order_by
  box_no: order_by
  collection_id: order_by
  incomplete: order_by
  media_count: order_by
}

"""
aggregate sum on columns
"""
type efiles_doc_main_sum_fields {
  VERSION: float8
  ads_fpack: numeric
  ads_fpage: numeric
  ads_lpack: numeric
  ads_lpage: numeric
  box_no: float8
  collection_id: numeric
  incomplete: float8
  media_count: float8
}

"""
order by sum() on columns of table "efiles.doc_main"
"""
input efiles_doc_main_sum_order_by {
  VERSION: order_by
  ads_fpack: order_by
  ads_fpage: order_by
  ads_lpack: order_by
  ads_lpage: order_by
  box_no: order_by
  collection_id: order_by
  incomplete: order_by
  media_count: order_by
}

"""
update columns of table "efiles.doc_main"
"""
enum efiles_doc_main_update_column {
  """
  column name
  """
  TEXT

  """
  column name
  """
  VERSION

  """
  column name
  """
  ads_bates_fpage

  """
  column name
  """
  ads_bates_lpage

  """
  column name
  """
  ads_bates_range

  """
  column name
  """
  ads_ctrname

  """
  column name
  """
  ads_docdates

  """
  column name
  """
  ads_fpack

  """
  column name
  """
  ads_fpage

  """
  column name
  """
  ads_lpack

  """
  column name
  """
  ads_lpage

  """
  column name
  """
  ads_udi

  """
  column name
  """
  batch_no

  """
  column name
  """
  bax_file_load_date

  """
  column name
  """
  box_no

  """
  column name
  """
  challenged

  """
  column name
  """
  challenged_date

  """
  column name
  """
  collection_id

  """
  column name
  """
  collection_type

  """
  column name
  """
  container

  """
  column name
  """
  created_date

  """
  column name
  """
  created_user

  """
  column name
  """
  ctr_page_range

  """
  column name
  """
  dat_file_load_date

  """
  column name
  """
  database_name

  """
  column name
  """
  dm_comment

  """
  column name
  """
  docdates_c

  """
  column name
  """
  dtype

  """
  column name
  """
  header_only

  """
  column name
  """
  hsc_flag

  """
  column name
  """
  hsc_proc

  """
  column name
  """
  hsc_proc_date

  """
  column name
  """
  incomplete

  """
  column name
  """
  is_checked_out

  """
  column name
  """
  is_hot

  """
  column name
  """
  is_rework

  """
  column name
  """
  last_user

  """
  column name
  """
  load_datex

  """
  column name
  """
  lsn_access_cntrl

  """
  column name
  """
  lsn_relevancy_date

  """
  column name
  """
  lvload

  """
  column name
  """
  lvload_date

  """
  column name
  """
  media_code

  """
  column name
  """
  media_count

  """
  column name
  """
  modified_date

  """
  column name
  """
  modified_user

  """
  column name
  """
  mts1

  """
  column name
  """
  mts2

  """
  column name
  """
  mts3

  """
  column name
  """
  mts4

  """
  column name
  """
  mts5

  """
  column name
  """
  ocr_load_date

  """
  column name
  """
  ocr_load_status

  """
  column name
  """
  ocr_moved

  """
  column name
  """
  on_irs

  """
  column name
  """
  p_acc_no

  """
  column name
  """
  pac_flag

  """
  column name
  """
  package_id

  """
  column name
  """
  pads_udi

  """
  column name
  """
  pctype

  """
  column name
  """
  pctype_date

  """
  column name
  """
  priv_att

  """
  column name
  """
  privacy

  """
  column name
  """
  privileged

  """
  column name
  """
  prop

  """
  column name
  """
  qa

  """
  column name
  """
  qa_record

  """
  column name
  """
  redaction_status

  """
  column name
  """
  released

  """
  column name
  """
  released_date

  """
  column name
  """
  relevancy

  """
  column name
  """
  ret_code

  """
  column name
  """
  rms_load_date

  """
  column name
  """
  rowid

  """
  column name
  """
  shipping_status

  """
  column name
  """
  splv

  """
  column name
  """
  splv_date

  """
  column name
  """
  staged

  """
  column name
  """
  staged_date

  """
  column name
  """
  status_code

  """
  column name
  """
  title

  """
  column name
  """
  title_redacted

  """
  column name
  """
  unique_id

  """
  column name
  """
  xml_load_date
}

"""
aggregate var_pop on columns
"""
type efiles_doc_main_var_pop_fields {
  VERSION: Float
  ads_fpack: Float
  ads_fpage: Float
  ads_lpack: Float
  ads_lpage: Float
  box_no: Float
  collection_id: Float
  incomplete: Float
  media_count: Float
}

"""
order by var_pop() on columns of table "efiles.doc_main"
"""
input efiles_doc_main_var_pop_order_by {
  VERSION: order_by
  ads_fpack: order_by
  ads_fpage: order_by
  ads_lpack: order_by
  ads_lpage: order_by
  box_no: order_by
  collection_id: order_by
  incomplete: order_by
  media_count: order_by
}

"""
aggregate var_samp on columns
"""
type efiles_doc_main_var_samp_fields {
  VERSION: Float
  ads_fpack: Float
  ads_fpage: Float
  ads_lpack: Float
  ads_lpage: Float
  box_no: Float
  collection_id: Float
  incomplete: Float
  media_count: Float
}

"""
order by var_samp() on columns of table "efiles.doc_main"
"""
input efiles_doc_main_var_samp_order_by {
  VERSION: order_by
  ads_fpack: order_by
  ads_fpage: order_by
  ads_lpack: order_by
  ads_lpage: order_by
  box_no: order_by
  collection_id: order_by
  incomplete: order_by
  media_count: order_by
}

"""
aggregate variance on columns
"""
type efiles_doc_main_variance_fields {
  VERSION: Float
  ads_fpack: Float
  ads_fpage: Float
  ads_lpack: Float
  ads_lpage: Float
  box_no: Float
  collection_id: Float
  incomplete: Float
  media_count: Float
}

"""
order by variance() on columns of table "efiles.doc_main"
"""
input efiles_doc_main_variance_order_by {
  VERSION: order_by
  ads_fpack: order_by
  ads_fpage: order_by
  ads_lpack: order_by
  ads_lpage: order_by
  box_no: order_by
  collection_id: order_by
  incomplete: order_by
  media_count: order_by
}

"""
columns and relationships of "efiles.doc_names"
"""
type efiles_doc_names {
  ads_udi: String
  created_date: timestamp
  created_user: String
  flag: bpchar
  modified_date: timestamp
  modified_user: String
  name: String
  name_id: numeric
  name_type: String
  org_id: numeric
  organization: String
  type: String
}

"""
aggregated selection of "efiles.doc_names"
"""
type efiles_doc_names_aggregate {
  aggregate: efiles_doc_names_aggregate_fields
  nodes: [efiles_doc_names!]!
}

"""
aggregate fields of "efiles.doc_names"
"""
type efiles_doc_names_aggregate_fields {
  avg: efiles_doc_names_avg_fields
  count(columns: [efiles_doc_names_select_column!], distinct: Boolean): Int
  max: efiles_doc_names_max_fields
  min: efiles_doc_names_min_fields
  stddev: efiles_doc_names_stddev_fields
  stddev_pop: efiles_doc_names_stddev_pop_fields
  stddev_samp: efiles_doc_names_stddev_samp_fields
  sum: efiles_doc_names_sum_fields
  var_pop: efiles_doc_names_var_pop_fields
  var_samp: efiles_doc_names_var_samp_fields
  variance: efiles_doc_names_variance_fields
}

"""
order by aggregate values of table "efiles.doc_names"
"""
input efiles_doc_names_aggregate_order_by {
  avg: efiles_doc_names_avg_order_by
  count: order_by
  max: efiles_doc_names_max_order_by
  min: efiles_doc_names_min_order_by
  stddev: efiles_doc_names_stddev_order_by
  stddev_pop: efiles_doc_names_stddev_pop_order_by
  stddev_samp: efiles_doc_names_stddev_samp_order_by
  sum: efiles_doc_names_sum_order_by
  var_pop: efiles_doc_names_var_pop_order_by
  var_samp: efiles_doc_names_var_samp_order_by
  variance: efiles_doc_names_variance_order_by
}

"""
aggregate avg on columns
"""
type efiles_doc_names_avg_fields {
  name_id: Float
  org_id: Float
}

"""
order by avg() on columns of table "efiles.doc_names"
"""
input efiles_doc_names_avg_order_by {
  name_id: order_by
  org_id: order_by
}

"""
Boolean expression to filter rows from the table "efiles.doc_names". All fields are combined with a logical 'AND'.
"""
input efiles_doc_names_bool_exp {
  _and: [efiles_doc_names_bool_exp]
  _not: efiles_doc_names_bool_exp
  _or: [efiles_doc_names_bool_exp]
  ads_udi: String_comparison_exp
  created_date: timestamp_comparison_exp
  created_user: String_comparison_exp
  flag: bpchar_comparison_exp
  modified_date: timestamp_comparison_exp
  modified_user: String_comparison_exp
  name: String_comparison_exp
  name_id: numeric_comparison_exp
  name_type: String_comparison_exp
  org_id: numeric_comparison_exp
  organization: String_comparison_exp
  type: String_comparison_exp
}

"""
aggregate max on columns
"""
type efiles_doc_names_max_fields {
  ads_udi: String
  created_date: timestamp
  created_user: String
  modified_date: timestamp
  modified_user: String
  name: String
  name_id: numeric
  name_type: String
  org_id: numeric
  organization: String
  type: String
}

"""
order by max() on columns of table "efiles.doc_names"
"""
input efiles_doc_names_max_order_by {
  ads_udi: order_by
  created_date: order_by
  created_user: order_by
  modified_date: order_by
  modified_user: order_by
  name: order_by
  name_id: order_by
  name_type: order_by
  org_id: order_by
  organization: order_by
  type: order_by
}

"""
aggregate min on columns
"""
type efiles_doc_names_min_fields {
  ads_udi: String
  created_date: timestamp
  created_user: String
  modified_date: timestamp
  modified_user: String
  name: String
  name_id: numeric
  name_type: String
  org_id: numeric
  organization: String
  type: String
}

"""
order by min() on columns of table "efiles.doc_names"
"""
input efiles_doc_names_min_order_by {
  ads_udi: order_by
  created_date: order_by
  created_user: order_by
  modified_date: order_by
  modified_user: order_by
  name: order_by
  name_id: order_by
  name_type: order_by
  org_id: order_by
  organization: order_by
  type: order_by
}

"""
ordering options when selecting data from "efiles.doc_names"
"""
input efiles_doc_names_order_by {
  ads_udi: order_by
  created_date: order_by
  created_user: order_by
  flag: order_by
  modified_date: order_by
  modified_user: order_by
  name: order_by
  name_id: order_by
  name_type: order_by
  org_id: order_by
  organization: order_by
  type: order_by
}

"""
select columns of table "efiles.doc_names"
"""
enum efiles_doc_names_select_column {
  """
  column name
  """
  ads_udi

  """
  column name
  """
  created_date

  """
  column name
  """
  created_user

  """
  column name
  """
  flag

  """
  column name
  """
  modified_date

  """
  column name
  """
  modified_user

  """
  column name
  """
  name

  """
  column name
  """
  name_id

  """
  column name
  """
  name_type

  """
  column name
  """
  org_id

  """
  column name
  """
  organization

  """
  column name
  """
  type
}

"""
aggregate stddev on columns
"""
type efiles_doc_names_stddev_fields {
  name_id: Float
  org_id: Float
}

"""
order by stddev() on columns of table "efiles.doc_names"
"""
input efiles_doc_names_stddev_order_by {
  name_id: order_by
  org_id: order_by
}

"""
aggregate stddev_pop on columns
"""
type efiles_doc_names_stddev_pop_fields {
  name_id: Float
  org_id: Float
}

"""
order by stddev_pop() on columns of table "efiles.doc_names"
"""
input efiles_doc_names_stddev_pop_order_by {
  name_id: order_by
  org_id: order_by
}

"""
aggregate stddev_samp on columns
"""
type efiles_doc_names_stddev_samp_fields {
  name_id: Float
  org_id: Float
}

"""
order by stddev_samp() on columns of table "efiles.doc_names"
"""
input efiles_doc_names_stddev_samp_order_by {
  name_id: order_by
  org_id: order_by
}

"""
aggregate sum on columns
"""
type efiles_doc_names_sum_fields {
  name_id: numeric
  org_id: numeric
}

"""
order by sum() on columns of table "efiles.doc_names"
"""
input efiles_doc_names_sum_order_by {
  name_id: order_by
  org_id: order_by
}

"""
aggregate var_pop on columns
"""
type efiles_doc_names_var_pop_fields {
  name_id: Float
  org_id: Float
}

"""
order by var_pop() on columns of table "efiles.doc_names"
"""
input efiles_doc_names_var_pop_order_by {
  name_id: order_by
  org_id: order_by
}

"""
aggregate var_samp on columns
"""
type efiles_doc_names_var_samp_fields {
  name_id: Float
  org_id: Float
}

"""
order by var_samp() on columns of table "efiles.doc_names"
"""
input efiles_doc_names_var_samp_order_by {
  name_id: order_by
  org_id: order_by
}

"""
aggregate variance on columns
"""
type efiles_doc_names_variance_fields {
  name_id: Float
  org_id: Float
}

"""
order by variance() on columns of table "efiles.doc_names"
"""
input efiles_doc_names_variance_order_by {
  name_id: order_by
  org_id: order_by
}

"""
columns and relationships of "efiles.ocr"
"""
type efiles_ocr {
  TEXT: String
  ads_firstbyte: float8
  ads_page: numeric!
  ads_udi: String!
  created_date: timestamp
  created_user: String
  highlite_fixed: String
  insert_date: timestamp
  modified_date: timestamp
  modified_user: String
  page_size: float8
  rowid: String!
}

"""
aggregated selection of "efiles.ocr"
"""
type efiles_ocr_aggregate {
  aggregate: efiles_ocr_aggregate_fields
  nodes: [efiles_ocr!]!
}

"""
aggregate fields of "efiles.ocr"
"""
type efiles_ocr_aggregate_fields {
  avg: efiles_ocr_avg_fields
  count(columns: [efiles_ocr_select_column!], distinct: Boolean): Int
  max: efiles_ocr_max_fields
  min: efiles_ocr_min_fields
  stddev: efiles_ocr_stddev_fields
  stddev_pop: efiles_ocr_stddev_pop_fields
  stddev_samp: efiles_ocr_stddev_samp_fields
  sum: efiles_ocr_sum_fields
  var_pop: efiles_ocr_var_pop_fields
  var_samp: efiles_ocr_var_samp_fields
  variance: efiles_ocr_variance_fields
}

"""
order by aggregate values of table "efiles.ocr"
"""
input efiles_ocr_aggregate_order_by {
  avg: efiles_ocr_avg_order_by
  count: order_by
  max: efiles_ocr_max_order_by
  min: efiles_ocr_min_order_by
  stddev: efiles_ocr_stddev_order_by
  stddev_pop: efiles_ocr_stddev_pop_order_by
  stddev_samp: efiles_ocr_stddev_samp_order_by
  sum: efiles_ocr_sum_order_by
  var_pop: efiles_ocr_var_pop_order_by
  var_samp: efiles_ocr_var_samp_order_by
  variance: efiles_ocr_variance_order_by
}

"""
input type for inserting array relation for remote table "efiles.ocr"
"""
input efiles_ocr_arr_rel_insert_input {
  data: [efiles_ocr_insert_input!]!
  on_conflict: efiles_ocr_on_conflict
}

"""
aggregate avg on columns
"""
type efiles_ocr_avg_fields {
  ads_firstbyte: Float
  ads_page: Float
  page_size: Float
}

"""
order by avg() on columns of table "efiles.ocr"
"""
input efiles_ocr_avg_order_by {
  ads_firstbyte: order_by
  ads_page: order_by
  page_size: order_by
}

"""
Boolean expression to filter rows from the table "efiles.ocr". All fields are combined with a logical 'AND'.
"""
input efiles_ocr_bool_exp {
  TEXT: String_comparison_exp
  _and: [efiles_ocr_bool_exp]
  _not: efiles_ocr_bool_exp
  _or: [efiles_ocr_bool_exp]
  ads_firstbyte: float8_comparison_exp
  ads_page: numeric_comparison_exp
  ads_udi: String_comparison_exp
  created_date: timestamp_comparison_exp
  created_user: String_comparison_exp
  highlite_fixed: String_comparison_exp
  insert_date: timestamp_comparison_exp
  modified_date: timestamp_comparison_exp
  modified_user: String_comparison_exp
  page_size: float8_comparison_exp
  rowid: String_comparison_exp
}

"""
unique or primary key constraints on table "efiles.ocr"
"""
enum efiles_ocr_constraint {
  """
  unique or primary key constraint
  """
  ocr_pkey
}

"""
input type for incrementing integer column in table "efiles.ocr"
"""
input efiles_ocr_inc_input {
  ads_firstbyte: float8
  ads_page: numeric
  page_size: float8
}

"""
input type for inserting data into table "efiles.ocr"
"""
input efiles_ocr_insert_input {
  TEXT: String
  ads_firstbyte: float8
  ads_page: numeric
  ads_udi: String
  created_date: timestamp
  created_user: String
  highlite_fixed: String
  insert_date: timestamp
  modified_date: timestamp
  modified_user: String
  page_size: float8
  rowid: String
}

"""
aggregate max on columns
"""
type efiles_ocr_max_fields {
  TEXT: String
  ads_firstbyte: float8
  ads_page: numeric
  ads_udi: String
  created_date: timestamp
  created_user: String
  highlite_fixed: String
  insert_date: timestamp
  modified_date: timestamp
  modified_user: String
  page_size: float8
  rowid: String
}

"""
order by max() on columns of table "efiles.ocr"
"""
input efiles_ocr_max_order_by {
  TEXT: order_by
  ads_firstbyte: order_by
  ads_page: order_by
  ads_udi: order_by
  created_date: order_by
  created_user: order_by
  highlite_fixed: order_by
  insert_date: order_by
  modified_date: order_by
  modified_user: order_by
  page_size: order_by
  rowid: order_by
}

"""
aggregate min on columns
"""
type efiles_ocr_min_fields {
  TEXT: String
  ads_firstbyte: float8
  ads_page: numeric
  ads_udi: String
  created_date: timestamp
  created_user: String
  highlite_fixed: String
  insert_date: timestamp
  modified_date: timestamp
  modified_user: String
  page_size: float8
  rowid: String
}

"""
order by min() on columns of table "efiles.ocr"
"""
input efiles_ocr_min_order_by {
  TEXT: order_by
  ads_firstbyte: order_by
  ads_page: order_by
  ads_udi: order_by
  created_date: order_by
  created_user: order_by
  highlite_fixed: order_by
  insert_date: order_by
  modified_date: order_by
  modified_user: order_by
  page_size: order_by
  rowid: order_by
}

"""
response of any mutation on the table "efiles.ocr"
"""
type efiles_ocr_mutation_response {
  """
  number of affected rows by the mutation
  """
  affected_rows: Int!

  """
  data of the affected rows by the mutation
  """
  returning: [efiles_ocr!]!
}

"""
input type for inserting object relation for remote table "efiles.ocr"
"""
input efiles_ocr_obj_rel_insert_input {
  data: efiles_ocr_insert_input!
  on_conflict: efiles_ocr_on_conflict
}

"""
on conflict condition type for table "efiles.ocr"
"""
input efiles_ocr_on_conflict {
  constraint: efiles_ocr_constraint!
  update_columns: [efiles_ocr_update_column!]!
  where: efiles_ocr_bool_exp
}

"""
ordering options when selecting data from "efiles.ocr"
"""
input efiles_ocr_order_by {
  TEXT: order_by
  ads_firstbyte: order_by
  ads_page: order_by
  ads_udi: order_by
  created_date: order_by
  created_user: order_by
  highlite_fixed: order_by
  insert_date: order_by
  modified_date: order_by
  modified_user: order_by
  page_size: order_by
  rowid: order_by
}

"""
primary key columns input for table: "efiles.ocr"
"""
input efiles_ocr_pk_columns_input {
  ads_page: numeric!
}

"""
select columns of table "efiles.ocr"
"""
enum efiles_ocr_select_column {
  """
  column name
  """
  TEXT

  """
  column name
  """
  ads_firstbyte

  """
  column name
  """
  ads_page

  """
  column name
  """
  ads_udi

  """
  column name
  """
  created_date

  """
  column name
  """
  created_user

  """
  column name
  """
  highlite_fixed

  """
  column name
  """
  insert_date

  """
  column name
  """
  modified_date

  """
  column name
  """
  modified_user

  """
  column name
  """
  page_size

  """
  column name
  """
  rowid
}

"""
input type for updating data in table "efiles.ocr"
"""
input efiles_ocr_set_input {
  TEXT: String
  ads_firstbyte: float8
  ads_page: numeric
  ads_udi: String
  created_date: timestamp
  created_user: String
  highlite_fixed: String
  insert_date: timestamp
  modified_date: timestamp
  modified_user: String
  page_size: float8
  rowid: String
}

"""
aggregate stddev on columns
"""
type efiles_ocr_stddev_fields {
  ads_firstbyte: Float
  ads_page: Float
  page_size: Float
}

"""
order by stddev() on columns of table "efiles.ocr"
"""
input efiles_ocr_stddev_order_by {
  ads_firstbyte: order_by
  ads_page: order_by
  page_size: order_by
}

"""
aggregate stddev_pop on columns
"""
type efiles_ocr_stddev_pop_fields {
  ads_firstbyte: Float
  ads_page: Float
  page_size: Float
}

"""
order by stddev_pop() on columns of table "efiles.ocr"
"""
input efiles_ocr_stddev_pop_order_by {
  ads_firstbyte: order_by
  ads_page: order_by
  page_size: order_by
}

"""
aggregate stddev_samp on columns
"""
type efiles_ocr_stddev_samp_fields {
  ads_firstbyte: Float
  ads_page: Float
  page_size: Float
}

"""
order by stddev_samp() on columns of table "efiles.ocr"
"""
input efiles_ocr_stddev_samp_order_by {
  ads_firstbyte: order_by
  ads_page: order_by
  page_size: order_by
}

"""
aggregate sum on columns
"""
type efiles_ocr_sum_fields {
  ads_firstbyte: float8
  ads_page: numeric
  page_size: float8
}

"""
order by sum() on columns of table "efiles.ocr"
"""
input efiles_ocr_sum_order_by {
  ads_firstbyte: order_by
  ads_page: order_by
  page_size: order_by
}

"""
update columns of table "efiles.ocr"
"""
enum efiles_ocr_update_column {
  """
  column name
  """
  TEXT

  """
  column name
  """
  ads_firstbyte

  """
  column name
  """
  ads_page

  """
  column name
  """
  ads_udi

  """
  column name
  """
  created_date

  """
  column name
  """
  created_user

  """
  column name
  """
  highlite_fixed

  """
  column name
  """
  insert_date

  """
  column name
  """
  modified_date

  """
  column name
  """
  modified_user

  """
  column name
  """
  page_size

  """
  column name
  """
  rowid
}

"""
aggregate var_pop on columns
"""
type efiles_ocr_var_pop_fields {
  ads_firstbyte: Float
  ads_page: Float
  page_size: Float
}

"""
order by var_pop() on columns of table "efiles.ocr"
"""
input efiles_ocr_var_pop_order_by {
  ads_firstbyte: order_by
  ads_page: order_by
  page_size: order_by
}

"""
aggregate var_samp on columns
"""
type efiles_ocr_var_samp_fields {
  ads_firstbyte: Float
  ads_page: Float
  page_size: Float
}

"""
order by var_samp() on columns of table "efiles.ocr"
"""
input efiles_ocr_var_samp_order_by {
  ads_firstbyte: order_by
  ads_page: order_by
  page_size: order_by
}

"""
aggregate variance on columns
"""
type efiles_ocr_variance_fields {
  ads_firstbyte: Float
  ads_page: Float
  page_size: Float
}

"""
order by variance() on columns of table "efiles.ocr"
"""
input efiles_ocr_variance_order_by {
  ads_firstbyte: order_by
  ads_page: order_by
  page_size: order_by
}

"""
columns and relationships of "efiles.redaction_types"
"""
type efiles_redaction_types {
  red_color: String
  red_id: numeric!
  red_type: String
}

"""
aggregated selection of "efiles.redaction_types"
"""
type efiles_redaction_types_aggregate {
  aggregate: efiles_redaction_types_aggregate_fields
  nodes: [efiles_redaction_types!]!
}

"""
aggregate fields of "efiles.redaction_types"
"""
type efiles_redaction_types_aggregate_fields {
  avg: efiles_redaction_types_avg_fields
  count(columns: [efiles_redaction_types_select_column!], distinct: Boolean): Int
  max: efiles_redaction_types_max_fields
  min: efiles_redaction_types_min_fields
  stddev: efiles_redaction_types_stddev_fields
  stddev_pop: efiles_redaction_types_stddev_pop_fields
  stddev_samp: efiles_redaction_types_stddev_samp_fields
  sum: efiles_redaction_types_sum_fields
  var_pop: efiles_redaction_types_var_pop_fields
  var_samp: efiles_redaction_types_var_samp_fields
  variance: efiles_redaction_types_variance_fields
}

"""
order by aggregate values of table "efiles.redaction_types"
"""
input efiles_redaction_types_aggregate_order_by {
  avg: efiles_redaction_types_avg_order_by
  count: order_by
  max: efiles_redaction_types_max_order_by
  min: efiles_redaction_types_min_order_by
  stddev: efiles_redaction_types_stddev_order_by
  stddev_pop: efiles_redaction_types_stddev_pop_order_by
  stddev_samp: efiles_redaction_types_stddev_samp_order_by
  sum: efiles_redaction_types_sum_order_by
  var_pop: efiles_redaction_types_var_pop_order_by
  var_samp: efiles_redaction_types_var_samp_order_by
  variance: efiles_redaction_types_variance_order_by
}

"""
input type for inserting array relation for remote table "efiles.redaction_types"
"""
input efiles_redaction_types_arr_rel_insert_input {
  data: [efiles_redaction_types_insert_input!]!
  on_conflict: efiles_redaction_types_on_conflict
}

"""
aggregate avg on columns
"""
type efiles_redaction_types_avg_fields {
  red_id: Float
}

"""
order by avg() on columns of table "efiles.redaction_types"
"""
input efiles_redaction_types_avg_order_by {
  red_id: order_by
}

"""
Boolean expression to filter rows from the table "efiles.redaction_types". All fields are combined with a logical 'AND'.
"""
input efiles_redaction_types_bool_exp {
  _and: [efiles_redaction_types_bool_exp]
  _not: efiles_redaction_types_bool_exp
  _or: [efiles_redaction_types_bool_exp]
  red_color: String_comparison_exp
  red_id: numeric_comparison_exp
  red_type: String_comparison_exp
}

"""
unique or primary key constraints on table "efiles.redaction_types"
"""
enum efiles_redaction_types_constraint {
  """
  unique or primary key constraint
  """
  redaction_types_pkey
}

"""
input type for incrementing integer column in table "efiles.redaction_types"
"""
input efiles_redaction_types_inc_input {
  red_id: numeric
}

"""
input type for inserting data into table "efiles.redaction_types"
"""
input efiles_redaction_types_insert_input {
  red_color: String
  red_id: numeric
  red_type: String
}

"""
aggregate max on columns
"""
type efiles_redaction_types_max_fields {
  red_color: String
  red_id: numeric
  red_type: String
}

"""
order by max() on columns of table "efiles.redaction_types"
"""
input efiles_redaction_types_max_order_by {
  red_color: order_by
  red_id: order_by
  red_type: order_by
}

"""
aggregate min on columns
"""
type efiles_redaction_types_min_fields {
  red_color: String
  red_id: numeric
  red_type: String
}

"""
order by min() on columns of table "efiles.redaction_types"
"""
input efiles_redaction_types_min_order_by {
  red_color: order_by
  red_id: order_by
  red_type: order_by
}

"""
response of any mutation on the table "efiles.redaction_types"
"""
type efiles_redaction_types_mutation_response {
  """
  number of affected rows by the mutation
  """
  affected_rows: Int!

  """
  data of the affected rows by the mutation
  """
  returning: [efiles_redaction_types!]!
}

"""
input type for inserting object relation for remote table "efiles.redaction_types"
"""
input efiles_redaction_types_obj_rel_insert_input {
  data: efiles_redaction_types_insert_input!
  on_conflict: efiles_redaction_types_on_conflict
}

"""
on conflict condition type for table "efiles.redaction_types"
"""
input efiles_redaction_types_on_conflict {
  constraint: efiles_redaction_types_constraint!
  update_columns: [efiles_redaction_types_update_column!]!
  where: efiles_redaction_types_bool_exp
}

"""
ordering options when selecting data from "efiles.redaction_types"
"""
input efiles_redaction_types_order_by {
  red_color: order_by
  red_id: order_by
  red_type: order_by
}

"""
primary key columns input for table: "efiles.redaction_types"
"""
input efiles_redaction_types_pk_columns_input {
  red_id: numeric!
}

"""
select columns of table "efiles.redaction_types"
"""
enum efiles_redaction_types_select_column {
  """
  column name
  """
  red_color

  """
  column name
  """
  red_id

  """
  column name
  """
  red_type
}

"""
input type for updating data in table "efiles.redaction_types"
"""
input efiles_redaction_types_set_input {
  red_color: String
  red_id: numeric
  red_type: String
}

"""
aggregate stddev on columns
"""
type efiles_redaction_types_stddev_fields {
  red_id: Float
}

"""
order by stddev() on columns of table "efiles.redaction_types"
"""
input efiles_redaction_types_stddev_order_by {
  red_id: order_by
}

"""
aggregate stddev_pop on columns
"""
type efiles_redaction_types_stddev_pop_fields {
  red_id: Float
}

"""
order by stddev_pop() on columns of table "efiles.redaction_types"
"""
input efiles_redaction_types_stddev_pop_order_by {
  red_id: order_by
}

"""
aggregate stddev_samp on columns
"""
type efiles_redaction_types_stddev_samp_fields {
  red_id: Float
}

"""
order by stddev_samp() on columns of table "efiles.redaction_types"
"""
input efiles_redaction_types_stddev_samp_order_by {
  red_id: order_by
}

"""
aggregate sum on columns
"""
type efiles_redaction_types_sum_fields {
  red_id: numeric
}

"""
order by sum() on columns of table "efiles.redaction_types"
"""
input efiles_redaction_types_sum_order_by {
  red_id: order_by
}

"""
update columns of table "efiles.redaction_types"
"""
enum efiles_redaction_types_update_column {
  """
  column name
  """
  red_color

  """
  column name
  """
  red_id

  """
  column name
  """
  red_type
}

"""
aggregate var_pop on columns
"""
type efiles_redaction_types_var_pop_fields {
  red_id: Float
}

"""
order by var_pop() on columns of table "efiles.redaction_types"
"""
input efiles_redaction_types_var_pop_order_by {
  red_id: order_by
}

"""
aggregate var_samp on columns
"""
type efiles_redaction_types_var_samp_fields {
  red_id: Float
}

"""
order by var_samp() on columns of table "efiles.redaction_types"
"""
input efiles_redaction_types_var_samp_order_by {
  red_id: order_by
}

"""
aggregate variance on columns
"""
type efiles_redaction_types_variance_fields {
  red_id: Float
}

"""
order by variance() on columns of table "efiles.redaction_types"
"""
input efiles_redaction_types_variance_order_by {
  red_id: order_by
}

"""
columns and relationships of "efiles.type"
"""
type efiles_type {
  ads_udi: String!
  created_date: timestamp
  created_user: String
  doc_type: String!
  modified_date: timestamp
  modified_user: String
  rowid: String!
}

"""
aggregated selection of "efiles.type"
"""
type efiles_type_aggregate {
  aggregate: efiles_type_aggregate_fields
  nodes: [efiles_type!]!
}

"""
aggregate fields of "efiles.type"
"""
type efiles_type_aggregate_fields {
  count(columns: [efiles_type_select_column!], distinct: Boolean): Int
  max: efiles_type_max_fields
  min: efiles_type_min_fields
}

"""
order by aggregate values of table "efiles.type"
"""
input efiles_type_aggregate_order_by {
  count: order_by
  max: efiles_type_max_order_by
  min: efiles_type_min_order_by
}

"""
input type for inserting array relation for remote table "efiles.type"
"""
input efiles_type_arr_rel_insert_input {
  data: [efiles_type_insert_input!]!
  on_conflict: efiles_type_on_conflict
}

"""
Boolean expression to filter rows from the table "efiles.type". All fields are combined with a logical 'AND'.
"""
input efiles_type_bool_exp {
  _and: [efiles_type_bool_exp]
  _not: efiles_type_bool_exp
  _or: [efiles_type_bool_exp]
  ads_udi: String_comparison_exp
  created_date: timestamp_comparison_exp
  created_user: String_comparison_exp
  doc_type: String_comparison_exp
  modified_date: timestamp_comparison_exp
  modified_user: String_comparison_exp
  rowid: String_comparison_exp
}

"""
unique or primary key constraints on table "efiles.type"
"""
enum efiles_type_constraint {
  """
  unique or primary key constraint
  """
  type_pkey
}

"""
input type for inserting data into table "efiles.type"
"""
input efiles_type_insert_input {
  ads_udi: String
  created_date: timestamp
  created_user: String
  doc_type: String
  modified_date: timestamp
  modified_user: String
  rowid: String
}

"""
columns and relationships of "efiles.type_lookup"
"""
type efiles_type_lookup {
  created_date: timestamp
  created_user: String
  doc_type: String!
  doc_type_lookup: String!
  modified_date: timestamp
  modified_user: String
  rowid: String
}

"""
aggregated selection of "efiles.type_lookup"
"""
type efiles_type_lookup_aggregate {
  aggregate: efiles_type_lookup_aggregate_fields
  nodes: [efiles_type_lookup!]!
}

"""
aggregate fields of "efiles.type_lookup"
"""
type efiles_type_lookup_aggregate_fields {
  count(columns: [efiles_type_lookup_select_column!], distinct: Boolean): Int
  max: efiles_type_lookup_max_fields
  min: efiles_type_lookup_min_fields
}

"""
order by aggregate values of table "efiles.type_lookup"
"""
input efiles_type_lookup_aggregate_order_by {
  count: order_by
  max: efiles_type_lookup_max_order_by
  min: efiles_type_lookup_min_order_by
}

"""
input type for inserting array relation for remote table "efiles.type_lookup"
"""
input efiles_type_lookup_arr_rel_insert_input {
  data: [efiles_type_lookup_insert_input!]!
}

"""
Boolean expression to filter rows from the table "efiles.type_lookup". All fields are combined with a logical 'AND'.
"""
input efiles_type_lookup_bool_exp {
  _and: [efiles_type_lookup_bool_exp]
  _not: efiles_type_lookup_bool_exp
  _or: [efiles_type_lookup_bool_exp]
  created_date: timestamp_comparison_exp
  created_user: String_comparison_exp
  doc_type: String_comparison_exp
  doc_type_lookup: String_comparison_exp
  modified_date: timestamp_comparison_exp
  modified_user: String_comparison_exp
  rowid: String_comparison_exp
}

"""
input type for inserting data into table "efiles.type_lookup"
"""
input efiles_type_lookup_insert_input {
  created_date: timestamp
  created_user: String
  doc_type: String
  doc_type_lookup: String
  modified_date: timestamp
  modified_user: String
  rowid: String
}

"""
aggregate max on columns
"""
type efiles_type_lookup_max_fields {
  created_date: timestamp
  created_user: String
  doc_type: String
  doc_type_lookup: String
  modified_date: timestamp
  modified_user: String
  rowid: String
}

"""
order by max() on columns of table "efiles.type_lookup"
"""
input efiles_type_lookup_max_order_by {
  created_date: order_by
  created_user: order_by
  doc_type: order_by
  doc_type_lookup: order_by
  modified_date: order_by
  modified_user: order_by
  rowid: order_by
}

"""
aggregate min on columns
"""
type efiles_type_lookup_min_fields {
  created_date: timestamp
  created_user: String
  doc_type: String
  doc_type_lookup: String
  modified_date: timestamp
  modified_user: String
  rowid: String
}

"""
order by min() on columns of table "efiles.type_lookup"
"""
input efiles_type_lookup_min_order_by {
  created_date: order_by
  created_user: order_by
  doc_type: order_by
  doc_type_lookup: order_by
  modified_date: order_by
  modified_user: order_by
  rowid: order_by
}

"""
response of any mutation on the table "efiles.type_lookup"
"""
type efiles_type_lookup_mutation_response {
  """
  number of affected rows by the mutation
  """
  affected_rows: Int!

  """
  data of the affected rows by the mutation
  """
  returning: [efiles_type_lookup!]!
}

"""
input type for inserting object relation for remote table "efiles.type_lookup"
"""
input efiles_type_lookup_obj_rel_insert_input {
  data: efiles_type_lookup_insert_input!
}

"""
ordering options when selecting data from "efiles.type_lookup"
"""
input efiles_type_lookup_order_by {
  created_date: order_by
  created_user: order_by
  doc_type: order_by
  doc_type_lookup: order_by
  modified_date: order_by
  modified_user: order_by
  rowid: order_by
}

"""
select columns of table "efiles.type_lookup"
"""
enum efiles_type_lookup_select_column {
  """
  column name
  """
  created_date

  """
  column name
  """
  created_user

  """
  column name
  """
  doc_type

  """
  column name
  """
  doc_type_lookup

  """
  column name
  """
  modified_date

  """
  column name
  """
  modified_user

  """
  column name
  """
  rowid
}

"""
input type for updating data in table "efiles.type_lookup"
"""
input efiles_type_lookup_set_input {
  created_date: timestamp
  created_user: String
  doc_type: String
  doc_type_lookup: String
  modified_date: timestamp
  modified_user: String
  rowid: String
}

"""
aggregate max on columns
"""
type efiles_type_max_fields {
  ads_udi: String
  created_date: timestamp
  created_user: String
  doc_type: String
  modified_date: timestamp
  modified_user: String
  rowid: String
}

"""
order by max() on columns of table "efiles.type"
"""
input efiles_type_max_order_by {
  ads_udi: order_by
  created_date: order_by
  created_user: order_by
  doc_type: order_by
  modified_date: order_by
  modified_user: order_by
  rowid: order_by
}

"""
aggregate min on columns
"""
type efiles_type_min_fields {
  ads_udi: String
  created_date: timestamp
  created_user: String
  doc_type: String
  modified_date: timestamp
  modified_user: String
  rowid: String
}

"""
order by min() on columns of table "efiles.type"
"""
input efiles_type_min_order_by {
  ads_udi: order_by
  created_date: order_by
  created_user: order_by
  doc_type: order_by
  modified_date: order_by
  modified_user: order_by
  rowid: order_by
}

"""
response of any mutation on the table "efiles.type"
"""
type efiles_type_mutation_response {
  """
  number of affected rows by the mutation
  """
  affected_rows: Int!

  """
  data of the affected rows by the mutation
  """
  returning: [efiles_type!]!
}

"""
input type for inserting object relation for remote table "efiles.type"
"""
input efiles_type_obj_rel_insert_input {
  data: efiles_type_insert_input!
  on_conflict: efiles_type_on_conflict
}

"""
on conflict condition type for table "efiles.type"
"""
input efiles_type_on_conflict {
  constraint: efiles_type_constraint!
  update_columns: [efiles_type_update_column!]!
  where: efiles_type_bool_exp
}

"""
ordering options when selecting data from "efiles.type"
"""
input efiles_type_order_by {
  ads_udi: order_by
  created_date: order_by
  created_user: order_by
  doc_type: order_by
  modified_date: order_by
  modified_user: order_by
  rowid: order_by
}

"""
primary key columns input for table: "efiles.type"
"""
input efiles_type_pk_columns_input {
  ads_udi: String!
  doc_type: String!
}

"""
select columns of table "efiles.type"
"""
enum efiles_type_select_column {
  """
  column name
  """
  ads_udi

  """
  column name
  """
  created_date

  """
  column name
  """
  created_user

  """
  column name
  """
  doc_type

  """
  column name
  """
  modified_date

  """
  column name
  """
  modified_user

  """
  column name
  """
  rowid
}

"""
input type for updating data in table "efiles.type"
"""
input efiles_type_set_input {
  ads_udi: String
  created_date: timestamp
  created_user: String
  doc_type: String
  modified_date: timestamp
  modified_user: String
  rowid: String
}

"""
update columns of table "efiles.type"
"""
enum efiles_type_update_column {
  """
  column name
  """
  ads_udi

  """
  column name
  """
  created_date

  """
  column name
  """
  created_user

  """
  column name
  """
  doc_type

  """
  column name
  """
  modified_date

  """
  column name
  """
  modified_user

  """
  column name
  """
  rowid
}

"""
columns and relationships of "email.doc_main"
"""
type email_doc_main {
  LOCATION: String
  TEXT: bpchar
  VERSION: float8
  ads_bates_fpage: String
  ads_bates_lpage: String
  ads_bates_range: String
  ads_ctrname: String!
  ads_docdates: String!
  ads_fpack: numeric
  ads_fpage: numeric!
  ads_lpack: numeric
  ads_lpage: numeric!
  ads_udi: String!
  attachment: bpchar
  batch_no: String
  bax_file_load_date: timestamp
  box_no: float8
  challenged: bpchar
  challenged_date: String
  collection_id: numeric
  collection_type: bpchar
  container: String
  created_date: timestamp
  created_user: String
  ctr_page_range: String
  dat_file_load_date: timestamp
  database_name: String
  dm_comment: String
  docdates_c: String
  dtype: bpchar
  filename: String
  header_only: String
  hsc_flag: bpchar
  hsc_proc: bpchar
  hsc_proc_date: timestamp
  is_checked_out: bpchar
  is_hot: bpchar
  is_rework: bpchar
  last_user: String
  load_datex: timestamp
  lsn_access_cntrl: String
  lsn_relevancy_date: String
  lvload: String
  lvload_date: timestamp
  media_code: String
  media_count: float8
  modified_date: timestamp
  modified_user: String
  mts1: String
  mts2: String
  mts3: String
  mts4: String
  mts5: String
  ocr_load_date: timestamp
  ocr_load_status: bpchar
  on_irs: String
  p_acc_no: String!
  pac_flag: String
  package_id: String
  pads_udi: String
  pctype: String
  pctype_date: timestamp
  prev_ads_udi: String
  priv_att: bpchar
  privacy: bpchar
  privileged: bpchar
  prop: bpchar
  qa: String
  qa_record: bpchar
  redaction_status: bpchar
  released: bpchar
  released_date: timestamp
  relevancy: bpchar
  ret_code: bpchar
  rms_load_date: timestamp
  rowid: String!
  shipping_status: bpchar
  splv: String
  splv_date: timestamp
  staged: bpchar
  staged_date: timestamp
  status_code: bpchar
  title: String!
  title_redacted: String

  """
  An array relationship
  """
  types(
    """
    distinct select on columns
    """
    distinct_on: [email_type_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [email_type_order_by!]

    """
    filter the rows returned
    """
    where: email_type_bool_exp
  ): [email_type!]!

  """
  An aggregated array relationship
  """
  types_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [email_type_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [email_type_order_by!]

    """
    filter the rows returned
    """
    where: email_type_bool_exp
  ): email_type_aggregate!
  xml_load_date: timestamp
}

"""
aggregated selection of "email.doc_main"
"""
type email_doc_main_aggregate {
  aggregate: email_doc_main_aggregate_fields
  nodes: [email_doc_main!]!
}

"""
aggregate fields of "email.doc_main"
"""
type email_doc_main_aggregate_fields {
  avg: email_doc_main_avg_fields
  count(columns: [email_doc_main_select_column!], distinct: Boolean): Int
  max: email_doc_main_max_fields
  min: email_doc_main_min_fields
  stddev: email_doc_main_stddev_fields
  stddev_pop: email_doc_main_stddev_pop_fields
  stddev_samp: email_doc_main_stddev_samp_fields
  sum: email_doc_main_sum_fields
  var_pop: email_doc_main_var_pop_fields
  var_samp: email_doc_main_var_samp_fields
  variance: email_doc_main_variance_fields
}

"""
order by aggregate values of table "email.doc_main"
"""
input email_doc_main_aggregate_order_by {
  avg: email_doc_main_avg_order_by
  count: order_by
  max: email_doc_main_max_order_by
  min: email_doc_main_min_order_by
  stddev: email_doc_main_stddev_order_by
  stddev_pop: email_doc_main_stddev_pop_order_by
  stddev_samp: email_doc_main_stddev_samp_order_by
  sum: email_doc_main_sum_order_by
  var_pop: email_doc_main_var_pop_order_by
  var_samp: email_doc_main_var_samp_order_by
  variance: email_doc_main_variance_order_by
}

"""
input type for inserting array relation for remote table "email.doc_main"
"""
input email_doc_main_arr_rel_insert_input {
  data: [email_doc_main_insert_input!]!
  on_conflict: email_doc_main_on_conflict
}

"""
aggregate avg on columns
"""
type email_doc_main_avg_fields {
  VERSION: Float
  ads_fpack: Float
  ads_fpage: Float
  ads_lpack: Float
  ads_lpage: Float
  box_no: Float
  collection_id: Float
  media_count: Float
}

"""
order by avg() on columns of table "email.doc_main"
"""
input email_doc_main_avg_order_by {
  VERSION: order_by
  ads_fpack: order_by
  ads_fpage: order_by
  ads_lpack: order_by
  ads_lpage: order_by
  box_no: order_by
  collection_id: order_by
  media_count: order_by
}

"""
Boolean expression to filter rows from the table "email.doc_main". All fields are combined with a logical 'AND'.
"""
input email_doc_main_bool_exp {
  LOCATION: String_comparison_exp
  TEXT: bpchar_comparison_exp
  VERSION: float8_comparison_exp
  _and: [email_doc_main_bool_exp]
  _not: email_doc_main_bool_exp
  _or: [email_doc_main_bool_exp]
  ads_bates_fpage: String_comparison_exp
  ads_bates_lpage: String_comparison_exp
  ads_bates_range: String_comparison_exp
  ads_ctrname: String_comparison_exp
  ads_docdates: String_comparison_exp
  ads_fpack: numeric_comparison_exp
  ads_fpage: numeric_comparison_exp
  ads_lpack: numeric_comparison_exp
  ads_lpage: numeric_comparison_exp
  ads_udi: String_comparison_exp
  attachment: bpchar_comparison_exp
  batch_no: String_comparison_exp
  bax_file_load_date: timestamp_comparison_exp
  box_no: float8_comparison_exp
  challenged: bpchar_comparison_exp
  challenged_date: String_comparison_exp
  collection_id: numeric_comparison_exp
  collection_type: bpchar_comparison_exp
  container: String_comparison_exp
  created_date: timestamp_comparison_exp
  created_user: String_comparison_exp
  ctr_page_range: String_comparison_exp
  dat_file_load_date: timestamp_comparison_exp
  database_name: String_comparison_exp
  dm_comment: String_comparison_exp
  docdates_c: String_comparison_exp
  dtype: bpchar_comparison_exp
  filename: String_comparison_exp
  header_only: String_comparison_exp
  hsc_flag: bpchar_comparison_exp
  hsc_proc: bpchar_comparison_exp
  hsc_proc_date: timestamp_comparison_exp
  is_checked_out: bpchar_comparison_exp
  is_hot: bpchar_comparison_exp
  is_rework: bpchar_comparison_exp
  last_user: String_comparison_exp
  load_datex: timestamp_comparison_exp
  lsn_access_cntrl: String_comparison_exp
  lsn_relevancy_date: String_comparison_exp
  lvload: String_comparison_exp
  lvload_date: timestamp_comparison_exp
  media_code: String_comparison_exp
  media_count: float8_comparison_exp
  modified_date: timestamp_comparison_exp
  modified_user: String_comparison_exp
  mts1: String_comparison_exp
  mts2: String_comparison_exp
  mts3: String_comparison_exp
  mts4: String_comparison_exp
  mts5: String_comparison_exp
  ocr_load_date: timestamp_comparison_exp
  ocr_load_status: bpchar_comparison_exp
  on_irs: String_comparison_exp
  p_acc_no: String_comparison_exp
  pac_flag: String_comparison_exp
  package_id: String_comparison_exp
  pads_udi: String_comparison_exp
  pctype: String_comparison_exp
  pctype_date: timestamp_comparison_exp
  prev_ads_udi: String_comparison_exp
  priv_att: bpchar_comparison_exp
  privacy: bpchar_comparison_exp
  privileged: bpchar_comparison_exp
  prop: bpchar_comparison_exp
  qa: String_comparison_exp
  qa_record: bpchar_comparison_exp
  redaction_status: bpchar_comparison_exp
  released: bpchar_comparison_exp
  released_date: timestamp_comparison_exp
  relevancy: bpchar_comparison_exp
  ret_code: bpchar_comparison_exp
  rms_load_date: timestamp_comparison_exp
  rowid: String_comparison_exp
  shipping_status: bpchar_comparison_exp
  splv: String_comparison_exp
  splv_date: timestamp_comparison_exp
  staged: bpchar_comparison_exp
  staged_date: timestamp_comparison_exp
  status_code: bpchar_comparison_exp
  title: String_comparison_exp
  title_redacted: String_comparison_exp
  types: email_type_bool_exp
  xml_load_date: timestamp_comparison_exp
}

"""
unique or primary key constraints on table "email.doc_main"
"""
enum email_doc_main_constraint {
  """
  unique or primary key constraint
  """
  doc_main_pkey
}

"""
input type for incrementing integer column in table "email.doc_main"
"""
input email_doc_main_inc_input {
  VERSION: float8
  ads_fpack: numeric
  ads_fpage: numeric
  ads_lpack: numeric
  ads_lpage: numeric
  box_no: float8
  collection_id: numeric
  media_count: float8
}

"""
input type for inserting data into table "email.doc_main"
"""
input email_doc_main_insert_input {
  LOCATION: String
  TEXT: bpchar
  VERSION: float8
  ads_bates_fpage: String
  ads_bates_lpage: String
  ads_bates_range: String
  ads_ctrname: String
  ads_docdates: String
  ads_fpack: numeric
  ads_fpage: numeric
  ads_lpack: numeric
  ads_lpage: numeric
  ads_udi: String
  attachment: bpchar
  batch_no: String
  bax_file_load_date: timestamp
  box_no: float8
  challenged: bpchar
  challenged_date: String
  collection_id: numeric
  collection_type: bpchar
  container: String
  created_date: timestamp
  created_user: String
  ctr_page_range: String
  dat_file_load_date: timestamp
  database_name: String
  dm_comment: String
  docdates_c: String
  dtype: bpchar
  filename: String
  header_only: String
  hsc_flag: bpchar
  hsc_proc: bpchar
  hsc_proc_date: timestamp
  is_checked_out: bpchar
  is_hot: bpchar
  is_rework: bpchar
  last_user: String
  load_datex: timestamp
  lsn_access_cntrl: String
  lsn_relevancy_date: String
  lvload: String
  lvload_date: timestamp
  media_code: String
  media_count: float8
  modified_date: timestamp
  modified_user: String
  mts1: String
  mts2: String
  mts3: String
  mts4: String
  mts5: String
  ocr_load_date: timestamp
  ocr_load_status: bpchar
  on_irs: String
  p_acc_no: String
  pac_flag: String
  package_id: String
  pads_udi: String
  pctype: String
  pctype_date: timestamp
  prev_ads_udi: String
  priv_att: bpchar
  privacy: bpchar
  privileged: bpchar
  prop: bpchar
  qa: String
  qa_record: bpchar
  redaction_status: bpchar
  released: bpchar
  released_date: timestamp
  relevancy: bpchar
  ret_code: bpchar
  rms_load_date: timestamp
  rowid: String
  shipping_status: bpchar
  splv: String
  splv_date: timestamp
  staged: bpchar
  staged_date: timestamp
  status_code: bpchar
  title: String
  title_redacted: String
  types: email_type_arr_rel_insert_input
  xml_load_date: timestamp
}

"""
aggregate max on columns
"""
type email_doc_main_max_fields {
  LOCATION: String
  VERSION: float8
  ads_bates_fpage: String
  ads_bates_lpage: String
  ads_bates_range: String
  ads_ctrname: String
  ads_docdates: String
  ads_fpack: numeric
  ads_fpage: numeric
  ads_lpack: numeric
  ads_lpage: numeric
  ads_udi: String
  batch_no: String
  bax_file_load_date: timestamp
  box_no: float8
  challenged_date: String
  collection_id: numeric
  container: String
  created_date: timestamp
  created_user: String
  ctr_page_range: String
  dat_file_load_date: timestamp
  database_name: String
  dm_comment: String
  docdates_c: String
  filename: String
  header_only: String
  hsc_proc_date: timestamp
  last_user: String
  load_datex: timestamp
  lsn_access_cntrl: String
  lsn_relevancy_date: String
  lvload: String
  lvload_date: timestamp
  media_code: String
  media_count: float8
  modified_date: timestamp
  modified_user: String
  mts1: String
  mts2: String
  mts3: String
  mts4: String
  mts5: String
  ocr_load_date: timestamp
  on_irs: String
  p_acc_no: String
  pac_flag: String
  package_id: String
  pads_udi: String
  pctype: String
  pctype_date: timestamp
  prev_ads_udi: String
  qa: String
  released_date: timestamp
  rms_load_date: timestamp
  rowid: String
  splv: String
  splv_date: timestamp
  staged_date: timestamp
  title: String
  title_redacted: String
  xml_load_date: timestamp
}

"""
order by max() on columns of table "email.doc_main"
"""
input email_doc_main_max_order_by {
  LOCATION: order_by
  VERSION: order_by
  ads_bates_fpage: order_by
  ads_bates_lpage: order_by
  ads_bates_range: order_by
  ads_ctrname: order_by
  ads_docdates: order_by
  ads_fpack: order_by
  ads_fpage: order_by
  ads_lpack: order_by
  ads_lpage: order_by
  ads_udi: order_by
  batch_no: order_by
  bax_file_load_date: order_by
  box_no: order_by
  challenged_date: order_by
  collection_id: order_by
  container: order_by
  created_date: order_by
  created_user: order_by
  ctr_page_range: order_by
  dat_file_load_date: order_by
  database_name: order_by
  dm_comment: order_by
  docdates_c: order_by
  filename: order_by
  header_only: order_by
  hsc_proc_date: order_by
  last_user: order_by
  load_datex: order_by
  lsn_access_cntrl: order_by
  lsn_relevancy_date: order_by
  lvload: order_by
  lvload_date: order_by
  media_code: order_by
  media_count: order_by
  modified_date: order_by
  modified_user: order_by
  mts1: order_by
  mts2: order_by
  mts3: order_by
  mts4: order_by
  mts5: order_by
  ocr_load_date: order_by
  on_irs: order_by
  p_acc_no: order_by
  pac_flag: order_by
  package_id: order_by
  pads_udi: order_by
  pctype: order_by
  pctype_date: order_by
  prev_ads_udi: order_by
  qa: order_by
  released_date: order_by
  rms_load_date: order_by
  rowid: order_by
  splv: order_by
  splv_date: order_by
  staged_date: order_by
  title: order_by
  title_redacted: order_by
  xml_load_date: order_by
}

"""
aggregate min on columns
"""
type email_doc_main_min_fields {
  LOCATION: String
  VERSION: float8
  ads_bates_fpage: String
  ads_bates_lpage: String
  ads_bates_range: String
  ads_ctrname: String
  ads_docdates: String
  ads_fpack: numeric
  ads_fpage: numeric
  ads_lpack: numeric
  ads_lpage: numeric
  ads_udi: String
  batch_no: String
  bax_file_load_date: timestamp
  box_no: float8
  challenged_date: String
  collection_id: numeric
  container: String
  created_date: timestamp
  created_user: String
  ctr_page_range: String
  dat_file_load_date: timestamp
  database_name: String
  dm_comment: String
  docdates_c: String
  filename: String
  header_only: String
  hsc_proc_date: timestamp
  last_user: String
  load_datex: timestamp
  lsn_access_cntrl: String
  lsn_relevancy_date: String
  lvload: String
  lvload_date: timestamp
  media_code: String
  media_count: float8
  modified_date: timestamp
  modified_user: String
  mts1: String
  mts2: String
  mts3: String
  mts4: String
  mts5: String
  ocr_load_date: timestamp
  on_irs: String
  p_acc_no: String
  pac_flag: String
  package_id: String
  pads_udi: String
  pctype: String
  pctype_date: timestamp
  prev_ads_udi: String
  qa: String
  released_date: timestamp
  rms_load_date: timestamp
  rowid: String
  splv: String
  splv_date: timestamp
  staged_date: timestamp
  title: String
  title_redacted: String
  xml_load_date: timestamp
}

"""
order by min() on columns of table "email.doc_main"
"""
input email_doc_main_min_order_by {
  LOCATION: order_by
  VERSION: order_by
  ads_bates_fpage: order_by
  ads_bates_lpage: order_by
  ads_bates_range: order_by
  ads_ctrname: order_by
  ads_docdates: order_by
  ads_fpack: order_by
  ads_fpage: order_by
  ads_lpack: order_by
  ads_lpage: order_by
  ads_udi: order_by
  batch_no: order_by
  bax_file_load_date: order_by
  box_no: order_by
  challenged_date: order_by
  collection_id: order_by
  container: order_by
  created_date: order_by
  created_user: order_by
  ctr_page_range: order_by
  dat_file_load_date: order_by
  database_name: order_by
  dm_comment: order_by
  docdates_c: order_by
  filename: order_by
  header_only: order_by
  hsc_proc_date: order_by
  last_user: order_by
  load_datex: order_by
  lsn_access_cntrl: order_by
  lsn_relevancy_date: order_by
  lvload: order_by
  lvload_date: order_by
  media_code: order_by
  media_count: order_by
  modified_date: order_by
  modified_user: order_by
  mts1: order_by
  mts2: order_by
  mts3: order_by
  mts4: order_by
  mts5: order_by
  ocr_load_date: order_by
  on_irs: order_by
  p_acc_no: order_by
  pac_flag: order_by
  package_id: order_by
  pads_udi: order_by
  pctype: order_by
  pctype_date: order_by
  prev_ads_udi: order_by
  qa: order_by
  released_date: order_by
  rms_load_date: order_by
  rowid: order_by
  splv: order_by
  splv_date: order_by
  staged_date: order_by
  title: order_by
  title_redacted: order_by
  xml_load_date: order_by
}

"""
response of any mutation on the table "email.doc_main"
"""
type email_doc_main_mutation_response {
  """
  number of affected rows by the mutation
  """
  affected_rows: Int!

  """
  data of the affected rows by the mutation
  """
  returning: [email_doc_main!]!
}

"""
input type for inserting object relation for remote table "email.doc_main"
"""
input email_doc_main_obj_rel_insert_input {
  data: email_doc_main_insert_input!
  on_conflict: email_doc_main_on_conflict
}

"""
on conflict condition type for table "email.doc_main"
"""
input email_doc_main_on_conflict {
  constraint: email_doc_main_constraint!
  update_columns: [email_doc_main_update_column!]!
  where: email_doc_main_bool_exp
}

"""
ordering options when selecting data from "email.doc_main"
"""
input email_doc_main_order_by {
  LOCATION: order_by
  TEXT: order_by
  VERSION: order_by
  ads_bates_fpage: order_by
  ads_bates_lpage: order_by
  ads_bates_range: order_by
  ads_ctrname: order_by
  ads_docdates: order_by
  ads_fpack: order_by
  ads_fpage: order_by
  ads_lpack: order_by
  ads_lpage: order_by
  ads_udi: order_by
  attachment: order_by
  batch_no: order_by
  bax_file_load_date: order_by
  box_no: order_by
  challenged: order_by
  challenged_date: order_by
  collection_id: order_by
  collection_type: order_by
  container: order_by
  created_date: order_by
  created_user: order_by
  ctr_page_range: order_by
  dat_file_load_date: order_by
  database_name: order_by
  dm_comment: order_by
  docdates_c: order_by
  dtype: order_by
  filename: order_by
  header_only: order_by
  hsc_flag: order_by
  hsc_proc: order_by
  hsc_proc_date: order_by
  is_checked_out: order_by
  is_hot: order_by
  is_rework: order_by
  last_user: order_by
  load_datex: order_by
  lsn_access_cntrl: order_by
  lsn_relevancy_date: order_by
  lvload: order_by
  lvload_date: order_by
  media_code: order_by
  media_count: order_by
  modified_date: order_by
  modified_user: order_by
  mts1: order_by
  mts2: order_by
  mts3: order_by
  mts4: order_by
  mts5: order_by
  ocr_load_date: order_by
  ocr_load_status: order_by
  on_irs: order_by
  p_acc_no: order_by
  pac_flag: order_by
  package_id: order_by
  pads_udi: order_by
  pctype: order_by
  pctype_date: order_by
  prev_ads_udi: order_by
  priv_att: order_by
  privacy: order_by
  privileged: order_by
  prop: order_by
  qa: order_by
  qa_record: order_by
  redaction_status: order_by
  released: order_by
  released_date: order_by
  relevancy: order_by
  ret_code: order_by
  rms_load_date: order_by
  rowid: order_by
  shipping_status: order_by
  splv: order_by
  splv_date: order_by
  staged: order_by
  staged_date: order_by
  status_code: order_by
  title: order_by
  title_redacted: order_by
  types_aggregate: email_type_aggregate_order_by
  xml_load_date: order_by
}

"""
primary key columns input for table: "email.doc_main"
"""
input email_doc_main_pk_columns_input {
  ads_udi: String!
}

"""
select columns of table "email.doc_main"
"""
enum email_doc_main_select_column {
  """
  column name
  """
  LOCATION

  """
  column name
  """
  TEXT

  """
  column name
  """
  VERSION

  """
  column name
  """
  ads_bates_fpage

  """
  column name
  """
  ads_bates_lpage

  """
  column name
  """
  ads_bates_range

  """
  column name
  """
  ads_ctrname

  """
  column name
  """
  ads_docdates

  """
  column name
  """
  ads_fpack

  """
  column name
  """
  ads_fpage

  """
  column name
  """
  ads_lpack

  """
  column name
  """
  ads_lpage

  """
  column name
  """
  ads_udi

  """
  column name
  """
  attachment

  """
  column name
  """
  batch_no

  """
  column name
  """
  bax_file_load_date

  """
  column name
  """
  box_no

  """
  column name
  """
  challenged

  """
  column name
  """
  challenged_date

  """
  column name
  """
  collection_id

  """
  column name
  """
  collection_type

  """
  column name
  """
  container

  """
  column name
  """
  created_date

  """
  column name
  """
  created_user

  """
  column name
  """
  ctr_page_range

  """
  column name
  """
  dat_file_load_date

  """
  column name
  """
  database_name

  """
  column name
  """
  dm_comment

  """
  column name
  """
  docdates_c

  """
  column name
  """
  dtype

  """
  column name
  """
  filename

  """
  column name
  """
  header_only

  """
  column name
  """
  hsc_flag

  """
  column name
  """
  hsc_proc

  """
  column name
  """
  hsc_proc_date

  """
  column name
  """
  is_checked_out

  """
  column name
  """
  is_hot

  """
  column name
  """
  is_rework

  """
  column name
  """
  last_user

  """
  column name
  """
  load_datex

  """
  column name
  """
  lsn_access_cntrl

  """
  column name
  """
  lsn_relevancy_date

  """
  column name
  """
  lvload

  """
  column name
  """
  lvload_date

  """
  column name
  """
  media_code

  """
  column name
  """
  media_count

  """
  column name
  """
  modified_date

  """
  column name
  """
  modified_user

  """
  column name
  """
  mts1

  """
  column name
  """
  mts2

  """
  column name
  """
  mts3

  """
  column name
  """
  mts4

  """
  column name
  """
  mts5

  """
  column name
  """
  ocr_load_date

  """
  column name
  """
  ocr_load_status

  """
  column name
  """
  on_irs

  """
  column name
  """
  p_acc_no

  """
  column name
  """
  pac_flag

  """
  column name
  """
  package_id

  """
  column name
  """
  pads_udi

  """
  column name
  """
  pctype

  """
  column name
  """
  pctype_date

  """
  column name
  """
  prev_ads_udi

  """
  column name
  """
  priv_att

  """
  column name
  """
  privacy

  """
  column name
  """
  privileged

  """
  column name
  """
  prop

  """
  column name
  """
  qa

  """
  column name
  """
  qa_record

  """
  column name
  """
  redaction_status

  """
  column name
  """
  released

  """
  column name
  """
  released_date

  """
  column name
  """
  relevancy

  """
  column name
  """
  ret_code

  """
  column name
  """
  rms_load_date

  """
  column name
  """
  rowid

  """
  column name
  """
  shipping_status

  """
  column name
  """
  splv

  """
  column name
  """
  splv_date

  """
  column name
  """
  staged

  """
  column name
  """
  staged_date

  """
  column name
  """
  status_code

  """
  column name
  """
  title

  """
  column name
  """
  title_redacted

  """
  column name
  """
  xml_load_date
}

"""
input type for updating data in table "email.doc_main"
"""
input email_doc_main_set_input {
  LOCATION: String
  TEXT: bpchar
  VERSION: float8
  ads_bates_fpage: String
  ads_bates_lpage: String
  ads_bates_range: String
  ads_ctrname: String
  ads_docdates: String
  ads_fpack: numeric
  ads_fpage: numeric
  ads_lpack: numeric
  ads_lpage: numeric
  ads_udi: String
  attachment: bpchar
  batch_no: String
  bax_file_load_date: timestamp
  box_no: float8
  challenged: bpchar
  challenged_date: String
  collection_id: numeric
  collection_type: bpchar
  container: String
  created_date: timestamp
  created_user: String
  ctr_page_range: String
  dat_file_load_date: timestamp
  database_name: String
  dm_comment: String
  docdates_c: String
  dtype: bpchar
  filename: String
  header_only: String
  hsc_flag: bpchar
  hsc_proc: bpchar
  hsc_proc_date: timestamp
  is_checked_out: bpchar
  is_hot: bpchar
  is_rework: bpchar
  last_user: String
  load_datex: timestamp
  lsn_access_cntrl: String
  lsn_relevancy_date: String
  lvload: String
  lvload_date: timestamp
  media_code: String
  media_count: float8
  modified_date: timestamp
  modified_user: String
  mts1: String
  mts2: String
  mts3: String
  mts4: String
  mts5: String
  ocr_load_date: timestamp
  ocr_load_status: bpchar
  on_irs: String
  p_acc_no: String
  pac_flag: String
  package_id: String
  pads_udi: String
  pctype: String
  pctype_date: timestamp
  prev_ads_udi: String
  priv_att: bpchar
  privacy: bpchar
  privileged: bpchar
  prop: bpchar
  qa: String
  qa_record: bpchar
  redaction_status: bpchar
  released: bpchar
  released_date: timestamp
  relevancy: bpchar
  ret_code: bpchar
  rms_load_date: timestamp
  rowid: String
  shipping_status: bpchar
  splv: String
  splv_date: timestamp
  staged: bpchar
  staged_date: timestamp
  status_code: bpchar
  title: String
  title_redacted: String
  xml_load_date: timestamp
}

"""
aggregate stddev on columns
"""
type email_doc_main_stddev_fields {
  VERSION: Float
  ads_fpack: Float
  ads_fpage: Float
  ads_lpack: Float
  ads_lpage: Float
  box_no: Float
  collection_id: Float
  media_count: Float
}

"""
order by stddev() on columns of table "email.doc_main"
"""
input email_doc_main_stddev_order_by {
  VERSION: order_by
  ads_fpack: order_by
  ads_fpage: order_by
  ads_lpack: order_by
  ads_lpage: order_by
  box_no: order_by
  collection_id: order_by
  media_count: order_by
}

"""
aggregate stddev_pop on columns
"""
type email_doc_main_stddev_pop_fields {
  VERSION: Float
  ads_fpack: Float
  ads_fpage: Float
  ads_lpack: Float
  ads_lpage: Float
  box_no: Float
  collection_id: Float
  media_count: Float
}

"""
order by stddev_pop() on columns of table "email.doc_main"
"""
input email_doc_main_stddev_pop_order_by {
  VERSION: order_by
  ads_fpack: order_by
  ads_fpage: order_by
  ads_lpack: order_by
  ads_lpage: order_by
  box_no: order_by
  collection_id: order_by
  media_count: order_by
}

"""
aggregate stddev_samp on columns
"""
type email_doc_main_stddev_samp_fields {
  VERSION: Float
  ads_fpack: Float
  ads_fpage: Float
  ads_lpack: Float
  ads_lpage: Float
  box_no: Float
  collection_id: Float
  media_count: Float
}

"""
order by stddev_samp() on columns of table "email.doc_main"
"""
input email_doc_main_stddev_samp_order_by {
  VERSION: order_by
  ads_fpack: order_by
  ads_fpage: order_by
  ads_lpack: order_by
  ads_lpage: order_by
  box_no: order_by
  collection_id: order_by
  media_count: order_by
}

"""
aggregate sum on columns
"""
type email_doc_main_sum_fields {
  VERSION: float8
  ads_fpack: numeric
  ads_fpage: numeric
  ads_lpack: numeric
  ads_lpage: numeric
  box_no: float8
  collection_id: numeric
  media_count: float8
}

"""
order by sum() on columns of table "email.doc_main"
"""
input email_doc_main_sum_order_by {
  VERSION: order_by
  ads_fpack: order_by
  ads_fpage: order_by
  ads_lpack: order_by
  ads_lpage: order_by
  box_no: order_by
  collection_id: order_by
  media_count: order_by
}

"""
update columns of table "email.doc_main"
"""
enum email_doc_main_update_column {
  """
  column name
  """
  LOCATION

  """
  column name
  """
  TEXT

  """
  column name
  """
  VERSION

  """
  column name
  """
  ads_bates_fpage

  """
  column name
  """
  ads_bates_lpage

  """
  column name
  """
  ads_bates_range

  """
  column name
  """
  ads_ctrname

  """
  column name
  """
  ads_docdates

  """
  column name
  """
  ads_fpack

  """
  column name
  """
  ads_fpage

  """
  column name
  """
  ads_lpack

  """
  column name
  """
  ads_lpage

  """
  column name
  """
  ads_udi

  """
  column name
  """
  attachment

  """
  column name
  """
  batch_no

  """
  column name
  """
  bax_file_load_date

  """
  column name
  """
  box_no

  """
  column name
  """
  challenged

  """
  column name
  """
  challenged_date

  """
  column name
  """
  collection_id

  """
  column name
  """
  collection_type

  """
  column name
  """
  container

  """
  column name
  """
  created_date

  """
  column name
  """
  created_user

  """
  column name
  """
  ctr_page_range

  """
  column name
  """
  dat_file_load_date

  """
  column name
  """
  database_name

  """
  column name
  """
  dm_comment

  """
  column name
  """
  docdates_c

  """
  column name
  """
  dtype

  """
  column name
  """
  filename

  """
  column name
  """
  header_only

  """
  column name
  """
  hsc_flag

  """
  column name
  """
  hsc_proc

  """
  column name
  """
  hsc_proc_date

  """
  column name
  """
  is_checked_out

  """
  column name
  """
  is_hot

  """
  column name
  """
  is_rework

  """
  column name
  """
  last_user

  """
  column name
  """
  load_datex

  """
  column name
  """
  lsn_access_cntrl

  """
  column name
  """
  lsn_relevancy_date

  """
  column name
  """
  lvload

  """
  column name
  """
  lvload_date

  """
  column name
  """
  media_code

  """
  column name
  """
  media_count

  """
  column name
  """
  modified_date

  """
  column name
  """
  modified_user

  """
  column name
  """
  mts1

  """
  column name
  """
  mts2

  """
  column name
  """
  mts3

  """
  column name
  """
  mts4

  """
  column name
  """
  mts5

  """
  column name
  """
  ocr_load_date

  """
  column name
  """
  ocr_load_status

  """
  column name
  """
  on_irs

  """
  column name
  """
  p_acc_no

  """
  column name
  """
  pac_flag

  """
  column name
  """
  package_id

  """
  column name
  """
  pads_udi

  """
  column name
  """
  pctype

  """
  column name
  """
  pctype_date

  """
  column name
  """
  prev_ads_udi

  """
  column name
  """
  priv_att

  """
  column name
  """
  privacy

  """
  column name
  """
  privileged

  """
  column name
  """
  prop

  """
  column name
  """
  qa

  """
  column name
  """
  qa_record

  """
  column name
  """
  redaction_status

  """
  column name
  """
  released

  """
  column name
  """
  released_date

  """
  column name
  """
  relevancy

  """
  column name
  """
  ret_code

  """
  column name
  """
  rms_load_date

  """
  column name
  """
  rowid

  """
  column name
  """
  shipping_status

  """
  column name
  """
  splv

  """
  column name
  """
  splv_date

  """
  column name
  """
  staged

  """
  column name
  """
  staged_date

  """
  column name
  """
  status_code

  """
  column name
  """
  title

  """
  column name
  """
  title_redacted

  """
  column name
  """
  xml_load_date
}

"""
aggregate var_pop on columns
"""
type email_doc_main_var_pop_fields {
  VERSION: Float
  ads_fpack: Float
  ads_fpage: Float
  ads_lpack: Float
  ads_lpage: Float
  box_no: Float
  collection_id: Float
  media_count: Float
}

"""
order by var_pop() on columns of table "email.doc_main"
"""
input email_doc_main_var_pop_order_by {
  VERSION: order_by
  ads_fpack: order_by
  ads_fpage: order_by
  ads_lpack: order_by
  ads_lpage: order_by
  box_no: order_by
  collection_id: order_by
  media_count: order_by
}

"""
aggregate var_samp on columns
"""
type email_doc_main_var_samp_fields {
  VERSION: Float
  ads_fpack: Float
  ads_fpage: Float
  ads_lpack: Float
  ads_lpage: Float
  box_no: Float
  collection_id: Float
  media_count: Float
}

"""
order by var_samp() on columns of table "email.doc_main"
"""
input email_doc_main_var_samp_order_by {
  VERSION: order_by
  ads_fpack: order_by
  ads_fpage: order_by
  ads_lpack: order_by
  ads_lpage: order_by
  box_no: order_by
  collection_id: order_by
  media_count: order_by
}

"""
aggregate variance on columns
"""
type email_doc_main_variance_fields {
  VERSION: Float
  ads_fpack: Float
  ads_fpage: Float
  ads_lpack: Float
  ads_lpage: Float
  box_no: Float
  collection_id: Float
  media_count: Float
}

"""
order by variance() on columns of table "email.doc_main"
"""
input email_doc_main_variance_order_by {
  VERSION: order_by
  ads_fpack: order_by
  ads_fpage: order_by
  ads_lpack: order_by
  ads_lpage: order_by
  box_no: order_by
  collection_id: order_by
  media_count: order_by
}

"""
columns and relationships of "email.doc_names"
"""
type email_doc_names {
  ads_udi: String
  created_date: timestamp
  created_user: String
  flag: bpchar
  modified_date: timestamp
  modified_user: String
  name: String
  name_id: numeric
  name_type: String
  org_id: numeric
  organization: String
  type: String
}

"""
aggregated selection of "email.doc_names"
"""
type email_doc_names_aggregate {
  aggregate: email_doc_names_aggregate_fields
  nodes: [email_doc_names!]!
}

"""
aggregate fields of "email.doc_names"
"""
type email_doc_names_aggregate_fields {
  avg: email_doc_names_avg_fields
  count(columns: [email_doc_names_select_column!], distinct: Boolean): Int
  max: email_doc_names_max_fields
  min: email_doc_names_min_fields
  stddev: email_doc_names_stddev_fields
  stddev_pop: email_doc_names_stddev_pop_fields
  stddev_samp: email_doc_names_stddev_samp_fields
  sum: email_doc_names_sum_fields
  var_pop: email_doc_names_var_pop_fields
  var_samp: email_doc_names_var_samp_fields
  variance: email_doc_names_variance_fields
}

"""
order by aggregate values of table "email.doc_names"
"""
input email_doc_names_aggregate_order_by {
  avg: email_doc_names_avg_order_by
  count: order_by
  max: email_doc_names_max_order_by
  min: email_doc_names_min_order_by
  stddev: email_doc_names_stddev_order_by
  stddev_pop: email_doc_names_stddev_pop_order_by
  stddev_samp: email_doc_names_stddev_samp_order_by
  sum: email_doc_names_sum_order_by
  var_pop: email_doc_names_var_pop_order_by
  var_samp: email_doc_names_var_samp_order_by
  variance: email_doc_names_variance_order_by
}

"""
aggregate avg on columns
"""
type email_doc_names_avg_fields {
  name_id: Float
  org_id: Float
}

"""
order by avg() on columns of table "email.doc_names"
"""
input email_doc_names_avg_order_by {
  name_id: order_by
  org_id: order_by
}

"""
Boolean expression to filter rows from the table "email.doc_names". All fields are combined with a logical 'AND'.
"""
input email_doc_names_bool_exp {
  _and: [email_doc_names_bool_exp]
  _not: email_doc_names_bool_exp
  _or: [email_doc_names_bool_exp]
  ads_udi: String_comparison_exp
  created_date: timestamp_comparison_exp
  created_user: String_comparison_exp
  flag: bpchar_comparison_exp
  modified_date: timestamp_comparison_exp
  modified_user: String_comparison_exp
  name: String_comparison_exp
  name_id: numeric_comparison_exp
  name_type: String_comparison_exp
  org_id: numeric_comparison_exp
  organization: String_comparison_exp
  type: String_comparison_exp
}

"""
aggregate max on columns
"""
type email_doc_names_max_fields {
  ads_udi: String
  created_date: timestamp
  created_user: String
  modified_date: timestamp
  modified_user: String
  name: String
  name_id: numeric
  name_type: String
  org_id: numeric
  organization: String
  type: String
}

"""
order by max() on columns of table "email.doc_names"
"""
input email_doc_names_max_order_by {
  ads_udi: order_by
  created_date: order_by
  created_user: order_by
  modified_date: order_by
  modified_user: order_by
  name: order_by
  name_id: order_by
  name_type: order_by
  org_id: order_by
  organization: order_by
  type: order_by
}

"""
aggregate min on columns
"""
type email_doc_names_min_fields {
  ads_udi: String
  created_date: timestamp
  created_user: String
  modified_date: timestamp
  modified_user: String
  name: String
  name_id: numeric
  name_type: String
  org_id: numeric
  organization: String
  type: String
}

"""
order by min() on columns of table "email.doc_names"
"""
input email_doc_names_min_order_by {
  ads_udi: order_by
  created_date: order_by
  created_user: order_by
  modified_date: order_by
  modified_user: order_by
  name: order_by
  name_id: order_by
  name_type: order_by
  org_id: order_by
  organization: order_by
  type: order_by
}

"""
ordering options when selecting data from "email.doc_names"
"""
input email_doc_names_order_by {
  ads_udi: order_by
  created_date: order_by
  created_user: order_by
  flag: order_by
  modified_date: order_by
  modified_user: order_by
  name: order_by
  name_id: order_by
  name_type: order_by
  org_id: order_by
  organization: order_by
  type: order_by
}

"""
select columns of table "email.doc_names"
"""
enum email_doc_names_select_column {
  """
  column name
  """
  ads_udi

  """
  column name
  """
  created_date

  """
  column name
  """
  created_user

  """
  column name
  """
  flag

  """
  column name
  """
  modified_date

  """
  column name
  """
  modified_user

  """
  column name
  """
  name

  """
  column name
  """
  name_id

  """
  column name
  """
  name_type

  """
  column name
  """
  org_id

  """
  column name
  """
  organization

  """
  column name
  """
  type
}

"""
aggregate stddev on columns
"""
type email_doc_names_stddev_fields {
  name_id: Float
  org_id: Float
}

"""
order by stddev() on columns of table "email.doc_names"
"""
input email_doc_names_stddev_order_by {
  name_id: order_by
  org_id: order_by
}

"""
aggregate stddev_pop on columns
"""
type email_doc_names_stddev_pop_fields {
  name_id: Float
  org_id: Float
}

"""
order by stddev_pop() on columns of table "email.doc_names"
"""
input email_doc_names_stddev_pop_order_by {
  name_id: order_by
  org_id: order_by
}

"""
aggregate stddev_samp on columns
"""
type email_doc_names_stddev_samp_fields {
  name_id: Float
  org_id: Float
}

"""
order by stddev_samp() on columns of table "email.doc_names"
"""
input email_doc_names_stddev_samp_order_by {
  name_id: order_by
  org_id: order_by
}

"""
aggregate sum on columns
"""
type email_doc_names_sum_fields {
  name_id: numeric
  org_id: numeric
}

"""
order by sum() on columns of table "email.doc_names"
"""
input email_doc_names_sum_order_by {
  name_id: order_by
  org_id: order_by
}

"""
aggregate var_pop on columns
"""
type email_doc_names_var_pop_fields {
  name_id: Float
  org_id: Float
}

"""
order by var_pop() on columns of table "email.doc_names"
"""
input email_doc_names_var_pop_order_by {
  name_id: order_by
  org_id: order_by
}

"""
aggregate var_samp on columns
"""
type email_doc_names_var_samp_fields {
  name_id: Float
  org_id: Float
}

"""
order by var_samp() on columns of table "email.doc_names"
"""
input email_doc_names_var_samp_order_by {
  name_id: order_by
  org_id: order_by
}

"""
aggregate variance on columns
"""
type email_doc_names_variance_fields {
  name_id: Float
  org_id: Float
}

"""
order by variance() on columns of table "email.doc_names"
"""
input email_doc_names_variance_order_by {
  name_id: order_by
  org_id: order_by
}

"""
columns and relationships of "email.doe_related_rec"
"""
type email_doe_related_rec {
  ads_udi: String!
  created_date: timestamp
  created_user: String
  modified_date: timestamp
  modified_user: String
  rel_ads_udi: String!
  rel_rec_code: String!
  rowid: String!
}

"""
aggregated selection of "email.doe_related_rec"
"""
type email_doe_related_rec_aggregate {
  aggregate: email_doe_related_rec_aggregate_fields
  nodes: [email_doe_related_rec!]!
}

"""
aggregate fields of "email.doe_related_rec"
"""
type email_doe_related_rec_aggregate_fields {
  count(columns: [email_doe_related_rec_select_column!], distinct: Boolean): Int
  max: email_doe_related_rec_max_fields
  min: email_doe_related_rec_min_fields
}

"""
order by aggregate values of table "email.doe_related_rec"
"""
input email_doe_related_rec_aggregate_order_by {
  count: order_by
  max: email_doe_related_rec_max_order_by
  min: email_doe_related_rec_min_order_by
}

"""
input type for inserting array relation for remote table "email.doe_related_rec"
"""
input email_doe_related_rec_arr_rel_insert_input {
  data: [email_doe_related_rec_insert_input!]!
  on_conflict: email_doe_related_rec_on_conflict
}

"""
Boolean expression to filter rows from the table "email.doe_related_rec". All fields are combined with a logical 'AND'.
"""
input email_doe_related_rec_bool_exp {
  _and: [email_doe_related_rec_bool_exp]
  _not: email_doe_related_rec_bool_exp
  _or: [email_doe_related_rec_bool_exp]
  ads_udi: String_comparison_exp
  created_date: timestamp_comparison_exp
  created_user: String_comparison_exp
  modified_date: timestamp_comparison_exp
  modified_user: String_comparison_exp
  rel_ads_udi: String_comparison_exp
  rel_rec_code: String_comparison_exp
  rowid: String_comparison_exp
}

"""
unique or primary key constraints on table "email.doe_related_rec"
"""
enum email_doe_related_rec_constraint {
  """
  unique or primary key constraint
  """
  doe_related_rec_pkey
}

"""
input type for inserting data into table "email.doe_related_rec"
"""
input email_doe_related_rec_insert_input {
  ads_udi: String
  created_date: timestamp
  created_user: String
  modified_date: timestamp
  modified_user: String
  rel_ads_udi: String
  rel_rec_code: String
  rowid: String
}

"""
aggregate max on columns
"""
type email_doe_related_rec_max_fields {
  ads_udi: String
  created_date: timestamp
  created_user: String
  modified_date: timestamp
  modified_user: String
  rel_ads_udi: String
  rel_rec_code: String
  rowid: String
}

"""
order by max() on columns of table "email.doe_related_rec"
"""
input email_doe_related_rec_max_order_by {
  ads_udi: order_by
  created_date: order_by
  created_user: order_by
  modified_date: order_by
  modified_user: order_by
  rel_ads_udi: order_by
  rel_rec_code: order_by
  rowid: order_by
}

"""
aggregate min on columns
"""
type email_doe_related_rec_min_fields {
  ads_udi: String
  created_date: timestamp
  created_user: String
  modified_date: timestamp
  modified_user: String
  rel_ads_udi: String
  rel_rec_code: String
  rowid: String
}

"""
order by min() on columns of table "email.doe_related_rec"
"""
input email_doe_related_rec_min_order_by {
  ads_udi: order_by
  created_date: order_by
  created_user: order_by
  modified_date: order_by
  modified_user: order_by
  rel_ads_udi: order_by
  rel_rec_code: order_by
  rowid: order_by
}

"""
response of any mutation on the table "email.doe_related_rec"
"""
type email_doe_related_rec_mutation_response {
  """
  number of affected rows by the mutation
  """
  affected_rows: Int!

  """
  data of the affected rows by the mutation
  """
  returning: [email_doe_related_rec!]!
}

"""
input type for inserting object relation for remote table "email.doe_related_rec"
"""
input email_doe_related_rec_obj_rel_insert_input {
  data: email_doe_related_rec_insert_input!
  on_conflict: email_doe_related_rec_on_conflict
}

"""
on conflict condition type for table "email.doe_related_rec"
"""
input email_doe_related_rec_on_conflict {
  constraint: email_doe_related_rec_constraint!
  update_columns: [email_doe_related_rec_update_column!]!
  where: email_doe_related_rec_bool_exp
}

"""
ordering options when selecting data from "email.doe_related_rec"
"""
input email_doe_related_rec_order_by {
  ads_udi: order_by
  created_date: order_by
  created_user: order_by
  modified_date: order_by
  modified_user: order_by
  rel_ads_udi: order_by
  rel_rec_code: order_by
  rowid: order_by
}

"""
primary key columns input for table: "email.doe_related_rec"
"""
input email_doe_related_rec_pk_columns_input {
  ads_udi: String!
  rel_ads_udi: String!
  rel_rec_code: String!
}

"""
select columns of table "email.doe_related_rec"
"""
enum email_doe_related_rec_select_column {
  """
  column name
  """
  ads_udi

  """
  column name
  """
  created_date

  """
  column name
  """
  created_user

  """
  column name
  """
  modified_date

  """
  column name
  """
  modified_user

  """
  column name
  """
  rel_ads_udi

  """
  column name
  """
  rel_rec_code

  """
  column name
  """
  rowid
}

"""
input type for updating data in table "email.doe_related_rec"
"""
input email_doe_related_rec_set_input {
  ads_udi: String
  created_date: timestamp
  created_user: String
  modified_date: timestamp
  modified_user: String
  rel_ads_udi: String
  rel_rec_code: String
  rowid: String
}

"""
update columns of table "email.doe_related_rec"
"""
enum email_doe_related_rec_update_column {
  """
  column name
  """
  ads_udi

  """
  column name
  """
  created_date

  """
  column name
  """
  created_user

  """
  column name
  """
  modified_date

  """
  column name
  """
  modified_user

  """
  column name
  """
  rel_ads_udi

  """
  column name
  """
  rel_rec_code

  """
  column name
  """
  rowid
}

"""
columns and relationships of "email.ocr"
"""
type email_ocr {
  TEXT: String
  ads_firstbyte: float8
  ads_page: numeric!
  ads_udi: String!
  aver_word_size: float8
  bad_char_count: float8
  created_date: timestamp
  created_user: String
  digit_count: float8
  highlite_fixed: String
  insert_date: timestamp
  letter_count: float8
  modified_date: timestamp
  modified_user: String
  modulo: float8
  page_size: float8
  rowid: String!
  updated: float8
  word_count: float8
}

"""
aggregated selection of "email.ocr"
"""
type email_ocr_aggregate {
  aggregate: email_ocr_aggregate_fields
  nodes: [email_ocr!]!
}

"""
aggregate fields of "email.ocr"
"""
type email_ocr_aggregate_fields {
  avg: email_ocr_avg_fields
  count(columns: [email_ocr_select_column!], distinct: Boolean): Int
  max: email_ocr_max_fields
  min: email_ocr_min_fields
  stddev: email_ocr_stddev_fields
  stddev_pop: email_ocr_stddev_pop_fields
  stddev_samp: email_ocr_stddev_samp_fields
  sum: email_ocr_sum_fields
  var_pop: email_ocr_var_pop_fields
  var_samp: email_ocr_var_samp_fields
  variance: email_ocr_variance_fields
}

"""
order by aggregate values of table "email.ocr"
"""
input email_ocr_aggregate_order_by {
  avg: email_ocr_avg_order_by
  count: order_by
  max: email_ocr_max_order_by
  min: email_ocr_min_order_by
  stddev: email_ocr_stddev_order_by
  stddev_pop: email_ocr_stddev_pop_order_by
  stddev_samp: email_ocr_stddev_samp_order_by
  sum: email_ocr_sum_order_by
  var_pop: email_ocr_var_pop_order_by
  var_samp: email_ocr_var_samp_order_by
  variance: email_ocr_variance_order_by
}

"""
input type for inserting array relation for remote table "email.ocr"
"""
input email_ocr_arr_rel_insert_input {
  data: [email_ocr_insert_input!]!
  on_conflict: email_ocr_on_conflict
}

"""
aggregate avg on columns
"""
type email_ocr_avg_fields {
  ads_firstbyte: Float
  ads_page: Float
  aver_word_size: Float
  bad_char_count: Float
  digit_count: Float
  letter_count: Float
  modulo: Float
  page_size: Float
  updated: Float
  word_count: Float
}

"""
order by avg() on columns of table "email.ocr"
"""
input email_ocr_avg_order_by {
  ads_firstbyte: order_by
  ads_page: order_by
  aver_word_size: order_by
  bad_char_count: order_by
  digit_count: order_by
  letter_count: order_by
  modulo: order_by
  page_size: order_by
  updated: order_by
  word_count: order_by
}

"""
Boolean expression to filter rows from the table "email.ocr". All fields are combined with a logical 'AND'.
"""
input email_ocr_bool_exp {
  TEXT: String_comparison_exp
  _and: [email_ocr_bool_exp]
  _not: email_ocr_bool_exp
  _or: [email_ocr_bool_exp]
  ads_firstbyte: float8_comparison_exp
  ads_page: numeric_comparison_exp
  ads_udi: String_comparison_exp
  aver_word_size: float8_comparison_exp
  bad_char_count: float8_comparison_exp
  created_date: timestamp_comparison_exp
  created_user: String_comparison_exp
  digit_count: float8_comparison_exp
  highlite_fixed: String_comparison_exp
  insert_date: timestamp_comparison_exp
  letter_count: float8_comparison_exp
  modified_date: timestamp_comparison_exp
  modified_user: String_comparison_exp
  modulo: float8_comparison_exp
  page_size: float8_comparison_exp
  rowid: String_comparison_exp
  updated: float8_comparison_exp
  word_count: float8_comparison_exp
}

"""
unique or primary key constraints on table "email.ocr"
"""
enum email_ocr_constraint {
  """
  unique or primary key constraint
  """
  ocr_pkey
}

"""
input type for incrementing integer column in table "email.ocr"
"""
input email_ocr_inc_input {
  ads_firstbyte: float8
  ads_page: numeric
  aver_word_size: float8
  bad_char_count: float8
  digit_count: float8
  letter_count: float8
  modulo: float8
  page_size: float8
  updated: float8
  word_count: float8
}

"""
input type for inserting data into table "email.ocr"
"""
input email_ocr_insert_input {
  TEXT: String
  ads_firstbyte: float8
  ads_page: numeric
  ads_udi: String
  aver_word_size: float8
  bad_char_count: float8
  created_date: timestamp
  created_user: String
  digit_count: float8
  highlite_fixed: String
  insert_date: timestamp
  letter_count: float8
  modified_date: timestamp
  modified_user: String
  modulo: float8
  page_size: float8
  rowid: String
  updated: float8
  word_count: float8
}

"""
aggregate max on columns
"""
type email_ocr_max_fields {
  TEXT: String
  ads_firstbyte: float8
  ads_page: numeric
  ads_udi: String
  aver_word_size: float8
  bad_char_count: float8
  created_date: timestamp
  created_user: String
  digit_count: float8
  highlite_fixed: String
  insert_date: timestamp
  letter_count: float8
  modified_date: timestamp
  modified_user: String
  modulo: float8
  page_size: float8
  rowid: String
  updated: float8
  word_count: float8
}

"""
order by max() on columns of table "email.ocr"
"""
input email_ocr_max_order_by {
  TEXT: order_by
  ads_firstbyte: order_by
  ads_page: order_by
  ads_udi: order_by
  aver_word_size: order_by
  bad_char_count: order_by
  created_date: order_by
  created_user: order_by
  digit_count: order_by
  highlite_fixed: order_by
  insert_date: order_by
  letter_count: order_by
  modified_date: order_by
  modified_user: order_by
  modulo: order_by
  page_size: order_by
  rowid: order_by
  updated: order_by
  word_count: order_by
}

"""
aggregate min on columns
"""
type email_ocr_min_fields {
  TEXT: String
  ads_firstbyte: float8
  ads_page: numeric
  ads_udi: String
  aver_word_size: float8
  bad_char_count: float8
  created_date: timestamp
  created_user: String
  digit_count: float8
  highlite_fixed: String
  insert_date: timestamp
  letter_count: float8
  modified_date: timestamp
  modified_user: String
  modulo: float8
  page_size: float8
  rowid: String
  updated: float8
  word_count: float8
}

"""
order by min() on columns of table "email.ocr"
"""
input email_ocr_min_order_by {
  TEXT: order_by
  ads_firstbyte: order_by
  ads_page: order_by
  ads_udi: order_by
  aver_word_size: order_by
  bad_char_count: order_by
  created_date: order_by
  created_user: order_by
  digit_count: order_by
  highlite_fixed: order_by
  insert_date: order_by
  letter_count: order_by
  modified_date: order_by
  modified_user: order_by
  modulo: order_by
  page_size: order_by
  rowid: order_by
  updated: order_by
  word_count: order_by
}

"""
response of any mutation on the table "email.ocr"
"""
type email_ocr_mutation_response {
  """
  number of affected rows by the mutation
  """
  affected_rows: Int!

  """
  data of the affected rows by the mutation
  """
  returning: [email_ocr!]!
}

"""
input type for inserting object relation for remote table "email.ocr"
"""
input email_ocr_obj_rel_insert_input {
  data: email_ocr_insert_input!
  on_conflict: email_ocr_on_conflict
}

"""
on conflict condition type for table "email.ocr"
"""
input email_ocr_on_conflict {
  constraint: email_ocr_constraint!
  update_columns: [email_ocr_update_column!]!
  where: email_ocr_bool_exp
}

"""
ordering options when selecting data from "email.ocr"
"""
input email_ocr_order_by {
  TEXT: order_by
  ads_firstbyte: order_by
  ads_page: order_by
  ads_udi: order_by
  aver_word_size: order_by
  bad_char_count: order_by
  created_date: order_by
  created_user: order_by
  digit_count: order_by
  highlite_fixed: order_by
  insert_date: order_by
  letter_count: order_by
  modified_date: order_by
  modified_user: order_by
  modulo: order_by
  page_size: order_by
  rowid: order_by
  updated: order_by
  word_count: order_by
}

"""
primary key columns input for table: "email.ocr"
"""
input email_ocr_pk_columns_input {
  ads_page: numeric!
  ads_udi: String!
}

"""
select columns of table "email.ocr"
"""
enum email_ocr_select_column {
  """
  column name
  """
  TEXT

  """
  column name
  """
  ads_firstbyte

  """
  column name
  """
  ads_page

  """
  column name
  """
  ads_udi

  """
  column name
  """
  aver_word_size

  """
  column name
  """
  bad_char_count

  """
  column name
  """
  created_date

  """
  column name
  """
  created_user

  """
  column name
  """
  digit_count

  """
  column name
  """
  highlite_fixed

  """
  column name
  """
  insert_date

  """
  column name
  """
  letter_count

  """
  column name
  """
  modified_date

  """
  column name
  """
  modified_user

  """
  column name
  """
  modulo

  """
  column name
  """
  page_size

  """
  column name
  """
  rowid

  """
  column name
  """
  updated

  """
  column name
  """
  word_count
}

"""
input type for updating data in table "email.ocr"
"""
input email_ocr_set_input {
  TEXT: String
  ads_firstbyte: float8
  ads_page: numeric
  ads_udi: String
  aver_word_size: float8
  bad_char_count: float8
  created_date: timestamp
  created_user: String
  digit_count: float8
  highlite_fixed: String
  insert_date: timestamp
  letter_count: float8
  modified_date: timestamp
  modified_user: String
  modulo: float8
  page_size: float8
  rowid: String
  updated: float8
  word_count: float8
}

"""
aggregate stddev on columns
"""
type email_ocr_stddev_fields {
  ads_firstbyte: Float
  ads_page: Float
  aver_word_size: Float
  bad_char_count: Float
  digit_count: Float
  letter_count: Float
  modulo: Float
  page_size: Float
  updated: Float
  word_count: Float
}

"""
order by stddev() on columns of table "email.ocr"
"""
input email_ocr_stddev_order_by {
  ads_firstbyte: order_by
  ads_page: order_by
  aver_word_size: order_by
  bad_char_count: order_by
  digit_count: order_by
  letter_count: order_by
  modulo: order_by
  page_size: order_by
  updated: order_by
  word_count: order_by
}

"""
aggregate stddev_pop on columns
"""
type email_ocr_stddev_pop_fields {
  ads_firstbyte: Float
  ads_page: Float
  aver_word_size: Float
  bad_char_count: Float
  digit_count: Float
  letter_count: Float
  modulo: Float
  page_size: Float
  updated: Float
  word_count: Float
}

"""
order by stddev_pop() on columns of table "email.ocr"
"""
input email_ocr_stddev_pop_order_by {
  ads_firstbyte: order_by
  ads_page: order_by
  aver_word_size: order_by
  bad_char_count: order_by
  digit_count: order_by
  letter_count: order_by
  modulo: order_by
  page_size: order_by
  updated: order_by
  word_count: order_by
}

"""
aggregate stddev_samp on columns
"""
type email_ocr_stddev_samp_fields {
  ads_firstbyte: Float
  ads_page: Float
  aver_word_size: Float
  bad_char_count: Float
  digit_count: Float
  letter_count: Float
  modulo: Float
  page_size: Float
  updated: Float
  word_count: Float
}

"""
order by stddev_samp() on columns of table "email.ocr"
"""
input email_ocr_stddev_samp_order_by {
  ads_firstbyte: order_by
  ads_page: order_by
  aver_word_size: order_by
  bad_char_count: order_by
  digit_count: order_by
  letter_count: order_by
  modulo: order_by
  page_size: order_by
  updated: order_by
  word_count: order_by
}

"""
aggregate sum on columns
"""
type email_ocr_sum_fields {
  ads_firstbyte: float8
  ads_page: numeric
  aver_word_size: float8
  bad_char_count: float8
  digit_count: float8
  letter_count: float8
  modulo: float8
  page_size: float8
  updated: float8
  word_count: float8
}

"""
order by sum() on columns of table "email.ocr"
"""
input email_ocr_sum_order_by {
  ads_firstbyte: order_by
  ads_page: order_by
  aver_word_size: order_by
  bad_char_count: order_by
  digit_count: order_by
  letter_count: order_by
  modulo: order_by
  page_size: order_by
  updated: order_by
  word_count: order_by
}

"""
update columns of table "email.ocr"
"""
enum email_ocr_update_column {
  """
  column name
  """
  TEXT

  """
  column name
  """
  ads_firstbyte

  """
  column name
  """
  ads_page

  """
  column name
  """
  ads_udi

  """
  column name
  """
  aver_word_size

  """
  column name
  """
  bad_char_count

  """
  column name
  """
  created_date

  """
  column name
  """
  created_user

  """
  column name
  """
  digit_count

  """
  column name
  """
  highlite_fixed

  """
  column name
  """
  insert_date

  """
  column name
  """
  letter_count

  """
  column name
  """
  modified_date

  """
  column name
  """
  modified_user

  """
  column name
  """
  modulo

  """
  column name
  """
  page_size

  """
  column name
  """
  rowid

  """
  column name
  """
  updated

  """
  column name
  """
  word_count
}

"""
aggregate var_pop on columns
"""
type email_ocr_var_pop_fields {
  ads_firstbyte: Float
  ads_page: Float
  aver_word_size: Float
  bad_char_count: Float
  digit_count: Float
  letter_count: Float
  modulo: Float
  page_size: Float
  updated: Float
  word_count: Float
}

"""
order by var_pop() on columns of table "email.ocr"
"""
input email_ocr_var_pop_order_by {
  ads_firstbyte: order_by
  ads_page: order_by
  aver_word_size: order_by
  bad_char_count: order_by
  digit_count: order_by
  letter_count: order_by
  modulo: order_by
  page_size: order_by
  updated: order_by
  word_count: order_by
}

"""
aggregate var_samp on columns
"""
type email_ocr_var_samp_fields {
  ads_firstbyte: Float
  ads_page: Float
  aver_word_size: Float
  bad_char_count: Float
  digit_count: Float
  letter_count: Float
  modulo: Float
  page_size: Float
  updated: Float
  word_count: Float
}

"""
order by var_samp() on columns of table "email.ocr"
"""
input email_ocr_var_samp_order_by {
  ads_firstbyte: order_by
  ads_page: order_by
  aver_word_size: order_by
  bad_char_count: order_by
  digit_count: order_by
  letter_count: order_by
  modulo: order_by
  page_size: order_by
  updated: order_by
  word_count: order_by
}

"""
aggregate variance on columns
"""
type email_ocr_variance_fields {
  ads_firstbyte: Float
  ads_page: Float
  aver_word_size: Float
  bad_char_count: Float
  digit_count: Float
  letter_count: Float
  modulo: Float
  page_size: Float
  updated: Float
  word_count: Float
}

"""
order by variance() on columns of table "email.ocr"
"""
input email_ocr_variance_order_by {
  ads_firstbyte: order_by
  ads_page: order_by
  aver_word_size: order_by
  bad_char_count: order_by
  digit_count: order_by
  letter_count: order_by
  modulo: order_by
  page_size: order_by
  updated: order_by
  word_count: order_by
}

"""
columns and relationships of "email.type"
"""
type email_type {
  ads_udi: String!
  created_date: timestamp
  created_user: String
  doc_type: String!
  modified_date: timestamp
  modified_user: String
  rowid: String!
}

"""
aggregated selection of "email.type"
"""
type email_type_aggregate {
  aggregate: email_type_aggregate_fields
  nodes: [email_type!]!
}

"""
aggregate fields of "email.type"
"""
type email_type_aggregate_fields {
  count(columns: [email_type_select_column!], distinct: Boolean): Int
  max: email_type_max_fields
  min: email_type_min_fields
}

"""
order by aggregate values of table "email.type"
"""
input email_type_aggregate_order_by {
  count: order_by
  max: email_type_max_order_by
  min: email_type_min_order_by
}

"""
input type for inserting array relation for remote table "email.type"
"""
input email_type_arr_rel_insert_input {
  data: [email_type_insert_input!]!
  on_conflict: email_type_on_conflict
}

"""
Boolean expression to filter rows from the table "email.type". All fields are combined with a logical 'AND'.
"""
input email_type_bool_exp {
  _and: [email_type_bool_exp]
  _not: email_type_bool_exp
  _or: [email_type_bool_exp]
  ads_udi: String_comparison_exp
  created_date: timestamp_comparison_exp
  created_user: String_comparison_exp
  doc_type: String_comparison_exp
  modified_date: timestamp_comparison_exp
  modified_user: String_comparison_exp
  rowid: String_comparison_exp
}

"""
unique or primary key constraints on table "email.type"
"""
enum email_type_constraint {
  """
  unique or primary key constraint
  """
  type_pkey
}

"""
input type for inserting data into table "email.type"
"""
input email_type_insert_input {
  ads_udi: String
  created_date: timestamp
  created_user: String
  doc_type: String
  modified_date: timestamp
  modified_user: String
  rowid: String
}

"""
columns and relationships of "email.type_lookup"
"""
type email_type_lookup {
  created_date: timestamp
  created_user: String
  doc_type: String!
  doc_type_lookup: String!
  modified_date: timestamp
  modified_user: String
  rowid: String
}

"""
aggregated selection of "email.type_lookup"
"""
type email_type_lookup_aggregate {
  aggregate: email_type_lookup_aggregate_fields
  nodes: [email_type_lookup!]!
}

"""
aggregate fields of "email.type_lookup"
"""
type email_type_lookup_aggregate_fields {
  count(columns: [email_type_lookup_select_column!], distinct: Boolean): Int
  max: email_type_lookup_max_fields
  min: email_type_lookup_min_fields
}

"""
order by aggregate values of table "email.type_lookup"
"""
input email_type_lookup_aggregate_order_by {
  count: order_by
  max: email_type_lookup_max_order_by
  min: email_type_lookup_min_order_by
}

"""
input type for inserting array relation for remote table "email.type_lookup"
"""
input email_type_lookup_arr_rel_insert_input {
  data: [email_type_lookup_insert_input!]!
  on_conflict: email_type_lookup_on_conflict
}

"""
Boolean expression to filter rows from the table "email.type_lookup". All fields are combined with a logical 'AND'.
"""
input email_type_lookup_bool_exp {
  _and: [email_type_lookup_bool_exp]
  _not: email_type_lookup_bool_exp
  _or: [email_type_lookup_bool_exp]
  created_date: timestamp_comparison_exp
  created_user: String_comparison_exp
  doc_type: String_comparison_exp
  doc_type_lookup: String_comparison_exp
  modified_date: timestamp_comparison_exp
  modified_user: String_comparison_exp
  rowid: String_comparison_exp
}

"""
unique or primary key constraints on table "email.type_lookup"
"""
enum email_type_lookup_constraint {
  """
  unique or primary key constraint
  """
  type_lookup_pkey
}

"""
input type for inserting data into table "email.type_lookup"
"""
input email_type_lookup_insert_input {
  created_date: timestamp
  created_user: String
  doc_type: String
  doc_type_lookup: String
  modified_date: timestamp
  modified_user: String
  rowid: String
}

"""
aggregate max on columns
"""
type email_type_lookup_max_fields {
  created_date: timestamp
  created_user: String
  doc_type: String
  doc_type_lookup: String
  modified_date: timestamp
  modified_user: String
  rowid: String
}

"""
order by max() on columns of table "email.type_lookup"
"""
input email_type_lookup_max_order_by {
  created_date: order_by
  created_user: order_by
  doc_type: order_by
  doc_type_lookup: order_by
  modified_date: order_by
  modified_user: order_by
  rowid: order_by
}

"""
aggregate min on columns
"""
type email_type_lookup_min_fields {
  created_date: timestamp
  created_user: String
  doc_type: String
  doc_type_lookup: String
  modified_date: timestamp
  modified_user: String
  rowid: String
}

"""
order by min() on columns of table "email.type_lookup"
"""
input email_type_lookup_min_order_by {
  created_date: order_by
  created_user: order_by
  doc_type: order_by
  doc_type_lookup: order_by
  modified_date: order_by
  modified_user: order_by
  rowid: order_by
}

"""
response of any mutation on the table "email.type_lookup"
"""
type email_type_lookup_mutation_response {
  """
  number of affected rows by the mutation
  """
  affected_rows: Int!

  """
  data of the affected rows by the mutation
  """
  returning: [email_type_lookup!]!
}

"""
input type for inserting object relation for remote table "email.type_lookup"
"""
input email_type_lookup_obj_rel_insert_input {
  data: email_type_lookup_insert_input!
  on_conflict: email_type_lookup_on_conflict
}

"""
on conflict condition type for table "email.type_lookup"
"""
input email_type_lookup_on_conflict {
  constraint: email_type_lookup_constraint!
  update_columns: [email_type_lookup_update_column!]!
  where: email_type_lookup_bool_exp
}

"""
ordering options when selecting data from "email.type_lookup"
"""
input email_type_lookup_order_by {
  created_date: order_by
  created_user: order_by
  doc_type: order_by
  doc_type_lookup: order_by
  modified_date: order_by
  modified_user: order_by
  rowid: order_by
}

"""
primary key columns input for table: "email.type_lookup"
"""
input email_type_lookup_pk_columns_input {
  doc_type: String!
}

"""
select columns of table "email.type_lookup"
"""
enum email_type_lookup_select_column {
  """
  column name
  """
  created_date

  """
  column name
  """
  created_user

  """
  column name
  """
  doc_type

  """
  column name
  """
  doc_type_lookup

  """
  column name
  """
  modified_date

  """
  column name
  """
  modified_user

  """
  column name
  """
  rowid
}

"""
input type for updating data in table "email.type_lookup"
"""
input email_type_lookup_set_input {
  created_date: timestamp
  created_user: String
  doc_type: String
  doc_type_lookup: String
  modified_date: timestamp
  modified_user: String
  rowid: String
}

"""
update columns of table "email.type_lookup"
"""
enum email_type_lookup_update_column {
  """
  column name
  """
  created_date

  """
  column name
  """
  created_user

  """
  column name
  """
  doc_type

  """
  column name
  """
  doc_type_lookup

  """
  column name
  """
  modified_date

  """
  column name
  """
  modified_user

  """
  column name
  """
  rowid
}

"""
aggregate max on columns
"""
type email_type_max_fields {
  ads_udi: String
  created_date: timestamp
  created_user: String
  doc_type: String
  modified_date: timestamp
  modified_user: String
  rowid: String
}

"""
order by max() on columns of table "email.type"
"""
input email_type_max_order_by {
  ads_udi: order_by
  created_date: order_by
  created_user: order_by
  doc_type: order_by
  modified_date: order_by
  modified_user: order_by
  rowid: order_by
}

"""
aggregate min on columns
"""
type email_type_min_fields {
  ads_udi: String
  created_date: timestamp
  created_user: String
  doc_type: String
  modified_date: timestamp
  modified_user: String
  rowid: String
}

"""
order by min() on columns of table "email.type"
"""
input email_type_min_order_by {
  ads_udi: order_by
  created_date: order_by
  created_user: order_by
  doc_type: order_by
  modified_date: order_by
  modified_user: order_by
  rowid: order_by
}

"""
response of any mutation on the table "email.type"
"""
type email_type_mutation_response {
  """
  number of affected rows by the mutation
  """
  affected_rows: Int!

  """
  data of the affected rows by the mutation
  """
  returning: [email_type!]!
}

"""
input type for inserting object relation for remote table "email.type"
"""
input email_type_obj_rel_insert_input {
  data: email_type_insert_input!
  on_conflict: email_type_on_conflict
}

"""
on conflict condition type for table "email.type"
"""
input email_type_on_conflict {
  constraint: email_type_constraint!
  update_columns: [email_type_update_column!]!
  where: email_type_bool_exp
}

"""
ordering options when selecting data from "email.type"
"""
input email_type_order_by {
  ads_udi: order_by
  created_date: order_by
  created_user: order_by
  doc_type: order_by
  modified_date: order_by
  modified_user: order_by
  rowid: order_by
}

"""
primary key columns input for table: "email.type"
"""
input email_type_pk_columns_input {
  ads_udi: String!
  doc_type: String!
}

"""
select columns of table "email.type"
"""
enum email_type_select_column {
  """
  column name
  """
  ads_udi

  """
  column name
  """
  created_date

  """
  column name
  """
  created_user

  """
  column name
  """
  doc_type

  """
  column name
  """
  modified_date

  """
  column name
  """
  modified_user

  """
  column name
  """
  rowid
}

"""
input type for updating data in table "email.type"
"""
input email_type_set_input {
  ads_udi: String
  created_date: timestamp
  created_user: String
  doc_type: String
  modified_date: timestamp
  modified_user: String
  rowid: String
}

"""
update columns of table "email.type"
"""
enum email_type_update_column {
  """
  column name
  """
  ads_udi

  """
  column name
  """
  created_date

  """
  column name
  """
  created_user

  """
  column name
  """
  doc_type

  """
  column name
  """
  modified_date

  """
  column name
  """
  modified_user

  """
  column name
  """
  rowid
}

scalar float8

"""
expression to compare columns of type float8. All fields are combined with logical 'AND'.
"""
input float8_comparison_exp {
  _eq: float8
  _gt: float8
  _gte: float8
  _in: [float8!]
  _is_null: Boolean
  _lt: float8
  _lte: float8
  _neq: float8
  _nin: [float8!]
}

"""
expression to compare columns of type Int. All fields are combined with logical 'AND'.
"""
input Int_comparison_exp {
  _eq: Int
  _gt: Int
  _gte: Int
  _in: [Int!]
  _is_null: Boolean
  _lt: Int
  _lte: Int
  _neq: Int
  _nin: [Int!]
}

"""
mutation root
"""
type mutation_root {
  """
  delete data from the table: "efiles.contain"
  """
  delete_efiles_contain(
    """
    filter the rows which have to be deleted
    """
    where: efiles_contain_bool_exp!
  ): efiles_contain_mutation_response

  """
  delete single row from the table: "efiles.contain"
  """
  delete_efiles_contain_by_pk(containerid: String!): efiles_contain

  """
  delete data from the table: "efiles.doc_main"
  """
  delete_efiles_doc_main(
    """
    filter the rows which have to be deleted
    """
    where: efiles_doc_main_bool_exp!
  ): efiles_doc_main_mutation_response

  """
  delete single row from the table: "efiles.doc_main"
  """
  delete_efiles_doc_main_by_pk(ads_udi: String!): efiles_doc_main

  """
  delete data from the table: "efiles.ocr"
  """
  delete_efiles_ocr(
    """
    filter the rows which have to be deleted
    """
    where: efiles_ocr_bool_exp!
  ): efiles_ocr_mutation_response

  """
  delete single row from the table: "efiles.ocr"
  """
  delete_efiles_ocr_by_pk(ads_page: numeric!): efiles_ocr

  """
  delete data from the table: "efiles.redaction_types"
  """
  delete_efiles_redaction_types(
    """
    filter the rows which have to be deleted
    """
    where: efiles_redaction_types_bool_exp!
  ): efiles_redaction_types_mutation_response

  """
  delete single row from the table: "efiles.redaction_types"
  """
  delete_efiles_redaction_types_by_pk(red_id: numeric!): efiles_redaction_types

  """
  delete data from the table: "efiles.type"
  """
  delete_efiles_type(
    """
    filter the rows which have to be deleted
    """
    where: efiles_type_bool_exp!
  ): efiles_type_mutation_response

  """
  delete single row from the table: "efiles.type"
  """
  delete_efiles_type_by_pk(ads_udi: String!, doc_type: String!): efiles_type

  """
  delete data from the table: "efiles.type_lookup"
  """
  delete_efiles_type_lookup(
    """
    filter the rows which have to be deleted
    """
    where: efiles_type_lookup_bool_exp!
  ): efiles_type_lookup_mutation_response

  """
  delete data from the table: "email.doc_main"
  """
  delete_email_doc_main(
    """
    filter the rows which have to be deleted
    """
    where: email_doc_main_bool_exp!
  ): email_doc_main_mutation_response

  """
  delete single row from the table: "email.doc_main"
  """
  delete_email_doc_main_by_pk(ads_udi: String!): email_doc_main

  """
  delete data from the table: "email.doe_related_rec"
  """
  delete_email_doe_related_rec(
    """
    filter the rows which have to be deleted
    """
    where: email_doe_related_rec_bool_exp!
  ): email_doe_related_rec_mutation_response

  """
  delete single row from the table: "email.doe_related_rec"
  """
  delete_email_doe_related_rec_by_pk(
    ads_udi: String!
    rel_ads_udi: String!
    rel_rec_code: String!
  ): email_doe_related_rec

  """
  delete data from the table: "email.ocr"
  """
  delete_email_ocr(
    """
    filter the rows which have to be deleted
    """
    where: email_ocr_bool_exp!
  ): email_ocr_mutation_response

  """
  delete single row from the table: "email.ocr"
  """
  delete_email_ocr_by_pk(ads_page: numeric!, ads_udi: String!): email_ocr

  """
  delete data from the table: "email.type"
  """
  delete_email_type(
    """
    filter the rows which have to be deleted
    """
    where: email_type_bool_exp!
  ): email_type_mutation_response

  """
  delete single row from the table: "email.type"
  """
  delete_email_type_by_pk(ads_udi: String!, doc_type: String!): email_type

  """
  delete data from the table: "email.type_lookup"
  """
  delete_email_type_lookup(
    """
    filter the rows which have to be deleted
    """
    where: email_type_lookup_bool_exp!
  ): email_type_lookup_mutation_response

  """
  delete single row from the table: "email.type_lookup"
  """
  delete_email_type_lookup_by_pk(doc_type: String!): email_type_lookup

  """
  delete data from the table: "paper.doc_main"
  """
  delete_paper_doc_main(
    """
    filter the rows which have to be deleted
    """
    where: paper_doc_main_bool_exp!
  ): paper_doc_main_mutation_response

  """
  delete single row from the table: "paper.doc_main"
  """
  delete_paper_doc_main_by_pk(ads_udi: String!): paper_doc_main

  """
  delete data from the table: "paper.ocr"
  """
  delete_paper_ocr(
    """
    filter the rows which have to be deleted
    """
    where: paper_ocr_bool_exp!
  ): paper_ocr_mutation_response

  """
  delete single row from the table: "paper.ocr"
  """
  delete_paper_ocr_by_pk(ads_page: numeric!, ads_udi: String!): paper_ocr

  """
  delete data from the table: "paper.type"
  """
  delete_paper_type(
    """
    filter the rows which have to be deleted
    """
    where: paper_type_bool_exp!
  ): paper_type_mutation_response

  """
  delete single row from the table: "paper.type"
  """
  delete_paper_type_by_pk(ads_udi: String!, doc_type: String!): paper_type

  """
  delete data from the table: "paper.type_lookup"
  """
  delete_paper_type_lookup(
    """
    filter the rows which have to be deleted
    """
    where: paper_type_lookup_bool_exp!
  ): paper_type_lookup_mutation_response

  """
  delete single row from the table: "paper.type_lookup"
  """
  delete_paper_type_lookup_by_pk(doc_type: String!): paper_type_lookup

  """
  delete data from the table: "risdata.case_collection"
  """
  delete_risdata_case_collection(
    """
    filter the rows which have to be deleted
    """
    where: risdata_case_collection_bool_exp!
  ): risdata_case_collection_mutation_response

  """
  delete single row from the table: "risdata.case_collection"
  """
  delete_risdata_case_collection_by_pk(collection_id: numeric!): risdata_case_collection

  """
  delete data from the table: "risdata.doc_main"
  """
  delete_risdata_doc_main(
    """
    filter the rows which have to be deleted
    """
    where: risdata_doc_main_bool_exp!
  ): risdata_doc_main_mutation_response

  """
  delete single row from the table: "risdata.doc_main"
  """
  delete_risdata_doc_main_by_pk(ads_udi: String!): risdata_doc_main

  """
  delete data from the table: "risdata.doe_related_rec"
  """
  delete_risdata_doe_related_rec(
    """
    filter the rows which have to be deleted
    """
    where: risdata_doe_related_rec_bool_exp!
  ): risdata_doe_related_rec_mutation_response

  """
  delete single row from the table: "risdata.doe_related_rec"
  """
  delete_risdata_doe_related_rec_by_pk(
    ads_udi: String!
    rel_ads_udi: String!
    rel_rec_code: String!
  ): risdata_doe_related_rec

  """
  delete data from the table: "risdata.ocr"
  """
  delete_risdata_ocr(
    """
    filter the rows which have to be deleted
    """
    where: risdata_ocr_bool_exp!
  ): risdata_ocr_mutation_response

  """
  delete single row from the table: "risdata.ocr"
  """
  delete_risdata_ocr_by_pk(ads_page: numeric!, ads_udi: String!): risdata_ocr

  """
  delete data from the table: "risdata.type"
  """
  delete_risdata_type(
    """
    filter the rows which have to be deleted
    """
    where: risdata_type_bool_exp!
  ): risdata_type_mutation_response

  """
  delete single row from the table: "risdata.type"
  """
  delete_risdata_type_by_pk(ads_udi: String!, doc_type: String!): risdata_type

  """
  delete data from the table: "risdata.type_lookup"
  """
  delete_risdata_type_lookup(
    """
    filter the rows which have to be deleted
    """
    where: risdata_type_lookup_bool_exp!
  ): risdata_type_lookup_mutation_response

  """
  delete single row from the table: "risdata.type_lookup"
  """
  delete_risdata_type_lookup_by_pk(doc_type: String!): risdata_type_lookup

  """
  delete data from the table: "workflow.adhoc"
  """
  delete_workflow_adhoc(
    """
    filter the rows which have to be deleted
    """
    where: workflow_adhoc_bool_exp!
  ): workflow_adhoc_mutation_response

  """
  delete data from the table: "workflow.adhoc_card"
  """
  delete_workflow_adhoc_card(
    """
    filter the rows which have to be deleted
    """
    where: workflow_adhoc_card_bool_exp!
  ): workflow_adhoc_card_mutation_response

  """
  delete data from the table: "workflow.adhoc_checks"
  """
  delete_workflow_adhoc_checks(
    """
    filter the rows which have to be deleted
    """
    where: workflow_adhoc_checks_bool_exp!
  ): workflow_adhoc_checks_mutation_response

  """
  delete data from the table: "workflow.adhoc_requests"
  """
  delete_workflow_adhoc_requests(
    """
    filter the rows which have to be deleted
    """
    where: workflow_adhoc_requests_bool_exp!
  ): workflow_adhoc_requests_mutation_response

  """
  delete data from the table: "workflow.call_center_acc_no"
  """
  delete_workflow_call_center_acc_no(
    """
    filter the rows which have to be deleted
    """
    where: workflow_call_center_acc_no_bool_exp!
  ): workflow_call_center_acc_no_mutation_response

  """
  delete data from the table: "workflow.call_center_batch"
  """
  delete_workflow_call_center_batch(
    """
    filter the rows which have to be deleted
    """
    where: workflow_call_center_batch_bool_exp!
  ): workflow_call_center_batch_mutation_response

  """
  delete single row from the table: "workflow.call_center_batch"
  """
  delete_workflow_call_center_batch_by_pk(batch_id: float8!): workflow_call_center_batch

  """
  delete data from the table: "workflow.copyright_docs"
  """
  delete_workflow_copyright_docs(
    """
    filter the rows which have to be deleted
    """
    where: workflow_copyright_docs_bool_exp!
  ): workflow_copyright_docs_mutation_response

  """
  delete data from the table: "workflow.doc_comments"
  """
  delete_workflow_doc_comments(
    """
    filter the rows which have to be deleted
    """
    where: workflow_doc_comments_bool_exp!
  ): workflow_doc_comments_mutation_response

  """
  delete data from the table: "workflow.doc_names"
  """
  delete_workflow_doc_names(
    """
    filter the rows which have to be deleted
    """
    where: workflow_doc_names_bool_exp!
  ): workflow_doc_names_mutation_response

  """
  delete data from the table: "workflow.doc_sources"
  """
  delete_workflow_doc_sources(
    """
    filter the rows which have to be deleted
    """
    where: workflow_doc_sources_bool_exp!
  ): workflow_doc_sources_mutation_response

  """
  delete data from the table: "workflow.doc_status"
  """
  delete_workflow_doc_status(
    """
    filter the rows which have to be deleted
    """
    where: workflow_doc_status_bool_exp!
  ): workflow_doc_status_mutation_response

  """
  delete data from the table: "workflow.doc_tags_names"
  """
  delete_workflow_doc_tags_names(
    """
    filter the rows which have to be deleted
    """
    where: workflow_doc_tags_names_bool_exp!
  ): workflow_doc_tags_names_mutation_response

  """
  delete single row from the table: "workflow.doc_tags_names"
  """
  delete_workflow_doc_tags_names_by_pk(tag: String!): workflow_doc_tags_names

  """
  delete data from the table: "workflow.documents"
  """
  delete_workflow_documents(
    """
    filter the rows which have to be deleted
    """
    where: workflow_documents_bool_exp!
  ): workflow_documents_mutation_response

  """
  delete single row from the table: "workflow.documents"
  """
  delete_workflow_documents_by_pk(ID: float8!): workflow_documents

  """
  delete data from the table: "workflow.final_priv_log"
  """
  delete_workflow_final_priv_log(
    """
    filter the rows which have to be deleted
    """
    where: workflow_final_priv_log_bool_exp!
  ): workflow_final_priv_log_mutation_response

  """
  delete data from the table: "workflow.final_priv_log_author"
  """
  delete_workflow_final_priv_log_author(
    """
    filter the rows which have to be deleted
    """
    where: workflow_final_priv_log_author_bool_exp!
  ): workflow_final_priv_log_author_mutation_response

  """
  delete single row from the table: "workflow.final_priv_log"
  """
  delete_workflow_final_priv_log_by_pk(acc_no: String!): workflow_final_priv_log

  """
  delete data from the table: "workflow.final_priv_log_recipient"
  """
  delete_workflow_final_priv_log_recipient(
    """
    filter the rows which have to be deleted
    """
    where: workflow_final_priv_log_recipient_bool_exp!
  ): workflow_final_priv_log_recipient_mutation_response

  """
  delete data from the table: "workflow.highlight_words"
  """
  delete_workflow_highlight_words(
    """
    filter the rows which have to be deleted
    """
    where: workflow_highlight_words_bool_exp!
  ): workflow_highlight_words_mutation_response

  """
  delete single row from the table: "workflow.highlight_words"
  """
  delete_workflow_highlight_words_by_pk(highlight_word_id: Int!): workflow_highlight_words

  """
  delete data from the table: "workflow.history"
  """
  delete_workflow_history(
    """
    filter the rows which have to be deleted
    """
    where: workflow_history_bool_exp!
  ): workflow_history_mutation_response

  """
  delete single row from the table: "workflow.history"
  """
  delete_workflow_history_by_pk(id: Int!): workflow_history

  """
  delete data from the table: "workflow.lookups"
  """
  delete_workflow_lookups(
    """
    filter the rows which have to be deleted
    """
    where: workflow_lookups_bool_exp!
  ): workflow_lookups_mutation_response

  """
  delete data from the table: "workflow.name_org_type"
  """
  delete_workflow_name_org_type(
    """
    filter the rows which have to be deleted
    """
    where: workflow_name_org_type_bool_exp!
  ): workflow_name_org_type_mutation_response

  """
  delete data from the table: "workflow.name_type_lookup"
  """
  delete_workflow_name_type_lookup(
    """
    filter the rows which have to be deleted
    """
    where: workflow_name_type_lookup_bool_exp!
  ): workflow_name_type_lookup_mutation_response

  """
  delete data from the table: "workflow.priv_log_detail"
  """
  delete_workflow_priv_log_detail(
    """
    filter the rows which have to be deleted
    """
    where: workflow_priv_log_detail_bool_exp!
  ): workflow_priv_log_detail_mutation_response

  """
  delete single row from the table: "workflow.priv_log_detail"
  """
  delete_workflow_priv_log_detail_by_pk(priv_log_detail_id: float8!): workflow_priv_log_detail

  """
  delete data from the table: "workflow.priv_log_entry"
  """
  delete_workflow_priv_log_entry(
    """
    filter the rows which have to be deleted
    """
    where: workflow_priv_log_entry_bool_exp!
  ): workflow_priv_log_entry_mutation_response

  """
  delete single row from the table: "workflow.priv_log_entry"
  """
  delete_workflow_priv_log_entry_by_pk(priv_log_entry_id: float8!): workflow_priv_log_entry

  """
  delete data from the table: "workflow.privacy_docs"
  """
  delete_workflow_privacy_docs(
    """
    filter the rows which have to be deleted
    """
    where: workflow_privacy_docs_bool_exp!
  ): workflow_privacy_docs_mutation_response

  """
  delete data from the table: "workflow.redacted_docs"
  """
  delete_workflow_redacted_docs(
    """
    filter the rows which have to be deleted
    """
    where: workflow_redacted_docs_bool_exp!
  ): workflow_redacted_docs_mutation_response

  """
  delete data from the table: "workflow.redacted_pages"
  """
  delete_workflow_redacted_pages(
    """
    filter the rows which have to be deleted
    """
    where: workflow_redacted_pages_bool_exp!
  ): workflow_redacted_pages_mutation_response

  """
  delete data from the table: "workflow.redaction_processing"
  """
  delete_workflow_redaction_processing(
    """
    filter the rows which have to be deleted
    """
    where: workflow_redaction_processing_bool_exp!
  ): workflow_redaction_processing_mutation_response

  """
  delete data from the table: "workflow.released_docs"
  """
  delete_workflow_released_docs(
    """
    filter the rows which have to be deleted
    """
    where: workflow_released_docs_bool_exp!
  ): workflow_released_docs_mutation_response

  """
  delete data from the table: "workflow.sources"
  """
  delete_workflow_sources(
    """
    filter the rows which have to be deleted
    """
    where: workflow_sources_bool_exp!
  ): workflow_sources_mutation_response

  """
  delete single row from the table: "workflow.sources"
  """
  delete_workflow_sources_by_pk(ID: float8!): workflow_sources

  """
  delete data from the table: "workflow.stages"
  """
  delete_workflow_stages(
    """
    filter the rows which have to be deleted
    """
    where: workflow_stages_bool_exp!
  ): workflow_stages_mutation_response

  """
  delete data from the table: "workflow.stamped_pages"
  """
  delete_workflow_stamped_pages(
    """
    filter the rows which have to be deleted
    """
    where: workflow_stamped_pages_bool_exp!
  ): workflow_stamped_pages_mutation_response

  """
  delete data from the table: "workflow.users"
  """
  delete_workflow_users(
    """
    filter the rows which have to be deleted
    """
    where: workflow_users_bool_exp!
  ): workflow_users_mutation_response

  """
  delete data from the table: "workflow.workflow"
  """
  delete_workflow_workflow(
    """
    filter the rows which have to be deleted
    """
    where: workflow_workflow_bool_exp!
  ): workflow_workflow_mutation_response

  """
  delete single row from the table: "workflow.workflow"
  """
  delete_workflow_workflow_by_pk(ID: float8!): workflow_workflow

  """
  delete data from the table: "workflow.workflow_decision"
  """
  delete_workflow_workflow_decision(
    """
    filter the rows which have to be deleted
    """
    where: workflow_workflow_decision_bool_exp!
  ): workflow_workflow_decision_mutation_response

  """
  insert data into the table: "efiles.contain"
  """
  insert_efiles_contain(
    """
    the rows to be inserted
    """
    objects: [efiles_contain_insert_input!]!

    """
    on conflict condition
    """
    on_conflict: efiles_contain_on_conflict
  ): efiles_contain_mutation_response

  """
  insert a single row into the table: "efiles.contain"
  """
  insert_efiles_contain_one(
    """
    the row to be inserted
    """
    object: efiles_contain_insert_input!

    """
    on conflict condition
    """
    on_conflict: efiles_contain_on_conflict
  ): efiles_contain

  """
  insert data into the table: "efiles.doc_main"
  """
  insert_efiles_doc_main(
    """
    the rows to be inserted
    """
    objects: [efiles_doc_main_insert_input!]!

    """
    on conflict condition
    """
    on_conflict: efiles_doc_main_on_conflict
  ): efiles_doc_main_mutation_response

  """
  insert a single row into the table: "efiles.doc_main"
  """
  insert_efiles_doc_main_one(
    """
    the row to be inserted
    """
    object: efiles_doc_main_insert_input!

    """
    on conflict condition
    """
    on_conflict: efiles_doc_main_on_conflict
  ): efiles_doc_main

  """
  insert data into the table: "efiles.ocr"
  """
  insert_efiles_ocr(
    """
    the rows to be inserted
    """
    objects: [efiles_ocr_insert_input!]!

    """
    on conflict condition
    """
    on_conflict: efiles_ocr_on_conflict
  ): efiles_ocr_mutation_response

  """
  insert a single row into the table: "efiles.ocr"
  """
  insert_efiles_ocr_one(
    """
    the row to be inserted
    """
    object: efiles_ocr_insert_input!

    """
    on conflict condition
    """
    on_conflict: efiles_ocr_on_conflict
  ): efiles_ocr

  """
  insert data into the table: "efiles.redaction_types"
  """
  insert_efiles_redaction_types(
    """
    the rows to be inserted
    """
    objects: [efiles_redaction_types_insert_input!]!

    """
    on conflict condition
    """
    on_conflict: efiles_redaction_types_on_conflict
  ): efiles_redaction_types_mutation_response

  """
  insert a single row into the table: "efiles.redaction_types"
  """
  insert_efiles_redaction_types_one(
    """
    the row to be inserted
    """
    object: efiles_redaction_types_insert_input!

    """
    on conflict condition
    """
    on_conflict: efiles_redaction_types_on_conflict
  ): efiles_redaction_types

  """
  insert data into the table: "efiles.type"
  """
  insert_efiles_type(
    """
    the rows to be inserted
    """
    objects: [efiles_type_insert_input!]!

    """
    on conflict condition
    """
    on_conflict: efiles_type_on_conflict
  ): efiles_type_mutation_response

  """
  insert data into the table: "efiles.type_lookup"
  """
  insert_efiles_type_lookup(
    """
    the rows to be inserted
    """
    objects: [efiles_type_lookup_insert_input!]!
  ): efiles_type_lookup_mutation_response

  """
  insert a single row into the table: "efiles.type_lookup"
  """
  insert_efiles_type_lookup_one(
    """
    the row to be inserted
    """
    object: efiles_type_lookup_insert_input!
  ): efiles_type_lookup

  """
  insert a single row into the table: "efiles.type"
  """
  insert_efiles_type_one(
    """
    the row to be inserted
    """
    object: efiles_type_insert_input!

    """
    on conflict condition
    """
    on_conflict: efiles_type_on_conflict
  ): efiles_type

  """
  insert data into the table: "email.doc_main"
  """
  insert_email_doc_main(
    """
    the rows to be inserted
    """
    objects: [email_doc_main_insert_input!]!

    """
    on conflict condition
    """
    on_conflict: email_doc_main_on_conflict
  ): email_doc_main_mutation_response

  """
  insert a single row into the table: "email.doc_main"
  """
  insert_email_doc_main_one(
    """
    the row to be inserted
    """
    object: email_doc_main_insert_input!

    """
    on conflict condition
    """
    on_conflict: email_doc_main_on_conflict
  ): email_doc_main

  """
  insert data into the table: "email.doe_related_rec"
  """
  insert_email_doe_related_rec(
    """
    the rows to be inserted
    """
    objects: [email_doe_related_rec_insert_input!]!

    """
    on conflict condition
    """
    on_conflict: email_doe_related_rec_on_conflict
  ): email_doe_related_rec_mutation_response

  """
  insert a single row into the table: "email.doe_related_rec"
  """
  insert_email_doe_related_rec_one(
    """
    the row to be inserted
    """
    object: email_doe_related_rec_insert_input!

    """
    on conflict condition
    """
    on_conflict: email_doe_related_rec_on_conflict
  ): email_doe_related_rec

  """
  insert data into the table: "email.ocr"
  """
  insert_email_ocr(
    """
    the rows to be inserted
    """
    objects: [email_ocr_insert_input!]!

    """
    on conflict condition
    """
    on_conflict: email_ocr_on_conflict
  ): email_ocr_mutation_response

  """
  insert a single row into the table: "email.ocr"
  """
  insert_email_ocr_one(
    """
    the row to be inserted
    """
    object: email_ocr_insert_input!

    """
    on conflict condition
    """
    on_conflict: email_ocr_on_conflict
  ): email_ocr

  """
  insert data into the table: "email.type"
  """
  insert_email_type(
    """
    the rows to be inserted
    """
    objects: [email_type_insert_input!]!

    """
    on conflict condition
    """
    on_conflict: email_type_on_conflict
  ): email_type_mutation_response

  """
  insert data into the table: "email.type_lookup"
  """
  insert_email_type_lookup(
    """
    the rows to be inserted
    """
    objects: [email_type_lookup_insert_input!]!

    """
    on conflict condition
    """
    on_conflict: email_type_lookup_on_conflict
  ): email_type_lookup_mutation_response

  """
  insert a single row into the table: "email.type_lookup"
  """
  insert_email_type_lookup_one(
    """
    the row to be inserted
    """
    object: email_type_lookup_insert_input!

    """
    on conflict condition
    """
    on_conflict: email_type_lookup_on_conflict
  ): email_type_lookup

  """
  insert a single row into the table: "email.type"
  """
  insert_email_type_one(
    """
    the row to be inserted
    """
    object: email_type_insert_input!

    """
    on conflict condition
    """
    on_conflict: email_type_on_conflict
  ): email_type

  """
  insert data into the table: "paper.doc_main"
  """
  insert_paper_doc_main(
    """
    the rows to be inserted
    """
    objects: [paper_doc_main_insert_input!]!

    """
    on conflict condition
    """
    on_conflict: paper_doc_main_on_conflict
  ): paper_doc_main_mutation_response

  """
  insert a single row into the table: "paper.doc_main"
  """
  insert_paper_doc_main_one(
    """
    the row to be inserted
    """
    object: paper_doc_main_insert_input!

    """
    on conflict condition
    """
    on_conflict: paper_doc_main_on_conflict
  ): paper_doc_main

  """
  insert data into the table: "paper.ocr"
  """
  insert_paper_ocr(
    """
    the rows to be inserted
    """
    objects: [paper_ocr_insert_input!]!

    """
    on conflict condition
    """
    on_conflict: paper_ocr_on_conflict
  ): paper_ocr_mutation_response

  """
  insert a single row into the table: "paper.ocr"
  """
  insert_paper_ocr_one(
    """
    the row to be inserted
    """
    object: paper_ocr_insert_input!

    """
    on conflict condition
    """
    on_conflict: paper_ocr_on_conflict
  ): paper_ocr

  """
  insert data into the table: "paper.type"
  """
  insert_paper_type(
    """
    the rows to be inserted
    """
    objects: [paper_type_insert_input!]!

    """
    on conflict condition
    """
    on_conflict: paper_type_on_conflict
  ): paper_type_mutation_response

  """
  insert data into the table: "paper.type_lookup"
  """
  insert_paper_type_lookup(
    """
    the rows to be inserted
    """
    objects: [paper_type_lookup_insert_input!]!

    """
    on conflict condition
    """
    on_conflict: paper_type_lookup_on_conflict
  ): paper_type_lookup_mutation_response

  """
  insert a single row into the table: "paper.type_lookup"
  """
  insert_paper_type_lookup_one(
    """
    the row to be inserted
    """
    object: paper_type_lookup_insert_input!

    """
    on conflict condition
    """
    on_conflict: paper_type_lookup_on_conflict
  ): paper_type_lookup

  """
  insert a single row into the table: "paper.type"
  """
  insert_paper_type_one(
    """
    the row to be inserted
    """
    object: paper_type_insert_input!

    """
    on conflict condition
    """
    on_conflict: paper_type_on_conflict
  ): paper_type

  """
  insert data into the table: "risdata.case_collection"
  """
  insert_risdata_case_collection(
    """
    the rows to be inserted
    """
    objects: [risdata_case_collection_insert_input!]!

    """
    on conflict condition
    """
    on_conflict: risdata_case_collection_on_conflict
  ): risdata_case_collection_mutation_response

  """
  insert a single row into the table: "risdata.case_collection"
  """
  insert_risdata_case_collection_one(
    """
    the row to be inserted
    """
    object: risdata_case_collection_insert_input!

    """
    on conflict condition
    """
    on_conflict: risdata_case_collection_on_conflict
  ): risdata_case_collection

  """
  insert data into the table: "risdata.doc_main"
  """
  insert_risdata_doc_main(
    """
    the rows to be inserted
    """
    objects: [risdata_doc_main_insert_input!]!

    """
    on conflict condition
    """
    on_conflict: risdata_doc_main_on_conflict
  ): risdata_doc_main_mutation_response

  """
  insert a single row into the table: "risdata.doc_main"
  """
  insert_risdata_doc_main_one(
    """
    the row to be inserted
    """
    object: risdata_doc_main_insert_input!

    """
    on conflict condition
    """
    on_conflict: risdata_doc_main_on_conflict
  ): risdata_doc_main

  """
  insert data into the table: "risdata.doe_related_rec"
  """
  insert_risdata_doe_related_rec(
    """
    the rows to be inserted
    """
    objects: [risdata_doe_related_rec_insert_input!]!

    """
    on conflict condition
    """
    on_conflict: risdata_doe_related_rec_on_conflict
  ): risdata_doe_related_rec_mutation_response

  """
  insert a single row into the table: "risdata.doe_related_rec"
  """
  insert_risdata_doe_related_rec_one(
    """
    the row to be inserted
    """
    object: risdata_doe_related_rec_insert_input!

    """
    on conflict condition
    """
    on_conflict: risdata_doe_related_rec_on_conflict
  ): risdata_doe_related_rec

  """
  insert data into the table: "risdata.ocr"
  """
  insert_risdata_ocr(
    """
    the rows to be inserted
    """
    objects: [risdata_ocr_insert_input!]!

    """
    on conflict condition
    """
    on_conflict: risdata_ocr_on_conflict
  ): risdata_ocr_mutation_response

  """
  insert a single row into the table: "risdata.ocr"
  """
  insert_risdata_ocr_one(
    """
    the row to be inserted
    """
    object: risdata_ocr_insert_input!

    """
    on conflict condition
    """
    on_conflict: risdata_ocr_on_conflict
  ): risdata_ocr

  """
  insert data into the table: "risdata.type"
  """
  insert_risdata_type(
    """
    the rows to be inserted
    """
    objects: [risdata_type_insert_input!]!

    """
    on conflict condition
    """
    on_conflict: risdata_type_on_conflict
  ): risdata_type_mutation_response

  """
  insert data into the table: "risdata.type_lookup"
  """
  insert_risdata_type_lookup(
    """
    the rows to be inserted
    """
    objects: [risdata_type_lookup_insert_input!]!

    """
    on conflict condition
    """
    on_conflict: risdata_type_lookup_on_conflict
  ): risdata_type_lookup_mutation_response

  """
  insert a single row into the table: "risdata.type_lookup"
  """
  insert_risdata_type_lookup_one(
    """
    the row to be inserted
    """
    object: risdata_type_lookup_insert_input!

    """
    on conflict condition
    """
    on_conflict: risdata_type_lookup_on_conflict
  ): risdata_type_lookup

  """
  insert a single row into the table: "risdata.type"
  """
  insert_risdata_type_one(
    """
    the row to be inserted
    """
    object: risdata_type_insert_input!

    """
    on conflict condition
    """
    on_conflict: risdata_type_on_conflict
  ): risdata_type

  """
  insert data into the table: "workflow.adhoc"
  """
  insert_workflow_adhoc(
    """
    the rows to be inserted
    """
    objects: [workflow_adhoc_insert_input!]!
  ): workflow_adhoc_mutation_response

  """
  insert data into the table: "workflow.adhoc_card"
  """
  insert_workflow_adhoc_card(
    """
    the rows to be inserted
    """
    objects: [workflow_adhoc_card_insert_input!]!
  ): workflow_adhoc_card_mutation_response

  """
  insert a single row into the table: "workflow.adhoc_card"
  """
  insert_workflow_adhoc_card_one(
    """
    the row to be inserted
    """
    object: workflow_adhoc_card_insert_input!
  ): workflow_adhoc_card

  """
  insert data into the table: "workflow.adhoc_checks"
  """
  insert_workflow_adhoc_checks(
    """
    the rows to be inserted
    """
    objects: [workflow_adhoc_checks_insert_input!]!
  ): workflow_adhoc_checks_mutation_response

  """
  insert a single row into the table: "workflow.adhoc_checks"
  """
  insert_workflow_adhoc_checks_one(
    """
    the row to be inserted
    """
    object: workflow_adhoc_checks_insert_input!
  ): workflow_adhoc_checks

  """
  insert a single row into the table: "workflow.adhoc"
  """
  insert_workflow_adhoc_one(
    """
    the row to be inserted
    """
    object: workflow_adhoc_insert_input!
  ): workflow_adhoc

  """
  insert data into the table: "workflow.adhoc_requests"
  """
  insert_workflow_adhoc_requests(
    """
    the rows to be inserted
    """
    objects: [workflow_adhoc_requests_insert_input!]!
  ): workflow_adhoc_requests_mutation_response

  """
  insert a single row into the table: "workflow.adhoc_requests"
  """
  insert_workflow_adhoc_requests_one(
    """
    the row to be inserted
    """
    object: workflow_adhoc_requests_insert_input!
  ): workflow_adhoc_requests

  """
  insert data into the table: "workflow.call_center_acc_no"
  """
  insert_workflow_call_center_acc_no(
    """
    the rows to be inserted
    """
    objects: [workflow_call_center_acc_no_insert_input!]!
  ): workflow_call_center_acc_no_mutation_response

  """
  insert a single row into the table: "workflow.call_center_acc_no"
  """
  insert_workflow_call_center_acc_no_one(
    """
    the row to be inserted
    """
    object: workflow_call_center_acc_no_insert_input!
  ): workflow_call_center_acc_no

  """
  insert data into the table: "workflow.call_center_batch"
  """
  insert_workflow_call_center_batch(
    """
    the rows to be inserted
    """
    objects: [workflow_call_center_batch_insert_input!]!

    """
    on conflict condition
    """
    on_conflict: workflow_call_center_batch_on_conflict
  ): workflow_call_center_batch_mutation_response

  """
  insert a single row into the table: "workflow.call_center_batch"
  """
  insert_workflow_call_center_batch_one(
    """
    the row to be inserted
    """
    object: workflow_call_center_batch_insert_input!

    """
    on conflict condition
    """
    on_conflict: workflow_call_center_batch_on_conflict
  ): workflow_call_center_batch

  """
  insert data into the table: "workflow.copyright_docs"
  """
  insert_workflow_copyright_docs(
    """
    the rows to be inserted
    """
    objects: [workflow_copyright_docs_insert_input!]!
  ): workflow_copyright_docs_mutation_response

  """
  insert a single row into the table: "workflow.copyright_docs"
  """
  insert_workflow_copyright_docs_one(
    """
    the row to be inserted
    """
    object: workflow_copyright_docs_insert_input!
  ): workflow_copyright_docs

  """
  insert data into the table: "workflow.doc_comments"
  """
  insert_workflow_doc_comments(
    """
    the rows to be inserted
    """
    objects: [workflow_doc_comments_insert_input!]!
  ): workflow_doc_comments_mutation_response

  """
  insert a single row into the table: "workflow.doc_comments"
  """
  insert_workflow_doc_comments_one(
    """
    the row to be inserted
    """
    object: workflow_doc_comments_insert_input!
  ): workflow_doc_comments

  """
  insert data into the table: "workflow.doc_names"
  """
  insert_workflow_doc_names(
    """
    the rows to be inserted
    """
    objects: [workflow_doc_names_insert_input!]!
  ): workflow_doc_names_mutation_response

  """
  insert a single row into the table: "workflow.doc_names"
  """
  insert_workflow_doc_names_one(
    """
    the row to be inserted
    """
    object: workflow_doc_names_insert_input!
  ): workflow_doc_names

  """
  insert data into the table: "workflow.doc_sources"
  """
  insert_workflow_doc_sources(
    """
    the rows to be inserted
    """
    objects: [workflow_doc_sources_insert_input!]!
  ): workflow_doc_sources_mutation_response

  """
  insert a single row into the table: "workflow.doc_sources"
  """
  insert_workflow_doc_sources_one(
    """
    the row to be inserted
    """
    object: workflow_doc_sources_insert_input!
  ): workflow_doc_sources

  """
  insert data into the table: "workflow.doc_status"
  """
  insert_workflow_doc_status(
    """
    the rows to be inserted
    """
    objects: [workflow_doc_status_insert_input!]!
  ): workflow_doc_status_mutation_response

  """
  insert a single row into the table: "workflow.doc_status"
  """
  insert_workflow_doc_status_one(
    """
    the row to be inserted
    """
    object: workflow_doc_status_insert_input!
  ): workflow_doc_status

  """
  insert data into the table: "workflow.doc_tags_names"
  """
  insert_workflow_doc_tags_names(
    """
    the rows to be inserted
    """
    objects: [workflow_doc_tags_names_insert_input!]!

    """
    on conflict condition
    """
    on_conflict: workflow_doc_tags_names_on_conflict
  ): workflow_doc_tags_names_mutation_response

  """
  insert a single row into the table: "workflow.doc_tags_names"
  """
  insert_workflow_doc_tags_names_one(
    """
    the row to be inserted
    """
    object: workflow_doc_tags_names_insert_input!

    """
    on conflict condition
    """
    on_conflict: workflow_doc_tags_names_on_conflict
  ): workflow_doc_tags_names

  """
  insert data into the table: "workflow.documents"
  """
  insert_workflow_documents(
    """
    the rows to be inserted
    """
    objects: [workflow_documents_insert_input!]!

    """
    on conflict condition
    """
    on_conflict: workflow_documents_on_conflict
  ): workflow_documents_mutation_response

  """
  insert a single row into the table: "workflow.documents"
  """
  insert_workflow_documents_one(
    """
    the row to be inserted
    """
    object: workflow_documents_insert_input!

    """
    on conflict condition
    """
    on_conflict: workflow_documents_on_conflict
  ): workflow_documents

  """
  insert data into the table: "workflow.final_priv_log"
  """
  insert_workflow_final_priv_log(
    """
    the rows to be inserted
    """
    objects: [workflow_final_priv_log_insert_input!]!

    """
    on conflict condition
    """
    on_conflict: workflow_final_priv_log_on_conflict
  ): workflow_final_priv_log_mutation_response

  """
  insert data into the table: "workflow.final_priv_log_author"
  """
  insert_workflow_final_priv_log_author(
    """
    the rows to be inserted
    """
    objects: [workflow_final_priv_log_author_insert_input!]!
  ): workflow_final_priv_log_author_mutation_response

  """
  insert a single row into the table: "workflow.final_priv_log_author"
  """
  insert_workflow_final_priv_log_author_one(
    """
    the row to be inserted
    """
    object: workflow_final_priv_log_author_insert_input!
  ): workflow_final_priv_log_author

  """
  insert a single row into the table: "workflow.final_priv_log"
  """
  insert_workflow_final_priv_log_one(
    """
    the row to be inserted
    """
    object: workflow_final_priv_log_insert_input!

    """
    on conflict condition
    """
    on_conflict: workflow_final_priv_log_on_conflict
  ): workflow_final_priv_log

  """
  insert data into the table: "workflow.final_priv_log_recipient"
  """
  insert_workflow_final_priv_log_recipient(
    """
    the rows to be inserted
    """
    objects: [workflow_final_priv_log_recipient_insert_input!]!
  ): workflow_final_priv_log_recipient_mutation_response

  """
  insert a single row into the table: "workflow.final_priv_log_recipient"
  """
  insert_workflow_final_priv_log_recipient_one(
    """
    the row to be inserted
    """
    object: workflow_final_priv_log_recipient_insert_input!
  ): workflow_final_priv_log_recipient

  """
  insert data into the table: "workflow.highlight_words"
  """
  insert_workflow_highlight_words(
    """
    the rows to be inserted
    """
    objects: [workflow_highlight_words_insert_input!]!

    """
    on conflict condition
    """
    on_conflict: workflow_highlight_words_on_conflict
  ): workflow_highlight_words_mutation_response

  """
  insert a single row into the table: "workflow.highlight_words"
  """
  insert_workflow_highlight_words_one(
    """
    the row to be inserted
    """
    object: workflow_highlight_words_insert_input!

    """
    on conflict condition
    """
    on_conflict: workflow_highlight_words_on_conflict
  ): workflow_highlight_words

  """
  insert data into the table: "workflow.history"
  """
  insert_workflow_history(
    """
    the rows to be inserted
    """
    objects: [workflow_history_insert_input!]!

    """
    on conflict condition
    """
    on_conflict: workflow_history_on_conflict
  ): workflow_history_mutation_response

  """
  insert a single row into the table: "workflow.history"
  """
  insert_workflow_history_one(
    """
    the row to be inserted
    """
    object: workflow_history_insert_input!

    """
    on conflict condition
    """
    on_conflict: workflow_history_on_conflict
  ): workflow_history

  """
  insert data into the table: "workflow.lookups"
  """
  insert_workflow_lookups(
    """
    the rows to be inserted
    """
    objects: [workflow_lookups_insert_input!]!
  ): workflow_lookups_mutation_response

  """
  insert a single row into the table: "workflow.lookups"
  """
  insert_workflow_lookups_one(
    """
    the row to be inserted
    """
    object: workflow_lookups_insert_input!
  ): workflow_lookups

  """
  insert data into the table: "workflow.name_org_type"
  """
  insert_workflow_name_org_type(
    """
    the rows to be inserted
    """
    objects: [workflow_name_org_type_insert_input!]!
  ): workflow_name_org_type_mutation_response

  """
  insert a single row into the table: "workflow.name_org_type"
  """
  insert_workflow_name_org_type_one(
    """
    the row to be inserted
    """
    object: workflow_name_org_type_insert_input!
  ): workflow_name_org_type

  """
  insert data into the table: "workflow.name_type_lookup"
  """
  insert_workflow_name_type_lookup(
    """
    the rows to be inserted
    """
    objects: [workflow_name_type_lookup_insert_input!]!
  ): workflow_name_type_lookup_mutation_response

  """
  insert a single row into the table: "workflow.name_type_lookup"
  """
  insert_workflow_name_type_lookup_one(
    """
    the row to be inserted
    """
    object: workflow_name_type_lookup_insert_input!
  ): workflow_name_type_lookup

  """
  insert data into the table: "workflow.priv_log_detail"
  """
  insert_workflow_priv_log_detail(
    """
    the rows to be inserted
    """
    objects: [workflow_priv_log_detail_insert_input!]!

    """
    on conflict condition
    """
    on_conflict: workflow_priv_log_detail_on_conflict
  ): workflow_priv_log_detail_mutation_response

  """
  insert a single row into the table: "workflow.priv_log_detail"
  """
  insert_workflow_priv_log_detail_one(
    """
    the row to be inserted
    """
    object: workflow_priv_log_detail_insert_input!

    """
    on conflict condition
    """
    on_conflict: workflow_priv_log_detail_on_conflict
  ): workflow_priv_log_detail

  """
  insert data into the table: "workflow.priv_log_entry"
  """
  insert_workflow_priv_log_entry(
    """
    the rows to be inserted
    """
    objects: [workflow_priv_log_entry_insert_input!]!

    """
    on conflict condition
    """
    on_conflict: workflow_priv_log_entry_on_conflict
  ): workflow_priv_log_entry_mutation_response

  """
  insert a single row into the table: "workflow.priv_log_entry"
  """
  insert_workflow_priv_log_entry_one(
    """
    the row to be inserted
    """
    object: workflow_priv_log_entry_insert_input!

    """
    on conflict condition
    """
    on_conflict: workflow_priv_log_entry_on_conflict
  ): workflow_priv_log_entry

  """
  insert data into the table: "workflow.privacy_docs"
  """
  insert_workflow_privacy_docs(
    """
    the rows to be inserted
    """
    objects: [workflow_privacy_docs_insert_input!]!
  ): workflow_privacy_docs_mutation_response

  """
  insert a single row into the table: "workflow.privacy_docs"
  """
  insert_workflow_privacy_docs_one(
    """
    the row to be inserted
    """
    object: workflow_privacy_docs_insert_input!
  ): workflow_privacy_docs

  """
  insert data into the table: "workflow.redacted_docs"
  """
  insert_workflow_redacted_docs(
    """
    the rows to be inserted
    """
    objects: [workflow_redacted_docs_insert_input!]!
  ): workflow_redacted_docs_mutation_response

  """
  insert a single row into the table: "workflow.redacted_docs"
  """
  insert_workflow_redacted_docs_one(
    """
    the row to be inserted
    """
    object: workflow_redacted_docs_insert_input!
  ): workflow_redacted_docs

  """
  insert data into the table: "workflow.redacted_pages"
  """
  insert_workflow_redacted_pages(
    """
    the rows to be inserted
    """
    objects: [workflow_redacted_pages_insert_input!]!
  ): workflow_redacted_pages_mutation_response

  """
  insert a single row into the table: "workflow.redacted_pages"
  """
  insert_workflow_redacted_pages_one(
    """
    the row to be inserted
    """
    object: workflow_redacted_pages_insert_input!
  ): workflow_redacted_pages

  """
  insert data into the table: "workflow.redaction_processing"
  """
  insert_workflow_redaction_processing(
    """
    the rows to be inserted
    """
    objects: [workflow_redaction_processing_insert_input!]!
  ): workflow_redaction_processing_mutation_response

  """
  insert a single row into the table: "workflow.redaction_processing"
  """
  insert_workflow_redaction_processing_one(
    """
    the row to be inserted
    """
    object: workflow_redaction_processing_insert_input!
  ): workflow_redaction_processing

  """
  insert data into the table: "workflow.released_docs"
  """
  insert_workflow_released_docs(
    """
    the rows to be inserted
    """
    objects: [workflow_released_docs_insert_input!]!
  ): workflow_released_docs_mutation_response

  """
  insert a single row into the table: "workflow.released_docs"
  """
  insert_workflow_released_docs_one(
    """
    the row to be inserted
    """
    object: workflow_released_docs_insert_input!
  ): workflow_released_docs

  """
  insert data into the table: "workflow.sources"
  """
  insert_workflow_sources(
    """
    the rows to be inserted
    """
    objects: [workflow_sources_insert_input!]!

    """
    on conflict condition
    """
    on_conflict: workflow_sources_on_conflict
  ): workflow_sources_mutation_response

  """
  insert a single row into the table: "workflow.sources"
  """
  insert_workflow_sources_one(
    """
    the row to be inserted
    """
    object: workflow_sources_insert_input!

    """
    on conflict condition
    """
    on_conflict: workflow_sources_on_conflict
  ): workflow_sources

  """
  insert data into the table: "workflow.stages"
  """
  insert_workflow_stages(
    """
    the rows to be inserted
    """
    objects: [workflow_stages_insert_input!]!
  ): workflow_stages_mutation_response

  """
  insert a single row into the table: "workflow.stages"
  """
  insert_workflow_stages_one(
    """
    the row to be inserted
    """
    object: workflow_stages_insert_input!
  ): workflow_stages

  """
  insert data into the table: "workflow.stamped_pages"
  """
  insert_workflow_stamped_pages(
    """
    the rows to be inserted
    """
    objects: [workflow_stamped_pages_insert_input!]!
  ): workflow_stamped_pages_mutation_response

  """
  insert a single row into the table: "workflow.stamped_pages"
  """
  insert_workflow_stamped_pages_one(
    """
    the row to be inserted
    """
    object: workflow_stamped_pages_insert_input!
  ): workflow_stamped_pages

  """
  insert data into the table: "workflow.users"
  """
  insert_workflow_users(
    """
    the rows to be inserted
    """
    objects: [workflow_users_insert_input!]!
  ): workflow_users_mutation_response

  """
  insert a single row into the table: "workflow.users"
  """
  insert_workflow_users_one(
    """
    the row to be inserted
    """
    object: workflow_users_insert_input!
  ): workflow_users

  """
  insert data into the table: "workflow.workflow"
  """
  insert_workflow_workflow(
    """
    the rows to be inserted
    """
    objects: [workflow_workflow_insert_input!]!

    """
    on conflict condition
    """
    on_conflict: workflow_workflow_on_conflict
  ): workflow_workflow_mutation_response

  """
  insert data into the table: "workflow.workflow_decision"
  """
  insert_workflow_workflow_decision(
    """
    the rows to be inserted
    """
    objects: [workflow_workflow_decision_insert_input!]!
  ): workflow_workflow_decision_mutation_response

  """
  insert a single row into the table: "workflow.workflow_decision"
  """
  insert_workflow_workflow_decision_one(
    """
    the row to be inserted
    """
    object: workflow_workflow_decision_insert_input!
  ): workflow_workflow_decision

  """
  insert a single row into the table: "workflow.workflow"
  """
  insert_workflow_workflow_one(
    """
    the row to be inserted
    """
    object: workflow_workflow_insert_input!

    """
    on conflict condition
    """
    on_conflict: workflow_workflow_on_conflict
  ): workflow_workflow

  """
  update data of the table: "efiles.contain"
  """
  update_efiles_contain(
    """
    increments the integer columns with given value of the filtered values
    """
    _inc: efiles_contain_inc_input

    """
    sets the columns of the filtered rows to the given values
    """
    _set: efiles_contain_set_input

    """
    filter the rows which have to be updated
    """
    where: efiles_contain_bool_exp!
  ): efiles_contain_mutation_response

  """
  update single row of the table: "efiles.contain"
  """
  update_efiles_contain_by_pk(
    """
    increments the integer columns with given value of the filtered values
    """
    _inc: efiles_contain_inc_input

    """
    sets the columns of the filtered rows to the given values
    """
    _set: efiles_contain_set_input
    pk_columns: efiles_contain_pk_columns_input!
  ): efiles_contain

  """
  update data of the table: "efiles.doc_main"
  """
  update_efiles_doc_main(
    """
    increments the integer columns with given value of the filtered values
    """
    _inc: efiles_doc_main_inc_input

    """
    sets the columns of the filtered rows to the given values
    """
    _set: efiles_doc_main_set_input

    """
    filter the rows which have to be updated
    """
    where: efiles_doc_main_bool_exp!
  ): efiles_doc_main_mutation_response

  """
  update single row of the table: "efiles.doc_main"
  """
  update_efiles_doc_main_by_pk(
    """
    increments the integer columns with given value of the filtered values
    """
    _inc: efiles_doc_main_inc_input

    """
    sets the columns of the filtered rows to the given values
    """
    _set: efiles_doc_main_set_input
    pk_columns: efiles_doc_main_pk_columns_input!
  ): efiles_doc_main

  """
  update data of the table: "efiles.ocr"
  """
  update_efiles_ocr(
    """
    increments the integer columns with given value of the filtered values
    """
    _inc: efiles_ocr_inc_input

    """
    sets the columns of the filtered rows to the given values
    """
    _set: efiles_ocr_set_input

    """
    filter the rows which have to be updated
    """
    where: efiles_ocr_bool_exp!
  ): efiles_ocr_mutation_response

  """
  update single row of the table: "efiles.ocr"
  """
  update_efiles_ocr_by_pk(
    """
    increments the integer columns with given value of the filtered values
    """
    _inc: efiles_ocr_inc_input

    """
    sets the columns of the filtered rows to the given values
    """
    _set: efiles_ocr_set_input
    pk_columns: efiles_ocr_pk_columns_input!
  ): efiles_ocr

  """
  update data of the table: "efiles.redaction_types"
  """
  update_efiles_redaction_types(
    """
    increments the integer columns with given value of the filtered values
    """
    _inc: efiles_redaction_types_inc_input

    """
    sets the columns of the filtered rows to the given values
    """
    _set: efiles_redaction_types_set_input

    """
    filter the rows which have to be updated
    """
    where: efiles_redaction_types_bool_exp!
  ): efiles_redaction_types_mutation_response

  """
  update single row of the table: "efiles.redaction_types"
  """
  update_efiles_redaction_types_by_pk(
    """
    increments the integer columns with given value of the filtered values
    """
    _inc: efiles_redaction_types_inc_input

    """
    sets the columns of the filtered rows to the given values
    """
    _set: efiles_redaction_types_set_input
    pk_columns: efiles_redaction_types_pk_columns_input!
  ): efiles_redaction_types

  """
  update data of the table: "efiles.type"
  """
  update_efiles_type(
    """
    sets the columns of the filtered rows to the given values
    """
    _set: efiles_type_set_input

    """
    filter the rows which have to be updated
    """
    where: efiles_type_bool_exp!
  ): efiles_type_mutation_response

  """
  update single row of the table: "efiles.type"
  """
  update_efiles_type_by_pk(
    """
    sets the columns of the filtered rows to the given values
    """
    _set: efiles_type_set_input
    pk_columns: efiles_type_pk_columns_input!
  ): efiles_type

  """
  update data of the table: "efiles.type_lookup"
  """
  update_efiles_type_lookup(
    """
    sets the columns of the filtered rows to the given values
    """
    _set: efiles_type_lookup_set_input

    """
    filter the rows which have to be updated
    """
    where: efiles_type_lookup_bool_exp!
  ): efiles_type_lookup_mutation_response

  """
  update data of the table: "email.doc_main"
  """
  update_email_doc_main(
    """
    increments the integer columns with given value of the filtered values
    """
    _inc: email_doc_main_inc_input

    """
    sets the columns of the filtered rows to the given values
    """
    _set: email_doc_main_set_input

    """
    filter the rows which have to be updated
    """
    where: email_doc_main_bool_exp!
  ): email_doc_main_mutation_response

  """
  update single row of the table: "email.doc_main"
  """
  update_email_doc_main_by_pk(
    """
    increments the integer columns with given value of the filtered values
    """
    _inc: email_doc_main_inc_input

    """
    sets the columns of the filtered rows to the given values
    """
    _set: email_doc_main_set_input
    pk_columns: email_doc_main_pk_columns_input!
  ): email_doc_main

  """
  update data of the table: "email.doe_related_rec"
  """
  update_email_doe_related_rec(
    """
    sets the columns of the filtered rows to the given values
    """
    _set: email_doe_related_rec_set_input

    """
    filter the rows which have to be updated
    """
    where: email_doe_related_rec_bool_exp!
  ): email_doe_related_rec_mutation_response

  """
  update single row of the table: "email.doe_related_rec"
  """
  update_email_doe_related_rec_by_pk(
    """
    sets the columns of the filtered rows to the given values
    """
    _set: email_doe_related_rec_set_input
    pk_columns: email_doe_related_rec_pk_columns_input!
  ): email_doe_related_rec

  """
  update data of the table: "email.ocr"
  """
  update_email_ocr(
    """
    increments the integer columns with given value of the filtered values
    """
    _inc: email_ocr_inc_input

    """
    sets the columns of the filtered rows to the given values
    """
    _set: email_ocr_set_input

    """
    filter the rows which have to be updated
    """
    where: email_ocr_bool_exp!
  ): email_ocr_mutation_response

  """
  update single row of the table: "email.ocr"
  """
  update_email_ocr_by_pk(
    """
    increments the integer columns with given value of the filtered values
    """
    _inc: email_ocr_inc_input

    """
    sets the columns of the filtered rows to the given values
    """
    _set: email_ocr_set_input
    pk_columns: email_ocr_pk_columns_input!
  ): email_ocr

  """
  update data of the table: "email.type"
  """
  update_email_type(
    """
    sets the columns of the filtered rows to the given values
    """
    _set: email_type_set_input

    """
    filter the rows which have to be updated
    """
    where: email_type_bool_exp!
  ): email_type_mutation_response

  """
  update single row of the table: "email.type"
  """
  update_email_type_by_pk(
    """
    sets the columns of the filtered rows to the given values
    """
    _set: email_type_set_input
    pk_columns: email_type_pk_columns_input!
  ): email_type

  """
  update data of the table: "email.type_lookup"
  """
  update_email_type_lookup(
    """
    sets the columns of the filtered rows to the given values
    """
    _set: email_type_lookup_set_input

    """
    filter the rows which have to be updated
    """
    where: email_type_lookup_bool_exp!
  ): email_type_lookup_mutation_response

  """
  update single row of the table: "email.type_lookup"
  """
  update_email_type_lookup_by_pk(
    """
    sets the columns of the filtered rows to the given values
    """
    _set: email_type_lookup_set_input
    pk_columns: email_type_lookup_pk_columns_input!
  ): email_type_lookup

  """
  update data of the table: "paper.doc_main"
  """
  update_paper_doc_main(
    """
    increments the integer columns with given value of the filtered values
    """
    _inc: paper_doc_main_inc_input

    """
    sets the columns of the filtered rows to the given values
    """
    _set: paper_doc_main_set_input

    """
    filter the rows which have to be updated
    """
    where: paper_doc_main_bool_exp!
  ): paper_doc_main_mutation_response

  """
  update single row of the table: "paper.doc_main"
  """
  update_paper_doc_main_by_pk(
    """
    increments the integer columns with given value of the filtered values
    """
    _inc: paper_doc_main_inc_input

    """
    sets the columns of the filtered rows to the given values
    """
    _set: paper_doc_main_set_input
    pk_columns: paper_doc_main_pk_columns_input!
  ): paper_doc_main

  """
  update data of the table: "paper.ocr"
  """
  update_paper_ocr(
    """
    increments the integer columns with given value of the filtered values
    """
    _inc: paper_ocr_inc_input

    """
    sets the columns of the filtered rows to the given values
    """
    _set: paper_ocr_set_input

    """
    filter the rows which have to be updated
    """
    where: paper_ocr_bool_exp!
  ): paper_ocr_mutation_response

  """
  update single row of the table: "paper.ocr"
  """
  update_paper_ocr_by_pk(
    """
    increments the integer columns with given value of the filtered values
    """
    _inc: paper_ocr_inc_input

    """
    sets the columns of the filtered rows to the given values
    """
    _set: paper_ocr_set_input
    pk_columns: paper_ocr_pk_columns_input!
  ): paper_ocr

  """
  update data of the table: "paper.type"
  """
  update_paper_type(
    """
    sets the columns of the filtered rows to the given values
    """
    _set: paper_type_set_input

    """
    filter the rows which have to be updated
    """
    where: paper_type_bool_exp!
  ): paper_type_mutation_response

  """
  update single row of the table: "paper.type"
  """
  update_paper_type_by_pk(
    """
    sets the columns of the filtered rows to the given values
    """
    _set: paper_type_set_input
    pk_columns: paper_type_pk_columns_input!
  ): paper_type

  """
  update data of the table: "paper.type_lookup"
  """
  update_paper_type_lookup(
    """
    sets the columns of the filtered rows to the given values
    """
    _set: paper_type_lookup_set_input

    """
    filter the rows which have to be updated
    """
    where: paper_type_lookup_bool_exp!
  ): paper_type_lookup_mutation_response

  """
  update single row of the table: "paper.type_lookup"
  """
  update_paper_type_lookup_by_pk(
    """
    sets the columns of the filtered rows to the given values
    """
    _set: paper_type_lookup_set_input
    pk_columns: paper_type_lookup_pk_columns_input!
  ): paper_type_lookup

  """
  update data of the table: "risdata.case_collection"
  """
  update_risdata_case_collection(
    """
    increments the integer columns with given value of the filtered values
    """
    _inc: risdata_case_collection_inc_input

    """
    sets the columns of the filtered rows to the given values
    """
    _set: risdata_case_collection_set_input

    """
    filter the rows which have to be updated
    """
    where: risdata_case_collection_bool_exp!
  ): risdata_case_collection_mutation_response

  """
  update single row of the table: "risdata.case_collection"
  """
  update_risdata_case_collection_by_pk(
    """
    increments the integer columns with given value of the filtered values
    """
    _inc: risdata_case_collection_inc_input

    """
    sets the columns of the filtered rows to the given values
    """
    _set: risdata_case_collection_set_input
    pk_columns: risdata_case_collection_pk_columns_input!
  ): risdata_case_collection

  """
  update data of the table: "risdata.doc_main"
  """
  update_risdata_doc_main(
    """
    increments the integer columns with given value of the filtered values
    """
    _inc: risdata_doc_main_inc_input

    """
    sets the columns of the filtered rows to the given values
    """
    _set: risdata_doc_main_set_input

    """
    filter the rows which have to be updated
    """
    where: risdata_doc_main_bool_exp!
  ): risdata_doc_main_mutation_response

  """
  update single row of the table: "risdata.doc_main"
  """
  update_risdata_doc_main_by_pk(
    """
    increments the integer columns with given value of the filtered values
    """
    _inc: risdata_doc_main_inc_input

    """
    sets the columns of the filtered rows to the given values
    """
    _set: risdata_doc_main_set_input
    pk_columns: risdata_doc_main_pk_columns_input!
  ): risdata_doc_main

  """
  update data of the table: "risdata.doe_related_rec"
  """
  update_risdata_doe_related_rec(
    """
    sets the columns of the filtered rows to the given values
    """
    _set: risdata_doe_related_rec_set_input

    """
    filter the rows which have to be updated
    """
    where: risdata_doe_related_rec_bool_exp!
  ): risdata_doe_related_rec_mutation_response

  """
  update single row of the table: "risdata.doe_related_rec"
  """
  update_risdata_doe_related_rec_by_pk(
    """
    sets the columns of the filtered rows to the given values
    """
    _set: risdata_doe_related_rec_set_input
    pk_columns: risdata_doe_related_rec_pk_columns_input!
  ): risdata_doe_related_rec

  """
  update data of the table: "risdata.ocr"
  """
  update_risdata_ocr(
    """
    increments the integer columns with given value of the filtered values
    """
    _inc: risdata_ocr_inc_input

    """
    sets the columns of the filtered rows to the given values
    """
    _set: risdata_ocr_set_input

    """
    filter the rows which have to be updated
    """
    where: risdata_ocr_bool_exp!
  ): risdata_ocr_mutation_response

  """
  update single row of the table: "risdata.ocr"
  """
  update_risdata_ocr_by_pk(
    """
    increments the integer columns with given value of the filtered values
    """
    _inc: risdata_ocr_inc_input

    """
    sets the columns of the filtered rows to the given values
    """
    _set: risdata_ocr_set_input
    pk_columns: risdata_ocr_pk_columns_input!
  ): risdata_ocr

  """
  update data of the table: "risdata.type"
  """
  update_risdata_type(
    """
    sets the columns of the filtered rows to the given values
    """
    _set: risdata_type_set_input

    """
    filter the rows which have to be updated
    """
    where: risdata_type_bool_exp!
  ): risdata_type_mutation_response

  """
  update single row of the table: "risdata.type"
  """
  update_risdata_type_by_pk(
    """
    sets the columns of the filtered rows to the given values
    """
    _set: risdata_type_set_input
    pk_columns: risdata_type_pk_columns_input!
  ): risdata_type

  """
  update data of the table: "risdata.type_lookup"
  """
  update_risdata_type_lookup(
    """
    sets the columns of the filtered rows to the given values
    """
    _set: risdata_type_lookup_set_input

    """
    filter the rows which have to be updated
    """
    where: risdata_type_lookup_bool_exp!
  ): risdata_type_lookup_mutation_response

  """
  update single row of the table: "risdata.type_lookup"
  """
  update_risdata_type_lookup_by_pk(
    """
    sets the columns of the filtered rows to the given values
    """
    _set: risdata_type_lookup_set_input
    pk_columns: risdata_type_lookup_pk_columns_input!
  ): risdata_type_lookup

  """
  update data of the table: "workflow.adhoc"
  """
  update_workflow_adhoc(
    """
    increments the integer columns with given value of the filtered values
    """
    _inc: workflow_adhoc_inc_input

    """
    sets the columns of the filtered rows to the given values
    """
    _set: workflow_adhoc_set_input

    """
    filter the rows which have to be updated
    """
    where: workflow_adhoc_bool_exp!
  ): workflow_adhoc_mutation_response

  """
  update data of the table: "workflow.adhoc_card"
  """
  update_workflow_adhoc_card(
    """
    increments the integer columns with given value of the filtered values
    """
    _inc: workflow_adhoc_card_inc_input

    """
    sets the columns of the filtered rows to the given values
    """
    _set: workflow_adhoc_card_set_input

    """
    filter the rows which have to be updated
    """
    where: workflow_adhoc_card_bool_exp!
  ): workflow_adhoc_card_mutation_response

  """
  update data of the table: "workflow.adhoc_checks"
  """
  update_workflow_adhoc_checks(
    """
    increments the integer columns with given value of the filtered values
    """
    _inc: workflow_adhoc_checks_inc_input

    """
    sets the columns of the filtered rows to the given values
    """
    _set: workflow_adhoc_checks_set_input

    """
    filter the rows which have to be updated
    """
    where: workflow_adhoc_checks_bool_exp!
  ): workflow_adhoc_checks_mutation_response

  """
  update data of the table: "workflow.adhoc_requests"
  """
  update_workflow_adhoc_requests(
    """
    sets the columns of the filtered rows to the given values
    """
    _set: workflow_adhoc_requests_set_input

    """
    filter the rows which have to be updated
    """
    where: workflow_adhoc_requests_bool_exp!
  ): workflow_adhoc_requests_mutation_response

  """
  update data of the table: "workflow.call_center_acc_no"
  """
  update_workflow_call_center_acc_no(
    """
    increments the integer columns with given value of the filtered values
    """
    _inc: workflow_call_center_acc_no_inc_input

    """
    sets the columns of the filtered rows to the given values
    """
    _set: workflow_call_center_acc_no_set_input

    """
    filter the rows which have to be updated
    """
    where: workflow_call_center_acc_no_bool_exp!
  ): workflow_call_center_acc_no_mutation_response

  """
  update data of the table: "workflow.call_center_batch"
  """
  update_workflow_call_center_batch(
    """
    increments the integer columns with given value of the filtered values
    """
    _inc: workflow_call_center_batch_inc_input

    """
    sets the columns of the filtered rows to the given values
    """
    _set: workflow_call_center_batch_set_input

    """
    filter the rows which have to be updated
    """
    where: workflow_call_center_batch_bool_exp!
  ): workflow_call_center_batch_mutation_response

  """
  update single row of the table: "workflow.call_center_batch"
  """
  update_workflow_call_center_batch_by_pk(
    """
    increments the integer columns with given value of the filtered values
    """
    _inc: workflow_call_center_batch_inc_input

    """
    sets the columns of the filtered rows to the given values
    """
    _set: workflow_call_center_batch_set_input
    pk_columns: workflow_call_center_batch_pk_columns_input!
  ): workflow_call_center_batch

  """
  update data of the table: "workflow.copyright_docs"
  """
  update_workflow_copyright_docs(
    """
    sets the columns of the filtered rows to the given values
    """
    _set: workflow_copyright_docs_set_input

    """
    filter the rows which have to be updated
    """
    where: workflow_copyright_docs_bool_exp!
  ): workflow_copyright_docs_mutation_response

  """
  update data of the table: "workflow.doc_comments"
  """
  update_workflow_doc_comments(
    """
    increments the integer columns with given value of the filtered values
    """
    _inc: workflow_doc_comments_inc_input

    """
    sets the columns of the filtered rows to the given values
    """
    _set: workflow_doc_comments_set_input

    """
    filter the rows which have to be updated
    """
    where: workflow_doc_comments_bool_exp!
  ): workflow_doc_comments_mutation_response

  """
  update data of the table: "workflow.doc_names"
  """
  update_workflow_doc_names(
    """
    increments the integer columns with given value of the filtered values
    """
    _inc: workflow_doc_names_inc_input

    """
    sets the columns of the filtered rows to the given values
    """
    _set: workflow_doc_names_set_input

    """
    filter the rows which have to be updated
    """
    where: workflow_doc_names_bool_exp!
  ): workflow_doc_names_mutation_response

  """
  update data of the table: "workflow.doc_sources"
  """
  update_workflow_doc_sources(
    """
    increments the integer columns with given value of the filtered values
    """
    _inc: workflow_doc_sources_inc_input

    """
    sets the columns of the filtered rows to the given values
    """
    _set: workflow_doc_sources_set_input

    """
    filter the rows which have to be updated
    """
    where: workflow_doc_sources_bool_exp!
  ): workflow_doc_sources_mutation_response

  """
  update data of the table: "workflow.doc_status"
  """
  update_workflow_doc_status(
    """
    sets the columns of the filtered rows to the given values
    """
    _set: workflow_doc_status_set_input

    """
    filter the rows which have to be updated
    """
    where: workflow_doc_status_bool_exp!
  ): workflow_doc_status_mutation_response

  """
  update data of the table: "workflow.doc_tags_names"
  """
  update_workflow_doc_tags_names(
    """
    increments the integer columns with given value of the filtered values
    """
    _inc: workflow_doc_tags_names_inc_input

    """
    sets the columns of the filtered rows to the given values
    """
    _set: workflow_doc_tags_names_set_input

    """
    filter the rows which have to be updated
    """
    where: workflow_doc_tags_names_bool_exp!
  ): workflow_doc_tags_names_mutation_response

  """
  update single row of the table: "workflow.doc_tags_names"
  """
  update_workflow_doc_tags_names_by_pk(
    """
    increments the integer columns with given value of the filtered values
    """
    _inc: workflow_doc_tags_names_inc_input

    """
    sets the columns of the filtered rows to the given values
    """
    _set: workflow_doc_tags_names_set_input
    pk_columns: workflow_doc_tags_names_pk_columns_input!
  ): workflow_doc_tags_names

  """
  update data of the table: "workflow.documents"
  """
  update_workflow_documents(
    """
    increments the integer columns with given value of the filtered values
    """
    _inc: workflow_documents_inc_input

    """
    sets the columns of the filtered rows to the given values
    """
    _set: workflow_documents_set_input

    """
    filter the rows which have to be updated
    """
    where: workflow_documents_bool_exp!
  ): workflow_documents_mutation_response

  """
  update single row of the table: "workflow.documents"
  """
  update_workflow_documents_by_pk(
    """
    increments the integer columns with given value of the filtered values
    """
    _inc: workflow_documents_inc_input

    """
    sets the columns of the filtered rows to the given values
    """
    _set: workflow_documents_set_input
    pk_columns: workflow_documents_pk_columns_input!
  ): workflow_documents

  """
  update data of the table: "workflow.final_priv_log"
  """
  update_workflow_final_priv_log(
    """
    sets the columns of the filtered rows to the given values
    """
    _set: workflow_final_priv_log_set_input

    """
    filter the rows which have to be updated
    """
    where: workflow_final_priv_log_bool_exp!
  ): workflow_final_priv_log_mutation_response

  """
  update data of the table: "workflow.final_priv_log_author"
  """
  update_workflow_final_priv_log_author(
    """
    sets the columns of the filtered rows to the given values
    """
    _set: workflow_final_priv_log_author_set_input

    """
    filter the rows which have to be updated
    """
    where: workflow_final_priv_log_author_bool_exp!
  ): workflow_final_priv_log_author_mutation_response

  """
  update single row of the table: "workflow.final_priv_log"
  """
  update_workflow_final_priv_log_by_pk(
    """
    sets the columns of the filtered rows to the given values
    """
    _set: workflow_final_priv_log_set_input
    pk_columns: workflow_final_priv_log_pk_columns_input!
  ): workflow_final_priv_log

  """
  update data of the table: "workflow.final_priv_log_recipient"
  """
  update_workflow_final_priv_log_recipient(
    """
    sets the columns of the filtered rows to the given values
    """
    _set: workflow_final_priv_log_recipient_set_input

    """
    filter the rows which have to be updated
    """
    where: workflow_final_priv_log_recipient_bool_exp!
  ): workflow_final_priv_log_recipient_mutation_response

  """
  update data of the table: "workflow.highlight_words"
  """
  update_workflow_highlight_words(
    """
    increments the integer columns with given value of the filtered values
    """
    _inc: workflow_highlight_words_inc_input

    """
    sets the columns of the filtered rows to the given values
    """
    _set: workflow_highlight_words_set_input

    """
    filter the rows which have to be updated
    """
    where: workflow_highlight_words_bool_exp!
  ): workflow_highlight_words_mutation_response

  """
  update single row of the table: "workflow.highlight_words"
  """
  update_workflow_highlight_words_by_pk(
    """
    increments the integer columns with given value of the filtered values
    """
    _inc: workflow_highlight_words_inc_input

    """
    sets the columns of the filtered rows to the given values
    """
    _set: workflow_highlight_words_set_input
    pk_columns: workflow_highlight_words_pk_columns_input!
  ): workflow_highlight_words

  """
  update data of the table: "workflow.history"
  """
  update_workflow_history(
    """
    increments the integer columns with given value of the filtered values
    """
    _inc: workflow_history_inc_input

    """
    sets the columns of the filtered rows to the given values
    """
    _set: workflow_history_set_input

    """
    filter the rows which have to be updated
    """
    where: workflow_history_bool_exp!
  ): workflow_history_mutation_response

  """
  update single row of the table: "workflow.history"
  """
  update_workflow_history_by_pk(
    """
    increments the integer columns with given value of the filtered values
    """
    _inc: workflow_history_inc_input

    """
    sets the columns of the filtered rows to the given values
    """
    _set: workflow_history_set_input
    pk_columns: workflow_history_pk_columns_input!
  ): workflow_history

  """
  update data of the table: "workflow.lookups"
  """
  update_workflow_lookups(
    """
    increments the integer columns with given value of the filtered values
    """
    _inc: workflow_lookups_inc_input

    """
    sets the columns of the filtered rows to the given values
    """
    _set: workflow_lookups_set_input

    """
    filter the rows which have to be updated
    """
    where: workflow_lookups_bool_exp!
  ): workflow_lookups_mutation_response

  """
  update data of the table: "workflow.name_org_type"
  """
  update_workflow_name_org_type(
    """
    increments the integer columns with given value of the filtered values
    """
    _inc: workflow_name_org_type_inc_input

    """
    sets the columns of the filtered rows to the given values
    """
    _set: workflow_name_org_type_set_input

    """
    filter the rows which have to be updated
    """
    where: workflow_name_org_type_bool_exp!
  ): workflow_name_org_type_mutation_response

  """
  update data of the table: "workflow.name_type_lookup"
  """
  update_workflow_name_type_lookup(
    """
    sets the columns of the filtered rows to the given values
    """
    _set: workflow_name_type_lookup_set_input

    """
    filter the rows which have to be updated
    """
    where: workflow_name_type_lookup_bool_exp!
  ): workflow_name_type_lookup_mutation_response

  """
  update data of the table: "workflow.priv_log_detail"
  """
  update_workflow_priv_log_detail(
    """
    increments the integer columns with given value of the filtered values
    """
    _inc: workflow_priv_log_detail_inc_input

    """
    sets the columns of the filtered rows to the given values
    """
    _set: workflow_priv_log_detail_set_input

    """
    filter the rows which have to be updated
    """
    where: workflow_priv_log_detail_bool_exp!
  ): workflow_priv_log_detail_mutation_response

  """
  update single row of the table: "workflow.priv_log_detail"
  """
  update_workflow_priv_log_detail_by_pk(
    """
    increments the integer columns with given value of the filtered values
    """
    _inc: workflow_priv_log_detail_inc_input

    """
    sets the columns of the filtered rows to the given values
    """
    _set: workflow_priv_log_detail_set_input
    pk_columns: workflow_priv_log_detail_pk_columns_input!
  ): workflow_priv_log_detail

  """
  update data of the table: "workflow.priv_log_entry"
  """
  update_workflow_priv_log_entry(
    """
    increments the integer columns with given value of the filtered values
    """
    _inc: workflow_priv_log_entry_inc_input

    """
    sets the columns of the filtered rows to the given values
    """
    _set: workflow_priv_log_entry_set_input

    """
    filter the rows which have to be updated
    """
    where: workflow_priv_log_entry_bool_exp!
  ): workflow_priv_log_entry_mutation_response

  """
  update single row of the table: "workflow.priv_log_entry"
  """
  update_workflow_priv_log_entry_by_pk(
    """
    increments the integer columns with given value of the filtered values
    """
    _inc: workflow_priv_log_entry_inc_input

    """
    sets the columns of the filtered rows to the given values
    """
    _set: workflow_priv_log_entry_set_input
    pk_columns: workflow_priv_log_entry_pk_columns_input!
  ): workflow_priv_log_entry

  """
  update data of the table: "workflow.privacy_docs"
  """
  update_workflow_privacy_docs(
    """
    sets the columns of the filtered rows to the given values
    """
    _set: workflow_privacy_docs_set_input

    """
    filter the rows which have to be updated
    """
    where: workflow_privacy_docs_bool_exp!
  ): workflow_privacy_docs_mutation_response

  """
  update data of the table: "workflow.redacted_docs"
  """
  update_workflow_redacted_docs(
    """
    sets the columns of the filtered rows to the given values
    """
    _set: workflow_redacted_docs_set_input

    """
    filter the rows which have to be updated
    """
    where: workflow_redacted_docs_bool_exp!
  ): workflow_redacted_docs_mutation_response

  """
  update data of the table: "workflow.redacted_pages"
  """
  update_workflow_redacted_pages(
    """
    increments the integer columns with given value of the filtered values
    """
    _inc: workflow_redacted_pages_inc_input

    """
    sets the columns of the filtered rows to the given values
    """
    _set: workflow_redacted_pages_set_input

    """
    filter the rows which have to be updated
    """
    where: workflow_redacted_pages_bool_exp!
  ): workflow_redacted_pages_mutation_response

  """
  update data of the table: "workflow.redaction_processing"
  """
  update_workflow_redaction_processing(
    """
    increments the integer columns with given value of the filtered values
    """
    _inc: workflow_redaction_processing_inc_input

    """
    sets the columns of the filtered rows to the given values
    """
    _set: workflow_redaction_processing_set_input

    """
    filter the rows which have to be updated
    """
    where: workflow_redaction_processing_bool_exp!
  ): workflow_redaction_processing_mutation_response

  """
  update data of the table: "workflow.released_docs"
  """
  update_workflow_released_docs(
    """
    sets the columns of the filtered rows to the given values
    """
    _set: workflow_released_docs_set_input

    """
    filter the rows which have to be updated
    """
    where: workflow_released_docs_bool_exp!
  ): workflow_released_docs_mutation_response

  """
  update data of the table: "workflow.sources"
  """
  update_workflow_sources(
    """
    increments the integer columns with given value of the filtered values
    """
    _inc: workflow_sources_inc_input

    """
    sets the columns of the filtered rows to the given values
    """
    _set: workflow_sources_set_input

    """
    filter the rows which have to be updated
    """
    where: workflow_sources_bool_exp!
  ): workflow_sources_mutation_response

  """
  update single row of the table: "workflow.sources"
  """
  update_workflow_sources_by_pk(
    """
    increments the integer columns with given value of the filtered values
    """
    _inc: workflow_sources_inc_input

    """
    sets the columns of the filtered rows to the given values
    """
    _set: workflow_sources_set_input
    pk_columns: workflow_sources_pk_columns_input!
  ): workflow_sources

  """
  update data of the table: "workflow.stages"
  """
  update_workflow_stages(
    """
    increments the integer columns with given value of the filtered values
    """
    _inc: workflow_stages_inc_input

    """
    sets the columns of the filtered rows to the given values
    """
    _set: workflow_stages_set_input

    """
    filter the rows which have to be updated
    """
    where: workflow_stages_bool_exp!
  ): workflow_stages_mutation_response

  """
  update data of the table: "workflow.stamped_pages"
  """
  update_workflow_stamped_pages(
    """
    increments the integer columns with given value of the filtered values
    """
    _inc: workflow_stamped_pages_inc_input

    """
    sets the columns of the filtered rows to the given values
    """
    _set: workflow_stamped_pages_set_input

    """
    filter the rows which have to be updated
    """
    where: workflow_stamped_pages_bool_exp!
  ): workflow_stamped_pages_mutation_response

  """
  update data of the table: "workflow.users"
  """
  update_workflow_users(
    """
    increments the integer columns with given value of the filtered values
    """
    _inc: workflow_users_inc_input

    """
    sets the columns of the filtered rows to the given values
    """
    _set: workflow_users_set_input

    """
    filter the rows which have to be updated
    """
    where: workflow_users_bool_exp!
  ): workflow_users_mutation_response

  """
  update data of the table: "workflow.workflow"
  """
  update_workflow_workflow(
    """
    increments the integer columns with given value of the filtered values
    """
    _inc: workflow_workflow_inc_input

    """
    sets the columns of the filtered rows to the given values
    """
    _set: workflow_workflow_set_input

    """
    filter the rows which have to be updated
    """
    where: workflow_workflow_bool_exp!
  ): workflow_workflow_mutation_response

  """
  update single row of the table: "workflow.workflow"
  """
  update_workflow_workflow_by_pk(
    """
    increments the integer columns with given value of the filtered values
    """
    _inc: workflow_workflow_inc_input

    """
    sets the columns of the filtered rows to the given values
    """
    _set: workflow_workflow_set_input
    pk_columns: workflow_workflow_pk_columns_input!
  ): workflow_workflow

  """
  update data of the table: "workflow.workflow_decision"
  """
  update_workflow_workflow_decision(
    """
    increments the integer columns with given value of the filtered values
    """
    _inc: workflow_workflow_decision_inc_input

    """
    sets the columns of the filtered rows to the given values
    """
    _set: workflow_workflow_decision_set_input

    """
    filter the rows which have to be updated
    """
    where: workflow_workflow_decision_bool_exp!
  ): workflow_workflow_decision_mutation_response
}

scalar numeric

"""
expression to compare columns of type numeric. All fields are combined with logical 'AND'.
"""
input numeric_comparison_exp {
  _eq: numeric
  _gt: numeric
  _gte: numeric
  _in: [numeric!]
  _is_null: Boolean
  _lt: numeric
  _lte: numeric
  _neq: numeric
  _nin: [numeric!]
}

"""
column ordering options
"""
enum order_by {
  """
  in the ascending order, nulls last
  """
  asc

  """
  in the ascending order, nulls first
  """
  asc_nulls_first

  """
  in the ascending order, nulls last
  """
  asc_nulls_last

  """
  in the descending order, nulls first
  """
  desc

  """
  in the descending order, nulls first
  """
  desc_nulls_first

  """
  in the descending order, nulls last
  """
  desc_nulls_last
}

"""
columns and relationships of "paper.doc_main"
"""
type paper_doc_main {
  TEMP: bpchar
  TEXT: bpchar
  VERSION: float8
  ads_bates_fpage: String
  ads_bates_lpage: String
  ads_bates_range: String
  ads_ctrname: String!
  ads_docdates: String!
  ads_fpack: numeric
  ads_fpage: numeric!
  ads_lpack: numeric
  ads_lpage: numeric!
  ads_udi: String!
  batch_no: String
  bax_file_load_date: timestamp
  box_no: float8
  challenged: bpchar
  challenged_date: String
  collection_id: numeric
  collection_type: bpchar
  created_date: timestamp
  created_user: String
  ctr_page_range: String
  dat_file_load_date: timestamp
  database_name: String
  dm_comment: String
  docdates_c: String
  dtype: bpchar
  header_only: bpchar
  highlite_fixed: bpchar
  hsc_flag: bpchar
  hsc_proc: bpchar
  hsc_proc_date: timestamp
  incomplete: float8
  is_checked_out: bpchar
  is_hot: bpchar
  is_rework: bpchar
  last_user: String
  load_datex: timestamp
  lsn_access_cntrl: String
  lsn_relevancy_date: String
  lvload: String
  lvload_date: timestamp
  media_code: String
  media_count: float8
  modified_date: timestamp
  modified_user: String
  mts1: String
  mts2: String
  mts3: String
  mts4: String
  mts5: String
  ocr_load_date: timestamp
  ocr_load_status: bpchar
  ocr_moved: bpchar
  on_irs: String
  p_acc_no: String!
  pac_flag: String
  package_id: String
  pads_udi: String
  pctype: String
  pctype_date: timestamp
  prev_ads_udi: String
  priv_att: bpchar
  privacy: bpchar
  privileged: bpchar
  qa: String
  qa_record: bpchar
  redaction_status: bpchar
  released: bpchar
  released_date: timestamp
  relevancy: bpchar
  ret_code: bpchar
  rms_load_date: timestamp
  rowid: String!
  shipping_status: bpchar
  splv: String
  splv_date: timestamp
  staged: bpchar
  staged_date: timestamp
  status_code: bpchar
  title: String!
  title_change: bpchar
  title_redacted: String

  """
  An array relationship
  """
  types(
    """
    distinct select on columns
    """
    distinct_on: [paper_type_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [paper_type_order_by!]

    """
    filter the rows returned
    """
    where: paper_type_bool_exp
  ): [paper_type!]!

  """
  An aggregated array relationship
  """
  types_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [paper_type_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [paper_type_order_by!]

    """
    filter the rows returned
    """
    where: paper_type_bool_exp
  ): paper_type_aggregate!
  xml_load_date: timestamp
}

"""
aggregated selection of "paper.doc_main"
"""
type paper_doc_main_aggregate {
  aggregate: paper_doc_main_aggregate_fields
  nodes: [paper_doc_main!]!
}

"""
aggregate fields of "paper.doc_main"
"""
type paper_doc_main_aggregate_fields {
  avg: paper_doc_main_avg_fields
  count(columns: [paper_doc_main_select_column!], distinct: Boolean): Int
  max: paper_doc_main_max_fields
  min: paper_doc_main_min_fields
  stddev: paper_doc_main_stddev_fields
  stddev_pop: paper_doc_main_stddev_pop_fields
  stddev_samp: paper_doc_main_stddev_samp_fields
  sum: paper_doc_main_sum_fields
  var_pop: paper_doc_main_var_pop_fields
  var_samp: paper_doc_main_var_samp_fields
  variance: paper_doc_main_variance_fields
}

"""
order by aggregate values of table "paper.doc_main"
"""
input paper_doc_main_aggregate_order_by {
  avg: paper_doc_main_avg_order_by
  count: order_by
  max: paper_doc_main_max_order_by
  min: paper_doc_main_min_order_by
  stddev: paper_doc_main_stddev_order_by
  stddev_pop: paper_doc_main_stddev_pop_order_by
  stddev_samp: paper_doc_main_stddev_samp_order_by
  sum: paper_doc_main_sum_order_by
  var_pop: paper_doc_main_var_pop_order_by
  var_samp: paper_doc_main_var_samp_order_by
  variance: paper_doc_main_variance_order_by
}

"""
input type for inserting array relation for remote table "paper.doc_main"
"""
input paper_doc_main_arr_rel_insert_input {
  data: [paper_doc_main_insert_input!]!
  on_conflict: paper_doc_main_on_conflict
}

"""
aggregate avg on columns
"""
type paper_doc_main_avg_fields {
  VERSION: Float
  ads_fpack: Float
  ads_fpage: Float
  ads_lpack: Float
  ads_lpage: Float
  box_no: Float
  collection_id: Float
  incomplete: Float
  media_count: Float
}

"""
order by avg() on columns of table "paper.doc_main"
"""
input paper_doc_main_avg_order_by {
  VERSION: order_by
  ads_fpack: order_by
  ads_fpage: order_by
  ads_lpack: order_by
  ads_lpage: order_by
  box_no: order_by
  collection_id: order_by
  incomplete: order_by
  media_count: order_by
}

"""
Boolean expression to filter rows from the table "paper.doc_main". All fields are combined with a logical 'AND'.
"""
input paper_doc_main_bool_exp {
  TEMP: bpchar_comparison_exp
  TEXT: bpchar_comparison_exp
  VERSION: float8_comparison_exp
  _and: [paper_doc_main_bool_exp]
  _not: paper_doc_main_bool_exp
  _or: [paper_doc_main_bool_exp]
  ads_bates_fpage: String_comparison_exp
  ads_bates_lpage: String_comparison_exp
  ads_bates_range: String_comparison_exp
  ads_ctrname: String_comparison_exp
  ads_docdates: String_comparison_exp
  ads_fpack: numeric_comparison_exp
  ads_fpage: numeric_comparison_exp
  ads_lpack: numeric_comparison_exp
  ads_lpage: numeric_comparison_exp
  ads_udi: String_comparison_exp
  batch_no: String_comparison_exp
  bax_file_load_date: timestamp_comparison_exp
  box_no: float8_comparison_exp
  challenged: bpchar_comparison_exp
  challenged_date: String_comparison_exp
  collection_id: numeric_comparison_exp
  collection_type: bpchar_comparison_exp
  created_date: timestamp_comparison_exp
  created_user: String_comparison_exp
  ctr_page_range: String_comparison_exp
  dat_file_load_date: timestamp_comparison_exp
  database_name: String_comparison_exp
  dm_comment: String_comparison_exp
  docdates_c: String_comparison_exp
  dtype: bpchar_comparison_exp
  header_only: bpchar_comparison_exp
  highlite_fixed: bpchar_comparison_exp
  hsc_flag: bpchar_comparison_exp
  hsc_proc: bpchar_comparison_exp
  hsc_proc_date: timestamp_comparison_exp
  incomplete: float8_comparison_exp
  is_checked_out: bpchar_comparison_exp
  is_hot: bpchar_comparison_exp
  is_rework: bpchar_comparison_exp
  last_user: String_comparison_exp
  load_datex: timestamp_comparison_exp
  lsn_access_cntrl: String_comparison_exp
  lsn_relevancy_date: String_comparison_exp
  lvload: String_comparison_exp
  lvload_date: timestamp_comparison_exp
  media_code: String_comparison_exp
  media_count: float8_comparison_exp
  modified_date: timestamp_comparison_exp
  modified_user: String_comparison_exp
  mts1: String_comparison_exp
  mts2: String_comparison_exp
  mts3: String_comparison_exp
  mts4: String_comparison_exp
  mts5: String_comparison_exp
  ocr_load_date: timestamp_comparison_exp
  ocr_load_status: bpchar_comparison_exp
  ocr_moved: bpchar_comparison_exp
  on_irs: String_comparison_exp
  p_acc_no: String_comparison_exp
  pac_flag: String_comparison_exp
  package_id: String_comparison_exp
  pads_udi: String_comparison_exp
  pctype: String_comparison_exp
  pctype_date: timestamp_comparison_exp
  prev_ads_udi: String_comparison_exp
  priv_att: bpchar_comparison_exp
  privacy: bpchar_comparison_exp
  privileged: bpchar_comparison_exp
  qa: String_comparison_exp
  qa_record: bpchar_comparison_exp
  redaction_status: bpchar_comparison_exp
  released: bpchar_comparison_exp
  released_date: timestamp_comparison_exp
  relevancy: bpchar_comparison_exp
  ret_code: bpchar_comparison_exp
  rms_load_date: timestamp_comparison_exp
  rowid: String_comparison_exp
  shipping_status: bpchar_comparison_exp
  splv: String_comparison_exp
  splv_date: timestamp_comparison_exp
  staged: bpchar_comparison_exp
  staged_date: timestamp_comparison_exp
  status_code: bpchar_comparison_exp
  title: String_comparison_exp
  title_change: bpchar_comparison_exp
  title_redacted: String_comparison_exp
  types: paper_type_bool_exp
  xml_load_date: timestamp_comparison_exp
}

"""
unique or primary key constraints on table "paper.doc_main"
"""
enum paper_doc_main_constraint {
  """
  unique or primary key constraint
  """
  doc_main_doc_no_unq

  """
  unique or primary key constraint
  """
  doc_main_pkey

  """
  unique or primary key constraint
  """
  uk_doc_main_ads_udi_acc

  """
  unique or primary key constraint
  """
  uk_doc_main_p_acc_no
}

"""
input type for incrementing integer column in table "paper.doc_main"
"""
input paper_doc_main_inc_input {
  VERSION: float8
  ads_fpack: numeric
  ads_fpage: numeric
  ads_lpack: numeric
  ads_lpage: numeric
  box_no: float8
  collection_id: numeric
  incomplete: float8
  media_count: float8
}

"""
input type for inserting data into table "paper.doc_main"
"""
input paper_doc_main_insert_input {
  TEMP: bpchar
  TEXT: bpchar
  VERSION: float8
  ads_bates_fpage: String
  ads_bates_lpage: String
  ads_bates_range: String
  ads_ctrname: String
  ads_docdates: String
  ads_fpack: numeric
  ads_fpage: numeric
  ads_lpack: numeric
  ads_lpage: numeric
  ads_udi: String
  batch_no: String
  bax_file_load_date: timestamp
  box_no: float8
  challenged: bpchar
  challenged_date: String
  collection_id: numeric
  collection_type: bpchar
  created_date: timestamp
  created_user: String
  ctr_page_range: String
  dat_file_load_date: timestamp
  database_name: String
  dm_comment: String
  docdates_c: String
  dtype: bpchar
  header_only: bpchar
  highlite_fixed: bpchar
  hsc_flag: bpchar
  hsc_proc: bpchar
  hsc_proc_date: timestamp
  incomplete: float8
  is_checked_out: bpchar
  is_hot: bpchar
  is_rework: bpchar
  last_user: String
  load_datex: timestamp
  lsn_access_cntrl: String
  lsn_relevancy_date: String
  lvload: String
  lvload_date: timestamp
  media_code: String
  media_count: float8
  modified_date: timestamp
  modified_user: String
  mts1: String
  mts2: String
  mts3: String
  mts4: String
  mts5: String
  ocr_load_date: timestamp
  ocr_load_status: bpchar
  ocr_moved: bpchar
  on_irs: String
  p_acc_no: String
  pac_flag: String
  package_id: String
  pads_udi: String
  pctype: String
  pctype_date: timestamp
  prev_ads_udi: String
  priv_att: bpchar
  privacy: bpchar
  privileged: bpchar
  qa: String
  qa_record: bpchar
  redaction_status: bpchar
  released: bpchar
  released_date: timestamp
  relevancy: bpchar
  ret_code: bpchar
  rms_load_date: timestamp
  rowid: String
  shipping_status: bpchar
  splv: String
  splv_date: timestamp
  staged: bpchar
  staged_date: timestamp
  status_code: bpchar
  title: String
  title_change: bpchar
  title_redacted: String
  types: paper_type_arr_rel_insert_input
  xml_load_date: timestamp
}

"""
aggregate max on columns
"""
type paper_doc_main_max_fields {
  VERSION: float8
  ads_bates_fpage: String
  ads_bates_lpage: String
  ads_bates_range: String
  ads_ctrname: String
  ads_docdates: String
  ads_fpack: numeric
  ads_fpage: numeric
  ads_lpack: numeric
  ads_lpage: numeric
  ads_udi: String
  batch_no: String
  bax_file_load_date: timestamp
  box_no: float8
  challenged_date: String
  collection_id: numeric
  created_date: timestamp
  created_user: String
  ctr_page_range: String
  dat_file_load_date: timestamp
  database_name: String
  dm_comment: String
  docdates_c: String
  hsc_proc_date: timestamp
  incomplete: float8
  last_user: String
  load_datex: timestamp
  lsn_access_cntrl: String
  lsn_relevancy_date: String
  lvload: String
  lvload_date: timestamp
  media_code: String
  media_count: float8
  modified_date: timestamp
  modified_user: String
  mts1: String
  mts2: String
  mts3: String
  mts4: String
  mts5: String
  ocr_load_date: timestamp
  on_irs: String
  p_acc_no: String
  pac_flag: String
  package_id: String
  pads_udi: String
  pctype: String
  pctype_date: timestamp
  prev_ads_udi: String
  qa: String
  released_date: timestamp
  rms_load_date: timestamp
  rowid: String
  splv: String
  splv_date: timestamp
  staged_date: timestamp
  title: String
  title_redacted: String
  xml_load_date: timestamp
}

"""
order by max() on columns of table "paper.doc_main"
"""
input paper_doc_main_max_order_by {
  VERSION: order_by
  ads_bates_fpage: order_by
  ads_bates_lpage: order_by
  ads_bates_range: order_by
  ads_ctrname: order_by
  ads_docdates: order_by
  ads_fpack: order_by
  ads_fpage: order_by
  ads_lpack: order_by
  ads_lpage: order_by
  ads_udi: order_by
  batch_no: order_by
  bax_file_load_date: order_by
  box_no: order_by
  challenged_date: order_by
  collection_id: order_by
  created_date: order_by
  created_user: order_by
  ctr_page_range: order_by
  dat_file_load_date: order_by
  database_name: order_by
  dm_comment: order_by
  docdates_c: order_by
  hsc_proc_date: order_by
  incomplete: order_by
  last_user: order_by
  load_datex: order_by
  lsn_access_cntrl: order_by
  lsn_relevancy_date: order_by
  lvload: order_by
  lvload_date: order_by
  media_code: order_by
  media_count: order_by
  modified_date: order_by
  modified_user: order_by
  mts1: order_by
  mts2: order_by
  mts3: order_by
  mts4: order_by
  mts5: order_by
  ocr_load_date: order_by
  on_irs: order_by
  p_acc_no: order_by
  pac_flag: order_by
  package_id: order_by
  pads_udi: order_by
  pctype: order_by
  pctype_date: order_by
  prev_ads_udi: order_by
  qa: order_by
  released_date: order_by
  rms_load_date: order_by
  rowid: order_by
  splv: order_by
  splv_date: order_by
  staged_date: order_by
  title: order_by
  title_redacted: order_by
  xml_load_date: order_by
}

"""
aggregate min on columns
"""
type paper_doc_main_min_fields {
  VERSION: float8
  ads_bates_fpage: String
  ads_bates_lpage: String
  ads_bates_range: String
  ads_ctrname: String
  ads_docdates: String
  ads_fpack: numeric
  ads_fpage: numeric
  ads_lpack: numeric
  ads_lpage: numeric
  ads_udi: String
  batch_no: String
  bax_file_load_date: timestamp
  box_no: float8
  challenged_date: String
  collection_id: numeric
  created_date: timestamp
  created_user: String
  ctr_page_range: String
  dat_file_load_date: timestamp
  database_name: String
  dm_comment: String
  docdates_c: String
  hsc_proc_date: timestamp
  incomplete: float8
  last_user: String
  load_datex: timestamp
  lsn_access_cntrl: String
  lsn_relevancy_date: String
  lvload: String
  lvload_date: timestamp
  media_code: String
  media_count: float8
  modified_date: timestamp
  modified_user: String
  mts1: String
  mts2: String
  mts3: String
  mts4: String
  mts5: String
  ocr_load_date: timestamp
  on_irs: String
  p_acc_no: String
  pac_flag: String
  package_id: String
  pads_udi: String
  pctype: String
  pctype_date: timestamp
  prev_ads_udi: String
  qa: String
  released_date: timestamp
  rms_load_date: timestamp
  rowid: String
  splv: String
  splv_date: timestamp
  staged_date: timestamp
  title: String
  title_redacted: String
  xml_load_date: timestamp
}

"""
order by min() on columns of table "paper.doc_main"
"""
input paper_doc_main_min_order_by {
  VERSION: order_by
  ads_bates_fpage: order_by
  ads_bates_lpage: order_by
  ads_bates_range: order_by
  ads_ctrname: order_by
  ads_docdates: order_by
  ads_fpack: order_by
  ads_fpage: order_by
  ads_lpack: order_by
  ads_lpage: order_by
  ads_udi: order_by
  batch_no: order_by
  bax_file_load_date: order_by
  box_no: order_by
  challenged_date: order_by
  collection_id: order_by
  created_date: order_by
  created_user: order_by
  ctr_page_range: order_by
  dat_file_load_date: order_by
  database_name: order_by
  dm_comment: order_by
  docdates_c: order_by
  hsc_proc_date: order_by
  incomplete: order_by
  last_user: order_by
  load_datex: order_by
  lsn_access_cntrl: order_by
  lsn_relevancy_date: order_by
  lvload: order_by
  lvload_date: order_by
  media_code: order_by
  media_count: order_by
  modified_date: order_by
  modified_user: order_by
  mts1: order_by
  mts2: order_by
  mts3: order_by
  mts4: order_by
  mts5: order_by
  ocr_load_date: order_by
  on_irs: order_by
  p_acc_no: order_by
  pac_flag: order_by
  package_id: order_by
  pads_udi: order_by
  pctype: order_by
  pctype_date: order_by
  prev_ads_udi: order_by
  qa: order_by
  released_date: order_by
  rms_load_date: order_by
  rowid: order_by
  splv: order_by
  splv_date: order_by
  staged_date: order_by
  title: order_by
  title_redacted: order_by
  xml_load_date: order_by
}

"""
response of any mutation on the table "paper.doc_main"
"""
type paper_doc_main_mutation_response {
  """
  number of affected rows by the mutation
  """
  affected_rows: Int!

  """
  data of the affected rows by the mutation
  """
  returning: [paper_doc_main!]!
}

"""
input type for inserting object relation for remote table "paper.doc_main"
"""
input paper_doc_main_obj_rel_insert_input {
  data: paper_doc_main_insert_input!
  on_conflict: paper_doc_main_on_conflict
}

"""
on conflict condition type for table "paper.doc_main"
"""
input paper_doc_main_on_conflict {
  constraint: paper_doc_main_constraint!
  update_columns: [paper_doc_main_update_column!]!
  where: paper_doc_main_bool_exp
}

"""
ordering options when selecting data from "paper.doc_main"
"""
input paper_doc_main_order_by {
  TEMP: order_by
  TEXT: order_by
  VERSION: order_by
  ads_bates_fpage: order_by
  ads_bates_lpage: order_by
  ads_bates_range: order_by
  ads_ctrname: order_by
  ads_docdates: order_by
  ads_fpack: order_by
  ads_fpage: order_by
  ads_lpack: order_by
  ads_lpage: order_by
  ads_udi: order_by
  batch_no: order_by
  bax_file_load_date: order_by
  box_no: order_by
  challenged: order_by
  challenged_date: order_by
  collection_id: order_by
  collection_type: order_by
  created_date: order_by
  created_user: order_by
  ctr_page_range: order_by
  dat_file_load_date: order_by
  database_name: order_by
  dm_comment: order_by
  docdates_c: order_by
  dtype: order_by
  header_only: order_by
  highlite_fixed: order_by
  hsc_flag: order_by
  hsc_proc: order_by
  hsc_proc_date: order_by
  incomplete: order_by
  is_checked_out: order_by
  is_hot: order_by
  is_rework: order_by
  last_user: order_by
  load_datex: order_by
  lsn_access_cntrl: order_by
  lsn_relevancy_date: order_by
  lvload: order_by
  lvload_date: order_by
  media_code: order_by
  media_count: order_by
  modified_date: order_by
  modified_user: order_by
  mts1: order_by
  mts2: order_by
  mts3: order_by
  mts4: order_by
  mts5: order_by
  ocr_load_date: order_by
  ocr_load_status: order_by
  ocr_moved: order_by
  on_irs: order_by
  p_acc_no: order_by
  pac_flag: order_by
  package_id: order_by
  pads_udi: order_by
  pctype: order_by
  pctype_date: order_by
  prev_ads_udi: order_by
  priv_att: order_by
  privacy: order_by
  privileged: order_by
  qa: order_by
  qa_record: order_by
  redaction_status: order_by
  released: order_by
  released_date: order_by
  relevancy: order_by
  ret_code: order_by
  rms_load_date: order_by
  rowid: order_by
  shipping_status: order_by
  splv: order_by
  splv_date: order_by
  staged: order_by
  staged_date: order_by
  status_code: order_by
  title: order_by
  title_change: order_by
  title_redacted: order_by
  types_aggregate: paper_type_aggregate_order_by
  xml_load_date: order_by
}

"""
primary key columns input for table: "paper.doc_main"
"""
input paper_doc_main_pk_columns_input {
  ads_udi: String!
}

"""
select columns of table "paper.doc_main"
"""
enum paper_doc_main_select_column {
  """
  column name
  """
  TEMP

  """
  column name
  """
  TEXT

  """
  column name
  """
  VERSION

  """
  column name
  """
  ads_bates_fpage

  """
  column name
  """
  ads_bates_lpage

  """
  column name
  """
  ads_bates_range

  """
  column name
  """
  ads_ctrname

  """
  column name
  """
  ads_docdates

  """
  column name
  """
  ads_fpack

  """
  column name
  """
  ads_fpage

  """
  column name
  """
  ads_lpack

  """
  column name
  """
  ads_lpage

  """
  column name
  """
  ads_udi

  """
  column name
  """
  batch_no

  """
  column name
  """
  bax_file_load_date

  """
  column name
  """
  box_no

  """
  column name
  """
  challenged

  """
  column name
  """
  challenged_date

  """
  column name
  """
  collection_id

  """
  column name
  """
  collection_type

  """
  column name
  """
  created_date

  """
  column name
  """
  created_user

  """
  column name
  """
  ctr_page_range

  """
  column name
  """
  dat_file_load_date

  """
  column name
  """
  database_name

  """
  column name
  """
  dm_comment

  """
  column name
  """
  docdates_c

  """
  column name
  """
  dtype

  """
  column name
  """
  header_only

  """
  column name
  """
  highlite_fixed

  """
  column name
  """
  hsc_flag

  """
  column name
  """
  hsc_proc

  """
  column name
  """
  hsc_proc_date

  """
  column name
  """
  incomplete

  """
  column name
  """
  is_checked_out

  """
  column name
  """
  is_hot

  """
  column name
  """
  is_rework

  """
  column name
  """
  last_user

  """
  column name
  """
  load_datex

  """
  column name
  """
  lsn_access_cntrl

  """
  column name
  """
  lsn_relevancy_date

  """
  column name
  """
  lvload

  """
  column name
  """
  lvload_date

  """
  column name
  """
  media_code

  """
  column name
  """
  media_count

  """
  column name
  """
  modified_date

  """
  column name
  """
  modified_user

  """
  column name
  """
  mts1

  """
  column name
  """
  mts2

  """
  column name
  """
  mts3

  """
  column name
  """
  mts4

  """
  column name
  """
  mts5

  """
  column name
  """
  ocr_load_date

  """
  column name
  """
  ocr_load_status

  """
  column name
  """
  ocr_moved

  """
  column name
  """
  on_irs

  """
  column name
  """
  p_acc_no

  """
  column name
  """
  pac_flag

  """
  column name
  """
  package_id

  """
  column name
  """
  pads_udi

  """
  column name
  """
  pctype

  """
  column name
  """
  pctype_date

  """
  column name
  """
  prev_ads_udi

  """
  column name
  """
  priv_att

  """
  column name
  """
  privacy

  """
  column name
  """
  privileged

  """
  column name
  """
  qa

  """
  column name
  """
  qa_record

  """
  column name
  """
  redaction_status

  """
  column name
  """
  released

  """
  column name
  """
  released_date

  """
  column name
  """
  relevancy

  """
  column name
  """
  ret_code

  """
  column name
  """
  rms_load_date

  """
  column name
  """
  rowid

  """
  column name
  """
  shipping_status

  """
  column name
  """
  splv

  """
  column name
  """
  splv_date

  """
  column name
  """
  staged

  """
  column name
  """
  staged_date

  """
  column name
  """
  status_code

  """
  column name
  """
  title

  """
  column name
  """
  title_change

  """
  column name
  """
  title_redacted

  """
  column name
  """
  xml_load_date
}

"""
input type for updating data in table "paper.doc_main"
"""
input paper_doc_main_set_input {
  TEMP: bpchar
  TEXT: bpchar
  VERSION: float8
  ads_bates_fpage: String
  ads_bates_lpage: String
  ads_bates_range: String
  ads_ctrname: String
  ads_docdates: String
  ads_fpack: numeric
  ads_fpage: numeric
  ads_lpack: numeric
  ads_lpage: numeric
  ads_udi: String
  batch_no: String
  bax_file_load_date: timestamp
  box_no: float8
  challenged: bpchar
  challenged_date: String
  collection_id: numeric
  collection_type: bpchar
  created_date: timestamp
  created_user: String
  ctr_page_range: String
  dat_file_load_date: timestamp
  database_name: String
  dm_comment: String
  docdates_c: String
  dtype: bpchar
  header_only: bpchar
  highlite_fixed: bpchar
  hsc_flag: bpchar
  hsc_proc: bpchar
  hsc_proc_date: timestamp
  incomplete: float8
  is_checked_out: bpchar
  is_hot: bpchar
  is_rework: bpchar
  last_user: String
  load_datex: timestamp
  lsn_access_cntrl: String
  lsn_relevancy_date: String
  lvload: String
  lvload_date: timestamp
  media_code: String
  media_count: float8
  modified_date: timestamp
  modified_user: String
  mts1: String
  mts2: String
  mts3: String
  mts4: String
  mts5: String
  ocr_load_date: timestamp
  ocr_load_status: bpchar
  ocr_moved: bpchar
  on_irs: String
  p_acc_no: String
  pac_flag: String
  package_id: String
  pads_udi: String
  pctype: String
  pctype_date: timestamp
  prev_ads_udi: String
  priv_att: bpchar
  privacy: bpchar
  privileged: bpchar
  qa: String
  qa_record: bpchar
  redaction_status: bpchar
  released: bpchar
  released_date: timestamp
  relevancy: bpchar
  ret_code: bpchar
  rms_load_date: timestamp
  rowid: String
  shipping_status: bpchar
  splv: String
  splv_date: timestamp
  staged: bpchar
  staged_date: timestamp
  status_code: bpchar
  title: String
  title_change: bpchar
  title_redacted: String
  xml_load_date: timestamp
}

"""
aggregate stddev on columns
"""
type paper_doc_main_stddev_fields {
  VERSION: Float
  ads_fpack: Float
  ads_fpage: Float
  ads_lpack: Float
  ads_lpage: Float
  box_no: Float
  collection_id: Float
  incomplete: Float
  media_count: Float
}

"""
order by stddev() on columns of table "paper.doc_main"
"""
input paper_doc_main_stddev_order_by {
  VERSION: order_by
  ads_fpack: order_by
  ads_fpage: order_by
  ads_lpack: order_by
  ads_lpage: order_by
  box_no: order_by
  collection_id: order_by
  incomplete: order_by
  media_count: order_by
}

"""
aggregate stddev_pop on columns
"""
type paper_doc_main_stddev_pop_fields {
  VERSION: Float
  ads_fpack: Float
  ads_fpage: Float
  ads_lpack: Float
  ads_lpage: Float
  box_no: Float
  collection_id: Float
  incomplete: Float
  media_count: Float
}

"""
order by stddev_pop() on columns of table "paper.doc_main"
"""
input paper_doc_main_stddev_pop_order_by {
  VERSION: order_by
  ads_fpack: order_by
  ads_fpage: order_by
  ads_lpack: order_by
  ads_lpage: order_by
  box_no: order_by
  collection_id: order_by
  incomplete: order_by
  media_count: order_by
}

"""
aggregate stddev_samp on columns
"""
type paper_doc_main_stddev_samp_fields {
  VERSION: Float
  ads_fpack: Float
  ads_fpage: Float
  ads_lpack: Float
  ads_lpage: Float
  box_no: Float
  collection_id: Float
  incomplete: Float
  media_count: Float
}

"""
order by stddev_samp() on columns of table "paper.doc_main"
"""
input paper_doc_main_stddev_samp_order_by {
  VERSION: order_by
  ads_fpack: order_by
  ads_fpage: order_by
  ads_lpack: order_by
  ads_lpage: order_by
  box_no: order_by
  collection_id: order_by
  incomplete: order_by
  media_count: order_by
}

"""
aggregate sum on columns
"""
type paper_doc_main_sum_fields {
  VERSION: float8
  ads_fpack: numeric
  ads_fpage: numeric
  ads_lpack: numeric
  ads_lpage: numeric
  box_no: float8
  collection_id: numeric
  incomplete: float8
  media_count: float8
}

"""
order by sum() on columns of table "paper.doc_main"
"""
input paper_doc_main_sum_order_by {
  VERSION: order_by
  ads_fpack: order_by
  ads_fpage: order_by
  ads_lpack: order_by
  ads_lpage: order_by
  box_no: order_by
  collection_id: order_by
  incomplete: order_by
  media_count: order_by
}

"""
update columns of table "paper.doc_main"
"""
enum paper_doc_main_update_column {
  """
  column name
  """
  TEMP

  """
  column name
  """
  TEXT

  """
  column name
  """
  VERSION

  """
  column name
  """
  ads_bates_fpage

  """
  column name
  """
  ads_bates_lpage

  """
  column name
  """
  ads_bates_range

  """
  column name
  """
  ads_ctrname

  """
  column name
  """
  ads_docdates

  """
  column name
  """
  ads_fpack

  """
  column name
  """
  ads_fpage

  """
  column name
  """
  ads_lpack

  """
  column name
  """
  ads_lpage

  """
  column name
  """
  ads_udi

  """
  column name
  """
  batch_no

  """
  column name
  """
  bax_file_load_date

  """
  column name
  """
  box_no

  """
  column name
  """
  challenged

  """
  column name
  """
  challenged_date

  """
  column name
  """
  collection_id

  """
  column name
  """
  collection_type

  """
  column name
  """
  created_date

  """
  column name
  """
  created_user

  """
  column name
  """
  ctr_page_range

  """
  column name
  """
  dat_file_load_date

  """
  column name
  """
  database_name

  """
  column name
  """
  dm_comment

  """
  column name
  """
  docdates_c

  """
  column name
  """
  dtype

  """
  column name
  """
  header_only

  """
  column name
  """
  highlite_fixed

  """
  column name
  """
  hsc_flag

  """
  column name
  """
  hsc_proc

  """
  column name
  """
  hsc_proc_date

  """
  column name
  """
  incomplete

  """
  column name
  """
  is_checked_out

  """
  column name
  """
  is_hot

  """
  column name
  """
  is_rework

  """
  column name
  """
  last_user

  """
  column name
  """
  load_datex

  """
  column name
  """
  lsn_access_cntrl

  """
  column name
  """
  lsn_relevancy_date

  """
  column name
  """
  lvload

  """
  column name
  """
  lvload_date

  """
  column name
  """
  media_code

  """
  column name
  """
  media_count

  """
  column name
  """
  modified_date

  """
  column name
  """
  modified_user

  """
  column name
  """
  mts1

  """
  column name
  """
  mts2

  """
  column name
  """
  mts3

  """
  column name
  """
  mts4

  """
  column name
  """
  mts5

  """
  column name
  """
  ocr_load_date

  """
  column name
  """
  ocr_load_status

  """
  column name
  """
  ocr_moved

  """
  column name
  """
  on_irs

  """
  column name
  """
  p_acc_no

  """
  column name
  """
  pac_flag

  """
  column name
  """
  package_id

  """
  column name
  """
  pads_udi

  """
  column name
  """
  pctype

  """
  column name
  """
  pctype_date

  """
  column name
  """
  prev_ads_udi

  """
  column name
  """
  priv_att

  """
  column name
  """
  privacy

  """
  column name
  """
  privileged

  """
  column name
  """
  qa

  """
  column name
  """
  qa_record

  """
  column name
  """
  redaction_status

  """
  column name
  """
  released

  """
  column name
  """
  released_date

  """
  column name
  """
  relevancy

  """
  column name
  """
  ret_code

  """
  column name
  """
  rms_load_date

  """
  column name
  """
  rowid

  """
  column name
  """
  shipping_status

  """
  column name
  """
  splv

  """
  column name
  """
  splv_date

  """
  column name
  """
  staged

  """
  column name
  """
  staged_date

  """
  column name
  """
  status_code

  """
  column name
  """
  title

  """
  column name
  """
  title_change

  """
  column name
  """
  title_redacted

  """
  column name
  """
  xml_load_date
}

"""
aggregate var_pop on columns
"""
type paper_doc_main_var_pop_fields {
  VERSION: Float
  ads_fpack: Float
  ads_fpage: Float
  ads_lpack: Float
  ads_lpage: Float
  box_no: Float
  collection_id: Float
  incomplete: Float
  media_count: Float
}

"""
order by var_pop() on columns of table "paper.doc_main"
"""
input paper_doc_main_var_pop_order_by {
  VERSION: order_by
  ads_fpack: order_by
  ads_fpage: order_by
  ads_lpack: order_by
  ads_lpage: order_by
  box_no: order_by
  collection_id: order_by
  incomplete: order_by
  media_count: order_by
}

"""
aggregate var_samp on columns
"""
type paper_doc_main_var_samp_fields {
  VERSION: Float
  ads_fpack: Float
  ads_fpage: Float
  ads_lpack: Float
  ads_lpage: Float
  box_no: Float
  collection_id: Float
  incomplete: Float
  media_count: Float
}

"""
order by var_samp() on columns of table "paper.doc_main"
"""
input paper_doc_main_var_samp_order_by {
  VERSION: order_by
  ads_fpack: order_by
  ads_fpage: order_by
  ads_lpack: order_by
  ads_lpage: order_by
  box_no: order_by
  collection_id: order_by
  incomplete: order_by
  media_count: order_by
}

"""
aggregate variance on columns
"""
type paper_doc_main_variance_fields {
  VERSION: Float
  ads_fpack: Float
  ads_fpage: Float
  ads_lpack: Float
  ads_lpage: Float
  box_no: Float
  collection_id: Float
  incomplete: Float
  media_count: Float
}

"""
order by variance() on columns of table "paper.doc_main"
"""
input paper_doc_main_variance_order_by {
  VERSION: order_by
  ads_fpack: order_by
  ads_fpage: order_by
  ads_lpack: order_by
  ads_lpage: order_by
  box_no: order_by
  collection_id: order_by
  incomplete: order_by
  media_count: order_by
}

"""
columns and relationships of "paper.doc_names"
"""
type paper_doc_names {
  ads_udi: String
  created_date: timestamp
  created_user: String
  flag: bpchar
  modified_date: timestamp
  modified_user: String
  name: String
  name_id: numeric
  name_type: String
  org_id: numeric
  organization: String
  type: String
}

"""
aggregated selection of "paper.doc_names"
"""
type paper_doc_names_aggregate {
  aggregate: paper_doc_names_aggregate_fields
  nodes: [paper_doc_names!]!
}

"""
aggregate fields of "paper.doc_names"
"""
type paper_doc_names_aggregate_fields {
  avg: paper_doc_names_avg_fields
  count(columns: [paper_doc_names_select_column!], distinct: Boolean): Int
  max: paper_doc_names_max_fields
  min: paper_doc_names_min_fields
  stddev: paper_doc_names_stddev_fields
  stddev_pop: paper_doc_names_stddev_pop_fields
  stddev_samp: paper_doc_names_stddev_samp_fields
  sum: paper_doc_names_sum_fields
  var_pop: paper_doc_names_var_pop_fields
  var_samp: paper_doc_names_var_samp_fields
  variance: paper_doc_names_variance_fields
}

"""
order by aggregate values of table "paper.doc_names"
"""
input paper_doc_names_aggregate_order_by {
  avg: paper_doc_names_avg_order_by
  count: order_by
  max: paper_doc_names_max_order_by
  min: paper_doc_names_min_order_by
  stddev: paper_doc_names_stddev_order_by
  stddev_pop: paper_doc_names_stddev_pop_order_by
  stddev_samp: paper_doc_names_stddev_samp_order_by
  sum: paper_doc_names_sum_order_by
  var_pop: paper_doc_names_var_pop_order_by
  var_samp: paper_doc_names_var_samp_order_by
  variance: paper_doc_names_variance_order_by
}

"""
aggregate avg on columns
"""
type paper_doc_names_avg_fields {
  name_id: Float
  org_id: Float
}

"""
order by avg() on columns of table "paper.doc_names"
"""
input paper_doc_names_avg_order_by {
  name_id: order_by
  org_id: order_by
}

"""
Boolean expression to filter rows from the table "paper.doc_names". All fields are combined with a logical 'AND'.
"""
input paper_doc_names_bool_exp {
  _and: [paper_doc_names_bool_exp]
  _not: paper_doc_names_bool_exp
  _or: [paper_doc_names_bool_exp]
  ads_udi: String_comparison_exp
  created_date: timestamp_comparison_exp
  created_user: String_comparison_exp
  flag: bpchar_comparison_exp
  modified_date: timestamp_comparison_exp
  modified_user: String_comparison_exp
  name: String_comparison_exp
  name_id: numeric_comparison_exp
  name_type: String_comparison_exp
  org_id: numeric_comparison_exp
  organization: String_comparison_exp
  type: String_comparison_exp
}

"""
aggregate max on columns
"""
type paper_doc_names_max_fields {
  ads_udi: String
  created_date: timestamp
  created_user: String
  modified_date: timestamp
  modified_user: String
  name: String
  name_id: numeric
  name_type: String
  org_id: numeric
  organization: String
  type: String
}

"""
order by max() on columns of table "paper.doc_names"
"""
input paper_doc_names_max_order_by {
  ads_udi: order_by
  created_date: order_by
  created_user: order_by
  modified_date: order_by
  modified_user: order_by
  name: order_by
  name_id: order_by
  name_type: order_by
  org_id: order_by
  organization: order_by
  type: order_by
}

"""
aggregate min on columns
"""
type paper_doc_names_min_fields {
  ads_udi: String
  created_date: timestamp
  created_user: String
  modified_date: timestamp
  modified_user: String
  name: String
  name_id: numeric
  name_type: String
  org_id: numeric
  organization: String
  type: String
}

"""
order by min() on columns of table "paper.doc_names"
"""
input paper_doc_names_min_order_by {
  ads_udi: order_by
  created_date: order_by
  created_user: order_by
  modified_date: order_by
  modified_user: order_by
  name: order_by
  name_id: order_by
  name_type: order_by
  org_id: order_by
  organization: order_by
  type: order_by
}

"""
ordering options when selecting data from "paper.doc_names"
"""
input paper_doc_names_order_by {
  ads_udi: order_by
  created_date: order_by
  created_user: order_by
  flag: order_by
  modified_date: order_by
  modified_user: order_by
  name: order_by
  name_id: order_by
  name_type: order_by
  org_id: order_by
  organization: order_by
  type: order_by
}

"""
select columns of table "paper.doc_names"
"""
enum paper_doc_names_select_column {
  """
  column name
  """
  ads_udi

  """
  column name
  """
  created_date

  """
  column name
  """
  created_user

  """
  column name
  """
  flag

  """
  column name
  """
  modified_date

  """
  column name
  """
  modified_user

  """
  column name
  """
  name

  """
  column name
  """
  name_id

  """
  column name
  """
  name_type

  """
  column name
  """
  org_id

  """
  column name
  """
  organization

  """
  column name
  """
  type
}

"""
aggregate stddev on columns
"""
type paper_doc_names_stddev_fields {
  name_id: Float
  org_id: Float
}

"""
order by stddev() on columns of table "paper.doc_names"
"""
input paper_doc_names_stddev_order_by {
  name_id: order_by
  org_id: order_by
}

"""
aggregate stddev_pop on columns
"""
type paper_doc_names_stddev_pop_fields {
  name_id: Float
  org_id: Float
}

"""
order by stddev_pop() on columns of table "paper.doc_names"
"""
input paper_doc_names_stddev_pop_order_by {
  name_id: order_by
  org_id: order_by
}

"""
aggregate stddev_samp on columns
"""
type paper_doc_names_stddev_samp_fields {
  name_id: Float
  org_id: Float
}

"""
order by stddev_samp() on columns of table "paper.doc_names"
"""
input paper_doc_names_stddev_samp_order_by {
  name_id: order_by
  org_id: order_by
}

"""
aggregate sum on columns
"""
type paper_doc_names_sum_fields {
  name_id: numeric
  org_id: numeric
}

"""
order by sum() on columns of table "paper.doc_names"
"""
input paper_doc_names_sum_order_by {
  name_id: order_by
  org_id: order_by
}

"""
aggregate var_pop on columns
"""
type paper_doc_names_var_pop_fields {
  name_id: Float
  org_id: Float
}

"""
order by var_pop() on columns of table "paper.doc_names"
"""
input paper_doc_names_var_pop_order_by {
  name_id: order_by
  org_id: order_by
}

"""
aggregate var_samp on columns
"""
type paper_doc_names_var_samp_fields {
  name_id: Float
  org_id: Float
}

"""
order by var_samp() on columns of table "paper.doc_names"
"""
input paper_doc_names_var_samp_order_by {
  name_id: order_by
  org_id: order_by
}

"""
aggregate variance on columns
"""
type paper_doc_names_variance_fields {
  name_id: Float
  org_id: Float
}

"""
order by variance() on columns of table "paper.doc_names"
"""
input paper_doc_names_variance_order_by {
  name_id: order_by
  org_id: order_by
}

"""
columns and relationships of "paper.ocr"
"""
type paper_ocr {
  TEXT: String
  ads_firstbyte: float8
  ads_page: numeric!
  ads_udi: String!
  created_date: timestamp
  created_user: String
  highlite_fixed: String
  modified_date: timestamp
  modified_user: String
  page_size: float8
  rowid: String!
}

"""
aggregated selection of "paper.ocr"
"""
type paper_ocr_aggregate {
  aggregate: paper_ocr_aggregate_fields
  nodes: [paper_ocr!]!
}

"""
aggregate fields of "paper.ocr"
"""
type paper_ocr_aggregate_fields {
  avg: paper_ocr_avg_fields
  count(columns: [paper_ocr_select_column!], distinct: Boolean): Int
  max: paper_ocr_max_fields
  min: paper_ocr_min_fields
  stddev: paper_ocr_stddev_fields
  stddev_pop: paper_ocr_stddev_pop_fields
  stddev_samp: paper_ocr_stddev_samp_fields
  sum: paper_ocr_sum_fields
  var_pop: paper_ocr_var_pop_fields
  var_samp: paper_ocr_var_samp_fields
  variance: paper_ocr_variance_fields
}

"""
order by aggregate values of table "paper.ocr"
"""
input paper_ocr_aggregate_order_by {
  avg: paper_ocr_avg_order_by
  count: order_by
  max: paper_ocr_max_order_by
  min: paper_ocr_min_order_by
  stddev: paper_ocr_stddev_order_by
  stddev_pop: paper_ocr_stddev_pop_order_by
  stddev_samp: paper_ocr_stddev_samp_order_by
  sum: paper_ocr_sum_order_by
  var_pop: paper_ocr_var_pop_order_by
  var_samp: paper_ocr_var_samp_order_by
  variance: paper_ocr_variance_order_by
}

"""
input type for inserting array relation for remote table "paper.ocr"
"""
input paper_ocr_arr_rel_insert_input {
  data: [paper_ocr_insert_input!]!
  on_conflict: paper_ocr_on_conflict
}

"""
aggregate avg on columns
"""
type paper_ocr_avg_fields {
  ads_firstbyte: Float
  ads_page: Float
  page_size: Float
}

"""
order by avg() on columns of table "paper.ocr"
"""
input paper_ocr_avg_order_by {
  ads_firstbyte: order_by
  ads_page: order_by
  page_size: order_by
}

"""
Boolean expression to filter rows from the table "paper.ocr". All fields are combined with a logical 'AND'.
"""
input paper_ocr_bool_exp {
  TEXT: String_comparison_exp
  _and: [paper_ocr_bool_exp]
  _not: paper_ocr_bool_exp
  _or: [paper_ocr_bool_exp]
  ads_firstbyte: float8_comparison_exp
  ads_page: numeric_comparison_exp
  ads_udi: String_comparison_exp
  created_date: timestamp_comparison_exp
  created_user: String_comparison_exp
  highlite_fixed: String_comparison_exp
  modified_date: timestamp_comparison_exp
  modified_user: String_comparison_exp
  page_size: float8_comparison_exp
  rowid: String_comparison_exp
}

"""
unique or primary key constraints on table "paper.ocr"
"""
enum paper_ocr_constraint {
  """
  unique or primary key constraint
  """
  ocr_pkey
}

"""
input type for incrementing integer column in table "paper.ocr"
"""
input paper_ocr_inc_input {
  ads_firstbyte: float8
  ads_page: numeric
  page_size: float8
}

"""
input type for inserting data into table "paper.ocr"
"""
input paper_ocr_insert_input {
  TEXT: String
  ads_firstbyte: float8
  ads_page: numeric
  ads_udi: String
  created_date: timestamp
  created_user: String
  highlite_fixed: String
  modified_date: timestamp
  modified_user: String
  page_size: float8
  rowid: String
}

"""
aggregate max on columns
"""
type paper_ocr_max_fields {
  TEXT: String
  ads_firstbyte: float8
  ads_page: numeric
  ads_udi: String
  created_date: timestamp
  created_user: String
  highlite_fixed: String
  modified_date: timestamp
  modified_user: String
  page_size: float8
  rowid: String
}

"""
order by max() on columns of table "paper.ocr"
"""
input paper_ocr_max_order_by {
  TEXT: order_by
  ads_firstbyte: order_by
  ads_page: order_by
  ads_udi: order_by
  created_date: order_by
  created_user: order_by
  highlite_fixed: order_by
  modified_date: order_by
  modified_user: order_by
  page_size: order_by
  rowid: order_by
}

"""
aggregate min on columns
"""
type paper_ocr_min_fields {
  TEXT: String
  ads_firstbyte: float8
  ads_page: numeric
  ads_udi: String
  created_date: timestamp
  created_user: String
  highlite_fixed: String
  modified_date: timestamp
  modified_user: String
  page_size: float8
  rowid: String
}

"""
order by min() on columns of table "paper.ocr"
"""
input paper_ocr_min_order_by {
  TEXT: order_by
  ads_firstbyte: order_by
  ads_page: order_by
  ads_udi: order_by
  created_date: order_by
  created_user: order_by
  highlite_fixed: order_by
  modified_date: order_by
  modified_user: order_by
  page_size: order_by
  rowid: order_by
}

"""
response of any mutation on the table "paper.ocr"
"""
type paper_ocr_mutation_response {
  """
  number of affected rows by the mutation
  """
  affected_rows: Int!

  """
  data of the affected rows by the mutation
  """
  returning: [paper_ocr!]!
}

"""
input type for inserting object relation for remote table "paper.ocr"
"""
input paper_ocr_obj_rel_insert_input {
  data: paper_ocr_insert_input!
  on_conflict: paper_ocr_on_conflict
}

"""
on conflict condition type for table "paper.ocr"
"""
input paper_ocr_on_conflict {
  constraint: paper_ocr_constraint!
  update_columns: [paper_ocr_update_column!]!
  where: paper_ocr_bool_exp
}

"""
ordering options when selecting data from "paper.ocr"
"""
input paper_ocr_order_by {
  TEXT: order_by
  ads_firstbyte: order_by
  ads_page: order_by
  ads_udi: order_by
  created_date: order_by
  created_user: order_by
  highlite_fixed: order_by
  modified_date: order_by
  modified_user: order_by
  page_size: order_by
  rowid: order_by
}

"""
primary key columns input for table: "paper.ocr"
"""
input paper_ocr_pk_columns_input {
  ads_page: numeric!
  ads_udi: String!
}

"""
select columns of table "paper.ocr"
"""
enum paper_ocr_select_column {
  """
  column name
  """
  TEXT

  """
  column name
  """
  ads_firstbyte

  """
  column name
  """
  ads_page

  """
  column name
  """
  ads_udi

  """
  column name
  """
  created_date

  """
  column name
  """
  created_user

  """
  column name
  """
  highlite_fixed

  """
  column name
  """
  modified_date

  """
  column name
  """
  modified_user

  """
  column name
  """
  page_size

  """
  column name
  """
  rowid
}

"""
input type for updating data in table "paper.ocr"
"""
input paper_ocr_set_input {
  TEXT: String
  ads_firstbyte: float8
  ads_page: numeric
  ads_udi: String
  created_date: timestamp
  created_user: String
  highlite_fixed: String
  modified_date: timestamp
  modified_user: String
  page_size: float8
  rowid: String
}

"""
aggregate stddev on columns
"""
type paper_ocr_stddev_fields {
  ads_firstbyte: Float
  ads_page: Float
  page_size: Float
}

"""
order by stddev() on columns of table "paper.ocr"
"""
input paper_ocr_stddev_order_by {
  ads_firstbyte: order_by
  ads_page: order_by
  page_size: order_by
}

"""
aggregate stddev_pop on columns
"""
type paper_ocr_stddev_pop_fields {
  ads_firstbyte: Float
  ads_page: Float
  page_size: Float
}

"""
order by stddev_pop() on columns of table "paper.ocr"
"""
input paper_ocr_stddev_pop_order_by {
  ads_firstbyte: order_by
  ads_page: order_by
  page_size: order_by
}

"""
aggregate stddev_samp on columns
"""
type paper_ocr_stddev_samp_fields {
  ads_firstbyte: Float
  ads_page: Float
  page_size: Float
}

"""
order by stddev_samp() on columns of table "paper.ocr"
"""
input paper_ocr_stddev_samp_order_by {
  ads_firstbyte: order_by
  ads_page: order_by
  page_size: order_by
}

"""
aggregate sum on columns
"""
type paper_ocr_sum_fields {
  ads_firstbyte: float8
  ads_page: numeric
  page_size: float8
}

"""
order by sum() on columns of table "paper.ocr"
"""
input paper_ocr_sum_order_by {
  ads_firstbyte: order_by
  ads_page: order_by
  page_size: order_by
}

"""
update columns of table "paper.ocr"
"""
enum paper_ocr_update_column {
  """
  column name
  """
  TEXT

  """
  column name
  """
  ads_firstbyte

  """
  column name
  """
  ads_page

  """
  column name
  """
  ads_udi

  """
  column name
  """
  created_date

  """
  column name
  """
  created_user

  """
  column name
  """
  highlite_fixed

  """
  column name
  """
  modified_date

  """
  column name
  """
  modified_user

  """
  column name
  """
  page_size

  """
  column name
  """
  rowid
}

"""
aggregate var_pop on columns
"""
type paper_ocr_var_pop_fields {
  ads_firstbyte: Float
  ads_page: Float
  page_size: Float
}

"""
order by var_pop() on columns of table "paper.ocr"
"""
input paper_ocr_var_pop_order_by {
  ads_firstbyte: order_by
  ads_page: order_by
  page_size: order_by
}

"""
aggregate var_samp on columns
"""
type paper_ocr_var_samp_fields {
  ads_firstbyte: Float
  ads_page: Float
  page_size: Float
}

"""
order by var_samp() on columns of table "paper.ocr"
"""
input paper_ocr_var_samp_order_by {
  ads_firstbyte: order_by
  ads_page: order_by
  page_size: order_by
}

"""
aggregate variance on columns
"""
type paper_ocr_variance_fields {
  ads_firstbyte: Float
  ads_page: Float
  page_size: Float
}

"""
order by variance() on columns of table "paper.ocr"
"""
input paper_ocr_variance_order_by {
  ads_firstbyte: order_by
  ads_page: order_by
  page_size: order_by
}

"""
columns and relationships of "paper.type"
"""
type paper_type {
  ads_udi: String!
  created_date: timestamp
  created_user: String
  doc_type: String!
  modified_date: timestamp
  modified_user: String
  rowid: String!
}

"""
aggregated selection of "paper.type"
"""
type paper_type_aggregate {
  aggregate: paper_type_aggregate_fields
  nodes: [paper_type!]!
}

"""
aggregate fields of "paper.type"
"""
type paper_type_aggregate_fields {
  count(columns: [paper_type_select_column!], distinct: Boolean): Int
  max: paper_type_max_fields
  min: paper_type_min_fields
}

"""
order by aggregate values of table "paper.type"
"""
input paper_type_aggregate_order_by {
  count: order_by
  max: paper_type_max_order_by
  min: paper_type_min_order_by
}

"""
input type for inserting array relation for remote table "paper.type"
"""
input paper_type_arr_rel_insert_input {
  data: [paper_type_insert_input!]!
  on_conflict: paper_type_on_conflict
}

"""
Boolean expression to filter rows from the table "paper.type". All fields are combined with a logical 'AND'.
"""
input paper_type_bool_exp {
  _and: [paper_type_bool_exp]
  _not: paper_type_bool_exp
  _or: [paper_type_bool_exp]
  ads_udi: String_comparison_exp
  created_date: timestamp_comparison_exp
  created_user: String_comparison_exp
  doc_type: String_comparison_exp
  modified_date: timestamp_comparison_exp
  modified_user: String_comparison_exp
  rowid: String_comparison_exp
}

"""
unique or primary key constraints on table "paper.type"
"""
enum paper_type_constraint {
  """
  unique or primary key constraint
  """
  type_pkey
}

"""
input type for inserting data into table "paper.type"
"""
input paper_type_insert_input {
  ads_udi: String
  created_date: timestamp
  created_user: String
  doc_type: String
  modified_date: timestamp
  modified_user: String
  rowid: String
}

"""
columns and relationships of "paper.type_lookup"
"""
type paper_type_lookup {
  created_date: timestamp
  created_user: String
  doc_type: String!
  doc_type_lookup: String!
  modified_date: timestamp
  modified_user: String
  rowid: String!
}

"""
aggregated selection of "paper.type_lookup"
"""
type paper_type_lookup_aggregate {
  aggregate: paper_type_lookup_aggregate_fields
  nodes: [paper_type_lookup!]!
}

"""
aggregate fields of "paper.type_lookup"
"""
type paper_type_lookup_aggregate_fields {
  count(columns: [paper_type_lookup_select_column!], distinct: Boolean): Int
  max: paper_type_lookup_max_fields
  min: paper_type_lookup_min_fields
}

"""
order by aggregate values of table "paper.type_lookup"
"""
input paper_type_lookup_aggregate_order_by {
  count: order_by
  max: paper_type_lookup_max_order_by
  min: paper_type_lookup_min_order_by
}

"""
input type for inserting array relation for remote table "paper.type_lookup"
"""
input paper_type_lookup_arr_rel_insert_input {
  data: [paper_type_lookup_insert_input!]!
  on_conflict: paper_type_lookup_on_conflict
}

"""
Boolean expression to filter rows from the table "paper.type_lookup". All fields are combined with a logical 'AND'.
"""
input paper_type_lookup_bool_exp {
  _and: [paper_type_lookup_bool_exp]
  _not: paper_type_lookup_bool_exp
  _or: [paper_type_lookup_bool_exp]
  created_date: timestamp_comparison_exp
  created_user: String_comparison_exp
  doc_type: String_comparison_exp
  doc_type_lookup: String_comparison_exp
  modified_date: timestamp_comparison_exp
  modified_user: String_comparison_exp
  rowid: String_comparison_exp
}

"""
unique or primary key constraints on table "paper.type_lookup"
"""
enum paper_type_lookup_constraint {
  """
  unique or primary key constraint
  """
  type_lookup_pkey

  """
  unique or primary key constraint
  """
  type_lookup_type_lk_unq
}

"""
input type for inserting data into table "paper.type_lookup"
"""
input paper_type_lookup_insert_input {
  created_date: timestamp
  created_user: String
  doc_type: String
  doc_type_lookup: String
  modified_date: timestamp
  modified_user: String
  rowid: String
}

"""
aggregate max on columns
"""
type paper_type_lookup_max_fields {
  created_date: timestamp
  created_user: String
  doc_type: String
  doc_type_lookup: String
  modified_date: timestamp
  modified_user: String
  rowid: String
}

"""
order by max() on columns of table "paper.type_lookup"
"""
input paper_type_lookup_max_order_by {
  created_date: order_by
  created_user: order_by
  doc_type: order_by
  doc_type_lookup: order_by
  modified_date: order_by
  modified_user: order_by
  rowid: order_by
}

"""
aggregate min on columns
"""
type paper_type_lookup_min_fields {
  created_date: timestamp
  created_user: String
  doc_type: String
  doc_type_lookup: String
  modified_date: timestamp
  modified_user: String
  rowid: String
}

"""
order by min() on columns of table "paper.type_lookup"
"""
input paper_type_lookup_min_order_by {
  created_date: order_by
  created_user: order_by
  doc_type: order_by
  doc_type_lookup: order_by
  modified_date: order_by
  modified_user: order_by
  rowid: order_by
}

"""
response of any mutation on the table "paper.type_lookup"
"""
type paper_type_lookup_mutation_response {
  """
  number of affected rows by the mutation
  """
  affected_rows: Int!

  """
  data of the affected rows by the mutation
  """
  returning: [paper_type_lookup!]!
}

"""
input type for inserting object relation for remote table "paper.type_lookup"
"""
input paper_type_lookup_obj_rel_insert_input {
  data: paper_type_lookup_insert_input!
  on_conflict: paper_type_lookup_on_conflict
}

"""
on conflict condition type for table "paper.type_lookup"
"""
input paper_type_lookup_on_conflict {
  constraint: paper_type_lookup_constraint!
  update_columns: [paper_type_lookup_update_column!]!
  where: paper_type_lookup_bool_exp
}

"""
ordering options when selecting data from "paper.type_lookup"
"""
input paper_type_lookup_order_by {
  created_date: order_by
  created_user: order_by
  doc_type: order_by
  doc_type_lookup: order_by
  modified_date: order_by
  modified_user: order_by
  rowid: order_by
}

"""
primary key columns input for table: "paper.type_lookup"
"""
input paper_type_lookup_pk_columns_input {
  doc_type: String!
}

"""
select columns of table "paper.type_lookup"
"""
enum paper_type_lookup_select_column {
  """
  column name
  """
  created_date

  """
  column name
  """
  created_user

  """
  column name
  """
  doc_type

  """
  column name
  """
  doc_type_lookup

  """
  column name
  """
  modified_date

  """
  column name
  """
  modified_user

  """
  column name
  """
  rowid
}

"""
input type for updating data in table "paper.type_lookup"
"""
input paper_type_lookup_set_input {
  created_date: timestamp
  created_user: String
  doc_type: String
  doc_type_lookup: String
  modified_date: timestamp
  modified_user: String
  rowid: String
}

"""
update columns of table "paper.type_lookup"
"""
enum paper_type_lookup_update_column {
  """
  column name
  """
  created_date

  """
  column name
  """
  created_user

  """
  column name
  """
  doc_type

  """
  column name
  """
  doc_type_lookup

  """
  column name
  """
  modified_date

  """
  column name
  """
  modified_user

  """
  column name
  """
  rowid
}

"""
aggregate max on columns
"""
type paper_type_max_fields {
  ads_udi: String
  created_date: timestamp
  created_user: String
  doc_type: String
  modified_date: timestamp
  modified_user: String
  rowid: String
}

"""
order by max() on columns of table "paper.type"
"""
input paper_type_max_order_by {
  ads_udi: order_by
  created_date: order_by
  created_user: order_by
  doc_type: order_by
  modified_date: order_by
  modified_user: order_by
  rowid: order_by
}

"""
aggregate min on columns
"""
type paper_type_min_fields {
  ads_udi: String
  created_date: timestamp
  created_user: String
  doc_type: String
  modified_date: timestamp
  modified_user: String
  rowid: String
}

"""
order by min() on columns of table "paper.type"
"""
input paper_type_min_order_by {
  ads_udi: order_by
  created_date: order_by
  created_user: order_by
  doc_type: order_by
  modified_date: order_by
  modified_user: order_by
  rowid: order_by
}

"""
response of any mutation on the table "paper.type"
"""
type paper_type_mutation_response {
  """
  number of affected rows by the mutation
  """
  affected_rows: Int!

  """
  data of the affected rows by the mutation
  """
  returning: [paper_type!]!
}

"""
input type for inserting object relation for remote table "paper.type"
"""
input paper_type_obj_rel_insert_input {
  data: paper_type_insert_input!
  on_conflict: paper_type_on_conflict
}

"""
on conflict condition type for table "paper.type"
"""
input paper_type_on_conflict {
  constraint: paper_type_constraint!
  update_columns: [paper_type_update_column!]!
  where: paper_type_bool_exp
}

"""
ordering options when selecting data from "paper.type"
"""
input paper_type_order_by {
  ads_udi: order_by
  created_date: order_by
  created_user: order_by
  doc_type: order_by
  modified_date: order_by
  modified_user: order_by
  rowid: order_by
}

"""
primary key columns input for table: "paper.type"
"""
input paper_type_pk_columns_input {
  ads_udi: String!
  doc_type: String!
}

"""
select columns of table "paper.type"
"""
enum paper_type_select_column {
  """
  column name
  """
  ads_udi

  """
  column name
  """
  created_date

  """
  column name
  """
  created_user

  """
  column name
  """
  doc_type

  """
  column name
  """
  modified_date

  """
  column name
  """
  modified_user

  """
  column name
  """
  rowid
}

"""
input type for updating data in table "paper.type"
"""
input paper_type_set_input {
  ads_udi: String
  created_date: timestamp
  created_user: String
  doc_type: String
  modified_date: timestamp
  modified_user: String
  rowid: String
}

"""
update columns of table "paper.type"
"""
enum paper_type_update_column {
  """
  column name
  """
  ads_udi

  """
  column name
  """
  created_date

  """
  column name
  """
  created_user

  """
  column name
  """
  doc_type

  """
  column name
  """
  modified_date

  """
  column name
  """
  modified_user

  """
  column name
  """
  rowid
}

"""
query root
"""
type query_root {
  """
  fetch data from the table: "efiles.contain"
  """
  efiles_contain(
    """
    distinct select on columns
    """
    distinct_on: [efiles_contain_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [efiles_contain_order_by!]

    """
    filter the rows returned
    """
    where: efiles_contain_bool_exp
  ): [efiles_contain!]!

  """
  fetch aggregated fields from the table: "efiles.contain"
  """
  efiles_contain_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [efiles_contain_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [efiles_contain_order_by!]

    """
    filter the rows returned
    """
    where: efiles_contain_bool_exp
  ): efiles_contain_aggregate!

  """
  fetch data from the table: "efiles.contain" using primary key columns
  """
  efiles_contain_by_pk(containerid: String!): efiles_contain

  """
  fetch data from the table: "efiles.doc_main"
  """
  efiles_doc_main(
    """
    distinct select on columns
    """
    distinct_on: [efiles_doc_main_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [efiles_doc_main_order_by!]

    """
    filter the rows returned
    """
    where: efiles_doc_main_bool_exp
  ): [efiles_doc_main!]!

  """
  fetch aggregated fields from the table: "efiles.doc_main"
  """
  efiles_doc_main_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [efiles_doc_main_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [efiles_doc_main_order_by!]

    """
    filter the rows returned
    """
    where: efiles_doc_main_bool_exp
  ): efiles_doc_main_aggregate!

  """
  fetch data from the table: "efiles.doc_main" using primary key columns
  """
  efiles_doc_main_by_pk(ads_udi: String!): efiles_doc_main

  """
  fetch data from the table: "efiles.doc_names"
  """
  efiles_doc_names(
    """
    distinct select on columns
    """
    distinct_on: [efiles_doc_names_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [efiles_doc_names_order_by!]

    """
    filter the rows returned
    """
    where: efiles_doc_names_bool_exp
  ): [efiles_doc_names!]!

  """
  fetch aggregated fields from the table: "efiles.doc_names"
  """
  efiles_doc_names_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [efiles_doc_names_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [efiles_doc_names_order_by!]

    """
    filter the rows returned
    """
    where: efiles_doc_names_bool_exp
  ): efiles_doc_names_aggregate!

  """
  fetch data from the table: "efiles.ocr"
  """
  efiles_ocr(
    """
    distinct select on columns
    """
    distinct_on: [efiles_ocr_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [efiles_ocr_order_by!]

    """
    filter the rows returned
    """
    where: efiles_ocr_bool_exp
  ): [efiles_ocr!]!

  """
  fetch aggregated fields from the table: "efiles.ocr"
  """
  efiles_ocr_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [efiles_ocr_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [efiles_ocr_order_by!]

    """
    filter the rows returned
    """
    where: efiles_ocr_bool_exp
  ): efiles_ocr_aggregate!

  """
  fetch data from the table: "efiles.ocr" using primary key columns
  """
  efiles_ocr_by_pk(ads_page: numeric!): efiles_ocr

  """
  fetch data from the table: "efiles.redaction_types"
  """
  efiles_redaction_types(
    """
    distinct select on columns
    """
    distinct_on: [efiles_redaction_types_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [efiles_redaction_types_order_by!]

    """
    filter the rows returned
    """
    where: efiles_redaction_types_bool_exp
  ): [efiles_redaction_types!]!

  """
  fetch aggregated fields from the table: "efiles.redaction_types"
  """
  efiles_redaction_types_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [efiles_redaction_types_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [efiles_redaction_types_order_by!]

    """
    filter the rows returned
    """
    where: efiles_redaction_types_bool_exp
  ): efiles_redaction_types_aggregate!

  """
  fetch data from the table: "efiles.redaction_types" using primary key columns
  """
  efiles_redaction_types_by_pk(red_id: numeric!): efiles_redaction_types

  """
  fetch data from the table: "efiles.type"
  """
  efiles_type(
    """
    distinct select on columns
    """
    distinct_on: [efiles_type_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [efiles_type_order_by!]

    """
    filter the rows returned
    """
    where: efiles_type_bool_exp
  ): [efiles_type!]!

  """
  fetch aggregated fields from the table: "efiles.type"
  """
  efiles_type_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [efiles_type_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [efiles_type_order_by!]

    """
    filter the rows returned
    """
    where: efiles_type_bool_exp
  ): efiles_type_aggregate!

  """
  fetch data from the table: "efiles.type" using primary key columns
  """
  efiles_type_by_pk(ads_udi: String!, doc_type: String!): efiles_type

  """
  fetch data from the table: "efiles.type_lookup"
  """
  efiles_type_lookup(
    """
    distinct select on columns
    """
    distinct_on: [efiles_type_lookup_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [efiles_type_lookup_order_by!]

    """
    filter the rows returned
    """
    where: efiles_type_lookup_bool_exp
  ): [efiles_type_lookup!]!

  """
  fetch aggregated fields from the table: "efiles.type_lookup"
  """
  efiles_type_lookup_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [efiles_type_lookup_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [efiles_type_lookup_order_by!]

    """
    filter the rows returned
    """
    where: efiles_type_lookup_bool_exp
  ): efiles_type_lookup_aggregate!

  """
  fetch data from the table: "email.doc_main"
  """
  email_doc_main(
    """
    distinct select on columns
    """
    distinct_on: [email_doc_main_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [email_doc_main_order_by!]

    """
    filter the rows returned
    """
    where: email_doc_main_bool_exp
  ): [email_doc_main!]!

  """
  fetch aggregated fields from the table: "email.doc_main"
  """
  email_doc_main_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [email_doc_main_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [email_doc_main_order_by!]

    """
    filter the rows returned
    """
    where: email_doc_main_bool_exp
  ): email_doc_main_aggregate!

  """
  fetch data from the table: "email.doc_main" using primary key columns
  """
  email_doc_main_by_pk(ads_udi: String!): email_doc_main

  """
  fetch data from the table: "email.doc_names"
  """
  email_doc_names(
    """
    distinct select on columns
    """
    distinct_on: [email_doc_names_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [email_doc_names_order_by!]

    """
    filter the rows returned
    """
    where: email_doc_names_bool_exp
  ): [email_doc_names!]!

  """
  fetch aggregated fields from the table: "email.doc_names"
  """
  email_doc_names_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [email_doc_names_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [email_doc_names_order_by!]

    """
    filter the rows returned
    """
    where: email_doc_names_bool_exp
  ): email_doc_names_aggregate!

  """
  fetch data from the table: "email.doe_related_rec"
  """
  email_doe_related_rec(
    """
    distinct select on columns
    """
    distinct_on: [email_doe_related_rec_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [email_doe_related_rec_order_by!]

    """
    filter the rows returned
    """
    where: email_doe_related_rec_bool_exp
  ): [email_doe_related_rec!]!

  """
  fetch aggregated fields from the table: "email.doe_related_rec"
  """
  email_doe_related_rec_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [email_doe_related_rec_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [email_doe_related_rec_order_by!]

    """
    filter the rows returned
    """
    where: email_doe_related_rec_bool_exp
  ): email_doe_related_rec_aggregate!

  """
  fetch data from the table: "email.doe_related_rec" using primary key columns
  """
  email_doe_related_rec_by_pk(ads_udi: String!, rel_ads_udi: String!, rel_rec_code: String!): email_doe_related_rec

  """
  fetch data from the table: "email.ocr"
  """
  email_ocr(
    """
    distinct select on columns
    """
    distinct_on: [email_ocr_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [email_ocr_order_by!]

    """
    filter the rows returned
    """
    where: email_ocr_bool_exp
  ): [email_ocr!]!

  """
  fetch aggregated fields from the table: "email.ocr"
  """
  email_ocr_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [email_ocr_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [email_ocr_order_by!]

    """
    filter the rows returned
    """
    where: email_ocr_bool_exp
  ): email_ocr_aggregate!

  """
  fetch data from the table: "email.ocr" using primary key columns
  """
  email_ocr_by_pk(ads_page: numeric!, ads_udi: String!): email_ocr

  """
  fetch data from the table: "email.type"
  """
  email_type(
    """
    distinct select on columns
    """
    distinct_on: [email_type_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [email_type_order_by!]

    """
    filter the rows returned
    """
    where: email_type_bool_exp
  ): [email_type!]!

  """
  fetch aggregated fields from the table: "email.type"
  """
  email_type_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [email_type_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [email_type_order_by!]

    """
    filter the rows returned
    """
    where: email_type_bool_exp
  ): email_type_aggregate!

  """
  fetch data from the table: "email.type" using primary key columns
  """
  email_type_by_pk(ads_udi: String!, doc_type: String!): email_type

  """
  fetch data from the table: "email.type_lookup"
  """
  email_type_lookup(
    """
    distinct select on columns
    """
    distinct_on: [email_type_lookup_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [email_type_lookup_order_by!]

    """
    filter the rows returned
    """
    where: email_type_lookup_bool_exp
  ): [email_type_lookup!]!

  """
  fetch aggregated fields from the table: "email.type_lookup"
  """
  email_type_lookup_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [email_type_lookup_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [email_type_lookup_order_by!]

    """
    filter the rows returned
    """
    where: email_type_lookup_bool_exp
  ): email_type_lookup_aggregate!

  """
  fetch data from the table: "email.type_lookup" using primary key columns
  """
  email_type_lookup_by_pk(doc_type: String!): email_type_lookup

  """
  fetch data from the table: "paper.doc_main"
  """
  paper_doc_main(
    """
    distinct select on columns
    """
    distinct_on: [paper_doc_main_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [paper_doc_main_order_by!]

    """
    filter the rows returned
    """
    where: paper_doc_main_bool_exp
  ): [paper_doc_main!]!

  """
  fetch aggregated fields from the table: "paper.doc_main"
  """
  paper_doc_main_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [paper_doc_main_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [paper_doc_main_order_by!]

    """
    filter the rows returned
    """
    where: paper_doc_main_bool_exp
  ): paper_doc_main_aggregate!

  """
  fetch data from the table: "paper.doc_main" using primary key columns
  """
  paper_doc_main_by_pk(ads_udi: String!): paper_doc_main

  """
  fetch data from the table: "paper.doc_names"
  """
  paper_doc_names(
    """
    distinct select on columns
    """
    distinct_on: [paper_doc_names_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [paper_doc_names_order_by!]

    """
    filter the rows returned
    """
    where: paper_doc_names_bool_exp
  ): [paper_doc_names!]!

  """
  fetch aggregated fields from the table: "paper.doc_names"
  """
  paper_doc_names_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [paper_doc_names_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [paper_doc_names_order_by!]

    """
    filter the rows returned
    """
    where: paper_doc_names_bool_exp
  ): paper_doc_names_aggregate!

  """
  fetch data from the table: "paper.ocr"
  """
  paper_ocr(
    """
    distinct select on columns
    """
    distinct_on: [paper_ocr_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [paper_ocr_order_by!]

    """
    filter the rows returned
    """
    where: paper_ocr_bool_exp
  ): [paper_ocr!]!

  """
  fetch aggregated fields from the table: "paper.ocr"
  """
  paper_ocr_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [paper_ocr_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [paper_ocr_order_by!]

    """
    filter the rows returned
    """
    where: paper_ocr_bool_exp
  ): paper_ocr_aggregate!

  """
  fetch data from the table: "paper.ocr" using primary key columns
  """
  paper_ocr_by_pk(ads_page: numeric!, ads_udi: String!): paper_ocr

  """
  fetch data from the table: "paper.type"
  """
  paper_type(
    """
    distinct select on columns
    """
    distinct_on: [paper_type_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [paper_type_order_by!]

    """
    filter the rows returned
    """
    where: paper_type_bool_exp
  ): [paper_type!]!

  """
  fetch aggregated fields from the table: "paper.type"
  """
  paper_type_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [paper_type_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [paper_type_order_by!]

    """
    filter the rows returned
    """
    where: paper_type_bool_exp
  ): paper_type_aggregate!

  """
  fetch data from the table: "paper.type" using primary key columns
  """
  paper_type_by_pk(ads_udi: String!, doc_type: String!): paper_type

  """
  fetch data from the table: "paper.type_lookup"
  """
  paper_type_lookup(
    """
    distinct select on columns
    """
    distinct_on: [paper_type_lookup_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [paper_type_lookup_order_by!]

    """
    filter the rows returned
    """
    where: paper_type_lookup_bool_exp
  ): [paper_type_lookup!]!

  """
  fetch aggregated fields from the table: "paper.type_lookup"
  """
  paper_type_lookup_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [paper_type_lookup_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [paper_type_lookup_order_by!]

    """
    filter the rows returned
    """
    where: paper_type_lookup_bool_exp
  ): paper_type_lookup_aggregate!

  """
  fetch data from the table: "paper.type_lookup" using primary key columns
  """
  paper_type_lookup_by_pk(doc_type: String!): paper_type_lookup

  """
  fetch data from the table: "risdata.case_collection"
  """
  risdata_case_collection(
    """
    distinct select on columns
    """
    distinct_on: [risdata_case_collection_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [risdata_case_collection_order_by!]

    """
    filter the rows returned
    """
    where: risdata_case_collection_bool_exp
  ): [risdata_case_collection!]!

  """
  fetch aggregated fields from the table: "risdata.case_collection"
  """
  risdata_case_collection_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [risdata_case_collection_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [risdata_case_collection_order_by!]

    """
    filter the rows returned
    """
    where: risdata_case_collection_bool_exp
  ): risdata_case_collection_aggregate!

  """
  fetch data from the table: "risdata.case_collection" using primary key columns
  """
  risdata_case_collection_by_pk(collection_id: numeric!): risdata_case_collection

  """
  fetch data from the table: "risdata.doc_main"
  """
  risdata_doc_main(
    """
    distinct select on columns
    """
    distinct_on: [risdata_doc_main_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [risdata_doc_main_order_by!]

    """
    filter the rows returned
    """
    where: risdata_doc_main_bool_exp
  ): [risdata_doc_main!]!

  """
  fetch aggregated fields from the table: "risdata.doc_main"
  """
  risdata_doc_main_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [risdata_doc_main_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [risdata_doc_main_order_by!]

    """
    filter the rows returned
    """
    where: risdata_doc_main_bool_exp
  ): risdata_doc_main_aggregate!

  """
  fetch data from the table: "risdata.doc_main" using primary key columns
  """
  risdata_doc_main_by_pk(ads_udi: String!): risdata_doc_main

  """
  fetch data from the table: "risdata.doc_names"
  """
  risdata_doc_names(
    """
    distinct select on columns
    """
    distinct_on: [risdata_doc_names_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [risdata_doc_names_order_by!]

    """
    filter the rows returned
    """
    where: risdata_doc_names_bool_exp
  ): [risdata_doc_names!]!

  """
  fetch aggregated fields from the table: "risdata.doc_names"
  """
  risdata_doc_names_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [risdata_doc_names_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [risdata_doc_names_order_by!]

    """
    filter the rows returned
    """
    where: risdata_doc_names_bool_exp
  ): risdata_doc_names_aggregate!

  """
  fetch data from the table: "risdata.doe_related_rec"
  """
  risdata_doe_related_rec(
    """
    distinct select on columns
    """
    distinct_on: [risdata_doe_related_rec_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [risdata_doe_related_rec_order_by!]

    """
    filter the rows returned
    """
    where: risdata_doe_related_rec_bool_exp
  ): [risdata_doe_related_rec!]!

  """
  fetch aggregated fields from the table: "risdata.doe_related_rec"
  """
  risdata_doe_related_rec_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [risdata_doe_related_rec_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [risdata_doe_related_rec_order_by!]

    """
    filter the rows returned
    """
    where: risdata_doe_related_rec_bool_exp
  ): risdata_doe_related_rec_aggregate!

  """
  fetch data from the table: "risdata.doe_related_rec" using primary key columns
  """
  risdata_doe_related_rec_by_pk(ads_udi: String!, rel_ads_udi: String!, rel_rec_code: String!): risdata_doe_related_rec

  """
  fetch data from the table: "risdata.ocr"
  """
  risdata_ocr(
    """
    distinct select on columns
    """
    distinct_on: [risdata_ocr_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [risdata_ocr_order_by!]

    """
    filter the rows returned
    """
    where: risdata_ocr_bool_exp
  ): [risdata_ocr!]!

  """
  fetch aggregated fields from the table: "risdata.ocr"
  """
  risdata_ocr_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [risdata_ocr_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [risdata_ocr_order_by!]

    """
    filter the rows returned
    """
    where: risdata_ocr_bool_exp
  ): risdata_ocr_aggregate!

  """
  fetch data from the table: "risdata.ocr" using primary key columns
  """
  risdata_ocr_by_pk(ads_page: numeric!, ads_udi: String!): risdata_ocr

  """
  fetch data from the table: "risdata.type"
  """
  risdata_type(
    """
    distinct select on columns
    """
    distinct_on: [risdata_type_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [risdata_type_order_by!]

    """
    filter the rows returned
    """
    where: risdata_type_bool_exp
  ): [risdata_type!]!

  """
  fetch aggregated fields from the table: "risdata.type"
  """
  risdata_type_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [risdata_type_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [risdata_type_order_by!]

    """
    filter the rows returned
    """
    where: risdata_type_bool_exp
  ): risdata_type_aggregate!

  """
  fetch data from the table: "risdata.type" using primary key columns
  """
  risdata_type_by_pk(ads_udi: String!, doc_type: String!): risdata_type

  """
  fetch data from the table: "risdata.type_lookup"
  """
  risdata_type_lookup(
    """
    distinct select on columns
    """
    distinct_on: [risdata_type_lookup_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [risdata_type_lookup_order_by!]

    """
    filter the rows returned
    """
    where: risdata_type_lookup_bool_exp
  ): [risdata_type_lookup!]!

  """
  fetch aggregated fields from the table: "risdata.type_lookup"
  """
  risdata_type_lookup_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [risdata_type_lookup_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [risdata_type_lookup_order_by!]

    """
    filter the rows returned
    """
    where: risdata_type_lookup_bool_exp
  ): risdata_type_lookup_aggregate!

  """
  fetch data from the table: "risdata.type_lookup" using primary key columns
  """
  risdata_type_lookup_by_pk(doc_type: String!): risdata_type_lookup

  """
  fetch data from the table: "workflow.adhoc"
  """
  workflow_adhoc(
    """
    distinct select on columns
    """
    distinct_on: [workflow_adhoc_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_adhoc_order_by!]

    """
    filter the rows returned
    """
    where: workflow_adhoc_bool_exp
  ): [workflow_adhoc!]!

  """
  fetch aggregated fields from the table: "workflow.adhoc"
  """
  workflow_adhoc_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_adhoc_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_adhoc_order_by!]

    """
    filter the rows returned
    """
    where: workflow_adhoc_bool_exp
  ): workflow_adhoc_aggregate!

  """
  fetch data from the table: "workflow.adhoc_card"
  """
  workflow_adhoc_card(
    """
    distinct select on columns
    """
    distinct_on: [workflow_adhoc_card_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_adhoc_card_order_by!]

    """
    filter the rows returned
    """
    where: workflow_adhoc_card_bool_exp
  ): [workflow_adhoc_card!]!

  """
  fetch aggregated fields from the table: "workflow.adhoc_card"
  """
  workflow_adhoc_card_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_adhoc_card_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_adhoc_card_order_by!]

    """
    filter the rows returned
    """
    where: workflow_adhoc_card_bool_exp
  ): workflow_adhoc_card_aggregate!

  """
  fetch data from the table: "workflow.adhoc_checks"
  """
  workflow_adhoc_checks(
    """
    distinct select on columns
    """
    distinct_on: [workflow_adhoc_checks_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_adhoc_checks_order_by!]

    """
    filter the rows returned
    """
    where: workflow_adhoc_checks_bool_exp
  ): [workflow_adhoc_checks!]!

  """
  fetch aggregated fields from the table: "workflow.adhoc_checks"
  """
  workflow_adhoc_checks_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_adhoc_checks_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_adhoc_checks_order_by!]

    """
    filter the rows returned
    """
    where: workflow_adhoc_checks_bool_exp
  ): workflow_adhoc_checks_aggregate!

  """
  fetch data from the table: "workflow.adhoc_requests"
  """
  workflow_adhoc_requests(
    """
    distinct select on columns
    """
    distinct_on: [workflow_adhoc_requests_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_adhoc_requests_order_by!]

    """
    filter the rows returned
    """
    where: workflow_adhoc_requests_bool_exp
  ): [workflow_adhoc_requests!]!

  """
  fetch aggregated fields from the table: "workflow.adhoc_requests"
  """
  workflow_adhoc_requests_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_adhoc_requests_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_adhoc_requests_order_by!]

    """
    filter the rows returned
    """
    where: workflow_adhoc_requests_bool_exp
  ): workflow_adhoc_requests_aggregate!

  """
  fetch data from the table: "workflow.call_center_acc_no"
  """
  workflow_call_center_acc_no(
    """
    distinct select on columns
    """
    distinct_on: [workflow_call_center_acc_no_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_call_center_acc_no_order_by!]

    """
    filter the rows returned
    """
    where: workflow_call_center_acc_no_bool_exp
  ): [workflow_call_center_acc_no!]!

  """
  fetch aggregated fields from the table: "workflow.call_center_acc_no"
  """
  workflow_call_center_acc_no_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_call_center_acc_no_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_call_center_acc_no_order_by!]

    """
    filter the rows returned
    """
    where: workflow_call_center_acc_no_bool_exp
  ): workflow_call_center_acc_no_aggregate!

  """
  fetch data from the table: "workflow.call_center_batch"
  """
  workflow_call_center_batch(
    """
    distinct select on columns
    """
    distinct_on: [workflow_call_center_batch_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_call_center_batch_order_by!]

    """
    filter the rows returned
    """
    where: workflow_call_center_batch_bool_exp
  ): [workflow_call_center_batch!]!

  """
  fetch aggregated fields from the table: "workflow.call_center_batch"
  """
  workflow_call_center_batch_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_call_center_batch_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_call_center_batch_order_by!]

    """
    filter the rows returned
    """
    where: workflow_call_center_batch_bool_exp
  ): workflow_call_center_batch_aggregate!

  """
  fetch data from the table: "workflow.call_center_batch" using primary key columns
  """
  workflow_call_center_batch_by_pk(batch_id: float8!): workflow_call_center_batch

  """
  fetch data from the table: "workflow.copyright_docs"
  """
  workflow_copyright_docs(
    """
    distinct select on columns
    """
    distinct_on: [workflow_copyright_docs_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_copyright_docs_order_by!]

    """
    filter the rows returned
    """
    where: workflow_copyright_docs_bool_exp
  ): [workflow_copyright_docs!]!

  """
  fetch aggregated fields from the table: "workflow.copyright_docs"
  """
  workflow_copyright_docs_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_copyright_docs_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_copyright_docs_order_by!]

    """
    filter the rows returned
    """
    where: workflow_copyright_docs_bool_exp
  ): workflow_copyright_docs_aggregate!

  """
  fetch data from the table: "workflow.doc_comments"
  """
  workflow_doc_comments(
    """
    distinct select on columns
    """
    distinct_on: [workflow_doc_comments_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_doc_comments_order_by!]

    """
    filter the rows returned
    """
    where: workflow_doc_comments_bool_exp
  ): [workflow_doc_comments!]!

  """
  fetch aggregated fields from the table: "workflow.doc_comments"
  """
  workflow_doc_comments_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_doc_comments_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_doc_comments_order_by!]

    """
    filter the rows returned
    """
    where: workflow_doc_comments_bool_exp
  ): workflow_doc_comments_aggregate!

  """
  fetch data from the table: "workflow.doc_names"
  """
  workflow_doc_names(
    """
    distinct select on columns
    """
    distinct_on: [workflow_doc_names_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_doc_names_order_by!]

    """
    filter the rows returned
    """
    where: workflow_doc_names_bool_exp
  ): [workflow_doc_names!]!

  """
  fetch aggregated fields from the table: "workflow.doc_names"
  """
  workflow_doc_names_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_doc_names_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_doc_names_order_by!]

    """
    filter the rows returned
    """
    where: workflow_doc_names_bool_exp
  ): workflow_doc_names_aggregate!

  """
  fetch data from the table: "workflow.doc_sources"
  """
  workflow_doc_sources(
    """
    distinct select on columns
    """
    distinct_on: [workflow_doc_sources_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_doc_sources_order_by!]

    """
    filter the rows returned
    """
    where: workflow_doc_sources_bool_exp
  ): [workflow_doc_sources!]!

  """
  fetch aggregated fields from the table: "workflow.doc_sources"
  """
  workflow_doc_sources_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_doc_sources_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_doc_sources_order_by!]

    """
    filter the rows returned
    """
    where: workflow_doc_sources_bool_exp
  ): workflow_doc_sources_aggregate!

  """
  fetch data from the table: "workflow.doc_status"
  """
  workflow_doc_status(
    """
    distinct select on columns
    """
    distinct_on: [workflow_doc_status_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_doc_status_order_by!]

    """
    filter the rows returned
    """
    where: workflow_doc_status_bool_exp
  ): [workflow_doc_status!]!

  """
  fetch aggregated fields from the table: "workflow.doc_status"
  """
  workflow_doc_status_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_doc_status_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_doc_status_order_by!]

    """
    filter the rows returned
    """
    where: workflow_doc_status_bool_exp
  ): workflow_doc_status_aggregate!

  """
  fetch data from the table: "workflow.doc_tags_names"
  """
  workflow_doc_tags_names(
    """
    distinct select on columns
    """
    distinct_on: [workflow_doc_tags_names_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_doc_tags_names_order_by!]

    """
    filter the rows returned
    """
    where: workflow_doc_tags_names_bool_exp
  ): [workflow_doc_tags_names!]!

  """
  fetch aggregated fields from the table: "workflow.doc_tags_names"
  """
  workflow_doc_tags_names_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_doc_tags_names_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_doc_tags_names_order_by!]

    """
    filter the rows returned
    """
    where: workflow_doc_tags_names_bool_exp
  ): workflow_doc_tags_names_aggregate!

  """
  fetch data from the table: "workflow.doc_tags_names" using primary key columns
  """
  workflow_doc_tags_names_by_pk(tag: String!): workflow_doc_tags_names

  """
  fetch data from the table: "workflow.documents"
  """
  workflow_documents(
    """
    distinct select on columns
    """
    distinct_on: [workflow_documents_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_documents_order_by!]

    """
    filter the rows returned
    """
    where: workflow_documents_bool_exp
  ): [workflow_documents!]!

  """
  fetch aggregated fields from the table: "workflow.documents"
  """
  workflow_documents_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_documents_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_documents_order_by!]

    """
    filter the rows returned
    """
    where: workflow_documents_bool_exp
  ): workflow_documents_aggregate!

  """
  fetch data from the table: "workflow.documents" using primary key columns
  """
  workflow_documents_by_pk(ID: float8!): workflow_documents

  """
  fetch data from the table: "workflow.final_priv_log"
  """
  workflow_final_priv_log(
    """
    distinct select on columns
    """
    distinct_on: [workflow_final_priv_log_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_final_priv_log_order_by!]

    """
    filter the rows returned
    """
    where: workflow_final_priv_log_bool_exp
  ): [workflow_final_priv_log!]!

  """
  fetch aggregated fields from the table: "workflow.final_priv_log"
  """
  workflow_final_priv_log_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_final_priv_log_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_final_priv_log_order_by!]

    """
    filter the rows returned
    """
    where: workflow_final_priv_log_bool_exp
  ): workflow_final_priv_log_aggregate!

  """
  fetch data from the table: "workflow.final_priv_log_author"
  """
  workflow_final_priv_log_author(
    """
    distinct select on columns
    """
    distinct_on: [workflow_final_priv_log_author_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_final_priv_log_author_order_by!]

    """
    filter the rows returned
    """
    where: workflow_final_priv_log_author_bool_exp
  ): [workflow_final_priv_log_author!]!

  """
  fetch aggregated fields from the table: "workflow.final_priv_log_author"
  """
  workflow_final_priv_log_author_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_final_priv_log_author_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_final_priv_log_author_order_by!]

    """
    filter the rows returned
    """
    where: workflow_final_priv_log_author_bool_exp
  ): workflow_final_priv_log_author_aggregate!

  """
  fetch data from the table: "workflow.final_priv_log" using primary key columns
  """
  workflow_final_priv_log_by_pk(acc_no: String!): workflow_final_priv_log

  """
  fetch data from the table: "workflow.final_priv_log_recipient"
  """
  workflow_final_priv_log_recipient(
    """
    distinct select on columns
    """
    distinct_on: [workflow_final_priv_log_recipient_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_final_priv_log_recipient_order_by!]

    """
    filter the rows returned
    """
    where: workflow_final_priv_log_recipient_bool_exp
  ): [workflow_final_priv_log_recipient!]!

  """
  fetch aggregated fields from the table: "workflow.final_priv_log_recipient"
  """
  workflow_final_priv_log_recipient_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_final_priv_log_recipient_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_final_priv_log_recipient_order_by!]

    """
    filter the rows returned
    """
    where: workflow_final_priv_log_recipient_bool_exp
  ): workflow_final_priv_log_recipient_aggregate!

  """
  fetch data from the table: "workflow.highlight_words"
  """
  workflow_highlight_words(
    """
    distinct select on columns
    """
    distinct_on: [workflow_highlight_words_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_highlight_words_order_by!]

    """
    filter the rows returned
    """
    where: workflow_highlight_words_bool_exp
  ): [workflow_highlight_words!]!

  """
  fetch aggregated fields from the table: "workflow.highlight_words"
  """
  workflow_highlight_words_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_highlight_words_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_highlight_words_order_by!]

    """
    filter the rows returned
    """
    where: workflow_highlight_words_bool_exp
  ): workflow_highlight_words_aggregate!

  """
  fetch data from the table: "workflow.highlight_words" using primary key columns
  """
  workflow_highlight_words_by_pk(highlight_word_id: Int!): workflow_highlight_words

  """
  fetch data from the table: "workflow.history"
  """
  workflow_history(
    """
    distinct select on columns
    """
    distinct_on: [workflow_history_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_history_order_by!]

    """
    filter the rows returned
    """
    where: workflow_history_bool_exp
  ): [workflow_history!]!

  """
  fetch aggregated fields from the table: "workflow.history"
  """
  workflow_history_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_history_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_history_order_by!]

    """
    filter the rows returned
    """
    where: workflow_history_bool_exp
  ): workflow_history_aggregate!

  """
  fetch data from the table: "workflow.history" using primary key columns
  """
  workflow_history_by_pk(id: Int!): workflow_history

  """
  fetch data from the table: "workflow.lookups"
  """
  workflow_lookups(
    """
    distinct select on columns
    """
    distinct_on: [workflow_lookups_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_lookups_order_by!]

    """
    filter the rows returned
    """
    where: workflow_lookups_bool_exp
  ): [workflow_lookups!]!

  """
  fetch aggregated fields from the table: "workflow.lookups"
  """
  workflow_lookups_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_lookups_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_lookups_order_by!]

    """
    filter the rows returned
    """
    where: workflow_lookups_bool_exp
  ): workflow_lookups_aggregate!

  """
  fetch data from the table: "workflow.name_org_type"
  """
  workflow_name_org_type(
    """
    distinct select on columns
    """
    distinct_on: [workflow_name_org_type_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_name_org_type_order_by!]

    """
    filter the rows returned
    """
    where: workflow_name_org_type_bool_exp
  ): [workflow_name_org_type!]!

  """
  fetch aggregated fields from the table: "workflow.name_org_type"
  """
  workflow_name_org_type_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_name_org_type_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_name_org_type_order_by!]

    """
    filter the rows returned
    """
    where: workflow_name_org_type_bool_exp
  ): workflow_name_org_type_aggregate!

  """
  fetch data from the table: "workflow.name_type_lookup"
  """
  workflow_name_type_lookup(
    """
    distinct select on columns
    """
    distinct_on: [workflow_name_type_lookup_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_name_type_lookup_order_by!]

    """
    filter the rows returned
    """
    where: workflow_name_type_lookup_bool_exp
  ): [workflow_name_type_lookup!]!

  """
  fetch aggregated fields from the table: "workflow.name_type_lookup"
  """
  workflow_name_type_lookup_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_name_type_lookup_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_name_type_lookup_order_by!]

    """
    filter the rows returned
    """
    where: workflow_name_type_lookup_bool_exp
  ): workflow_name_type_lookup_aggregate!

  """
  fetch data from the table: "workflow.priv_log_detail"
  """
  workflow_priv_log_detail(
    """
    distinct select on columns
    """
    distinct_on: [workflow_priv_log_detail_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_priv_log_detail_order_by!]

    """
    filter the rows returned
    """
    where: workflow_priv_log_detail_bool_exp
  ): [workflow_priv_log_detail!]!

  """
  fetch aggregated fields from the table: "workflow.priv_log_detail"
  """
  workflow_priv_log_detail_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_priv_log_detail_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_priv_log_detail_order_by!]

    """
    filter the rows returned
    """
    where: workflow_priv_log_detail_bool_exp
  ): workflow_priv_log_detail_aggregate!

  """
  fetch data from the table: "workflow.priv_log_detail" using primary key columns
  """
  workflow_priv_log_detail_by_pk(priv_log_detail_id: float8!): workflow_priv_log_detail

  """
  fetch data from the table: "workflow.priv_log_entry"
  """
  workflow_priv_log_entry(
    """
    distinct select on columns
    """
    distinct_on: [workflow_priv_log_entry_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_priv_log_entry_order_by!]

    """
    filter the rows returned
    """
    where: workflow_priv_log_entry_bool_exp
  ): [workflow_priv_log_entry!]!

  """
  fetch aggregated fields from the table: "workflow.priv_log_entry"
  """
  workflow_priv_log_entry_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_priv_log_entry_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_priv_log_entry_order_by!]

    """
    filter the rows returned
    """
    where: workflow_priv_log_entry_bool_exp
  ): workflow_priv_log_entry_aggregate!

  """
  fetch data from the table: "workflow.priv_log_entry" using primary key columns
  """
  workflow_priv_log_entry_by_pk(priv_log_entry_id: float8!): workflow_priv_log_entry

  """
  fetch data from the table: "workflow.privacy_docs"
  """
  workflow_privacy_docs(
    """
    distinct select on columns
    """
    distinct_on: [workflow_privacy_docs_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_privacy_docs_order_by!]

    """
    filter the rows returned
    """
    where: workflow_privacy_docs_bool_exp
  ): [workflow_privacy_docs!]!

  """
  fetch aggregated fields from the table: "workflow.privacy_docs"
  """
  workflow_privacy_docs_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_privacy_docs_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_privacy_docs_order_by!]

    """
    filter the rows returned
    """
    where: workflow_privacy_docs_bool_exp
  ): workflow_privacy_docs_aggregate!

  """
  fetch data from the table: "workflow.redacted_docs"
  """
  workflow_redacted_docs(
    """
    distinct select on columns
    """
    distinct_on: [workflow_redacted_docs_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_redacted_docs_order_by!]

    """
    filter the rows returned
    """
    where: workflow_redacted_docs_bool_exp
  ): [workflow_redacted_docs!]!

  """
  fetch aggregated fields from the table: "workflow.redacted_docs"
  """
  workflow_redacted_docs_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_redacted_docs_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_redacted_docs_order_by!]

    """
    filter the rows returned
    """
    where: workflow_redacted_docs_bool_exp
  ): workflow_redacted_docs_aggregate!

  """
  fetch data from the table: "workflow.redacted_pages"
  """
  workflow_redacted_pages(
    """
    distinct select on columns
    """
    distinct_on: [workflow_redacted_pages_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_redacted_pages_order_by!]

    """
    filter the rows returned
    """
    where: workflow_redacted_pages_bool_exp
  ): [workflow_redacted_pages!]!

  """
  fetch aggregated fields from the table: "workflow.redacted_pages"
  """
  workflow_redacted_pages_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_redacted_pages_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_redacted_pages_order_by!]

    """
    filter the rows returned
    """
    where: workflow_redacted_pages_bool_exp
  ): workflow_redacted_pages_aggregate!

  """
  fetch data from the table: "workflow.redaction_processing"
  """
  workflow_redaction_processing(
    """
    distinct select on columns
    """
    distinct_on: [workflow_redaction_processing_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_redaction_processing_order_by!]

    """
    filter the rows returned
    """
    where: workflow_redaction_processing_bool_exp
  ): [workflow_redaction_processing!]!

  """
  fetch aggregated fields from the table: "workflow.redaction_processing"
  """
  workflow_redaction_processing_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_redaction_processing_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_redaction_processing_order_by!]

    """
    filter the rows returned
    """
    where: workflow_redaction_processing_bool_exp
  ): workflow_redaction_processing_aggregate!

  """
  fetch data from the table: "workflow.released_docs"
  """
  workflow_released_docs(
    """
    distinct select on columns
    """
    distinct_on: [workflow_released_docs_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_released_docs_order_by!]

    """
    filter the rows returned
    """
    where: workflow_released_docs_bool_exp
  ): [workflow_released_docs!]!

  """
  fetch aggregated fields from the table: "workflow.released_docs"
  """
  workflow_released_docs_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_released_docs_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_released_docs_order_by!]

    """
    filter the rows returned
    """
    where: workflow_released_docs_bool_exp
  ): workflow_released_docs_aggregate!

  """
  fetch data from the table: "workflow.sources"
  """
  workflow_sources(
    """
    distinct select on columns
    """
    distinct_on: [workflow_sources_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_sources_order_by!]

    """
    filter the rows returned
    """
    where: workflow_sources_bool_exp
  ): [workflow_sources!]!

  """
  fetch aggregated fields from the table: "workflow.sources"
  """
  workflow_sources_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_sources_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_sources_order_by!]

    """
    filter the rows returned
    """
    where: workflow_sources_bool_exp
  ): workflow_sources_aggregate!

  """
  fetch data from the table: "workflow.sources" using primary key columns
  """
  workflow_sources_by_pk(ID: float8!): workflow_sources

  """
  fetch data from the table: "workflow.stages"
  """
  workflow_stages(
    """
    distinct select on columns
    """
    distinct_on: [workflow_stages_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_stages_order_by!]

    """
    filter the rows returned
    """
    where: workflow_stages_bool_exp
  ): [workflow_stages!]!

  """
  fetch aggregated fields from the table: "workflow.stages"
  """
  workflow_stages_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_stages_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_stages_order_by!]

    """
    filter the rows returned
    """
    where: workflow_stages_bool_exp
  ): workflow_stages_aggregate!

  """
  fetch data from the table: "workflow.stamped_pages"
  """
  workflow_stamped_pages(
    """
    distinct select on columns
    """
    distinct_on: [workflow_stamped_pages_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_stamped_pages_order_by!]

    """
    filter the rows returned
    """
    where: workflow_stamped_pages_bool_exp
  ): [workflow_stamped_pages!]!

  """
  fetch aggregated fields from the table: "workflow.stamped_pages"
  """
  workflow_stamped_pages_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_stamped_pages_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_stamped_pages_order_by!]

    """
    filter the rows returned
    """
    where: workflow_stamped_pages_bool_exp
  ): workflow_stamped_pages_aggregate!

  """
  fetch data from the table: "workflow.users"
  """
  workflow_users(
    """
    distinct select on columns
    """
    distinct_on: [workflow_users_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_users_order_by!]

    """
    filter the rows returned
    """
    where: workflow_users_bool_exp
  ): [workflow_users!]!

  """
  fetch aggregated fields from the table: "workflow.users"
  """
  workflow_users_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_users_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_users_order_by!]

    """
    filter the rows returned
    """
    where: workflow_users_bool_exp
  ): workflow_users_aggregate!

  """
  fetch data from the table: "workflow.workflow"
  """
  workflow_workflow(
    """
    distinct select on columns
    """
    distinct_on: [workflow_workflow_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_workflow_order_by!]

    """
    filter the rows returned
    """
    where: workflow_workflow_bool_exp
  ): [workflow_workflow!]!

  """
  fetch aggregated fields from the table: "workflow.workflow"
  """
  workflow_workflow_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_workflow_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_workflow_order_by!]

    """
    filter the rows returned
    """
    where: workflow_workflow_bool_exp
  ): workflow_workflow_aggregate!

  """
  fetch data from the table: "workflow.workflow" using primary key columns
  """
  workflow_workflow_by_pk(ID: float8!): workflow_workflow

  """
  fetch data from the table: "workflow.workflow_decision"
  """
  workflow_workflow_decision(
    """
    distinct select on columns
    """
    distinct_on: [workflow_workflow_decision_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_workflow_decision_order_by!]

    """
    filter the rows returned
    """
    where: workflow_workflow_decision_bool_exp
  ): [workflow_workflow_decision!]!

  """
  fetch aggregated fields from the table: "workflow.workflow_decision"
  """
  workflow_workflow_decision_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_workflow_decision_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_workflow_decision_order_by!]

    """
    filter the rows returned
    """
    where: workflow_workflow_decision_bool_exp
  ): workflow_workflow_decision_aggregate!
}

"""
columns and relationships of "risdata.case_collection"
"""
type risdata_case_collection {
  case_id: numeric!
  collection_id: numeric!
  collection_name: String!
  created_date: timestamp
  created_user: String
  modified_date: timestamp
  modified_user: String
  rowid: String!
}

"""
aggregated selection of "risdata.case_collection"
"""
type risdata_case_collection_aggregate {
  aggregate: risdata_case_collection_aggregate_fields
  nodes: [risdata_case_collection!]!
}

"""
aggregate fields of "risdata.case_collection"
"""
type risdata_case_collection_aggregate_fields {
  avg: risdata_case_collection_avg_fields
  count(columns: [risdata_case_collection_select_column!], distinct: Boolean): Int
  max: risdata_case_collection_max_fields
  min: risdata_case_collection_min_fields
  stddev: risdata_case_collection_stddev_fields
  stddev_pop: risdata_case_collection_stddev_pop_fields
  stddev_samp: risdata_case_collection_stddev_samp_fields
  sum: risdata_case_collection_sum_fields
  var_pop: risdata_case_collection_var_pop_fields
  var_samp: risdata_case_collection_var_samp_fields
  variance: risdata_case_collection_variance_fields
}

"""
order by aggregate values of table "risdata.case_collection"
"""
input risdata_case_collection_aggregate_order_by {
  avg: risdata_case_collection_avg_order_by
  count: order_by
  max: risdata_case_collection_max_order_by
  min: risdata_case_collection_min_order_by
  stddev: risdata_case_collection_stddev_order_by
  stddev_pop: risdata_case_collection_stddev_pop_order_by
  stddev_samp: risdata_case_collection_stddev_samp_order_by
  sum: risdata_case_collection_sum_order_by
  var_pop: risdata_case_collection_var_pop_order_by
  var_samp: risdata_case_collection_var_samp_order_by
  variance: risdata_case_collection_variance_order_by
}

"""
input type for inserting array relation for remote table "risdata.case_collection"
"""
input risdata_case_collection_arr_rel_insert_input {
  data: [risdata_case_collection_insert_input!]!
  on_conflict: risdata_case_collection_on_conflict
}

"""
aggregate avg on columns
"""
type risdata_case_collection_avg_fields {
  case_id: Float
  collection_id: Float
}

"""
order by avg() on columns of table "risdata.case_collection"
"""
input risdata_case_collection_avg_order_by {
  case_id: order_by
  collection_id: order_by
}

"""
Boolean expression to filter rows from the table "risdata.case_collection". All fields are combined with a logical 'AND'.
"""
input risdata_case_collection_bool_exp {
  _and: [risdata_case_collection_bool_exp]
  _not: risdata_case_collection_bool_exp
  _or: [risdata_case_collection_bool_exp]
  case_id: numeric_comparison_exp
  collection_id: numeric_comparison_exp
  collection_name: String_comparison_exp
  created_date: timestamp_comparison_exp
  created_user: String_comparison_exp
  modified_date: timestamp_comparison_exp
  modified_user: String_comparison_exp
  rowid: String_comparison_exp
}

"""
unique or primary key constraints on table "risdata.case_collection"
"""
enum risdata_case_collection_constraint {
  """
  unique or primary key constraint
  """
  case_collection_pkey
}

"""
input type for incrementing integer column in table "risdata.case_collection"
"""
input risdata_case_collection_inc_input {
  case_id: numeric
  collection_id: numeric
}

"""
input type for inserting data into table "risdata.case_collection"
"""
input risdata_case_collection_insert_input {
  case_id: numeric
  collection_id: numeric
  collection_name: String
  created_date: timestamp
  created_user: String
  modified_date: timestamp
  modified_user: String
  rowid: String
}

"""
aggregate max on columns
"""
type risdata_case_collection_max_fields {
  case_id: numeric
  collection_id: numeric
  collection_name: String
  created_date: timestamp
  created_user: String
  modified_date: timestamp
  modified_user: String
  rowid: String
}

"""
order by max() on columns of table "risdata.case_collection"
"""
input risdata_case_collection_max_order_by {
  case_id: order_by
  collection_id: order_by
  collection_name: order_by
  created_date: order_by
  created_user: order_by
  modified_date: order_by
  modified_user: order_by
  rowid: order_by
}

"""
aggregate min on columns
"""
type risdata_case_collection_min_fields {
  case_id: numeric
  collection_id: numeric
  collection_name: String
  created_date: timestamp
  created_user: String
  modified_date: timestamp
  modified_user: String
  rowid: String
}

"""
order by min() on columns of table "risdata.case_collection"
"""
input risdata_case_collection_min_order_by {
  case_id: order_by
  collection_id: order_by
  collection_name: order_by
  created_date: order_by
  created_user: order_by
  modified_date: order_by
  modified_user: order_by
  rowid: order_by
}

"""
response of any mutation on the table "risdata.case_collection"
"""
type risdata_case_collection_mutation_response {
  """
  number of affected rows by the mutation
  """
  affected_rows: Int!

  """
  data of the affected rows by the mutation
  """
  returning: [risdata_case_collection!]!
}

"""
input type for inserting object relation for remote table "risdata.case_collection"
"""
input risdata_case_collection_obj_rel_insert_input {
  data: risdata_case_collection_insert_input!
  on_conflict: risdata_case_collection_on_conflict
}

"""
on conflict condition type for table "risdata.case_collection"
"""
input risdata_case_collection_on_conflict {
  constraint: risdata_case_collection_constraint!
  update_columns: [risdata_case_collection_update_column!]!
  where: risdata_case_collection_bool_exp
}

"""
ordering options when selecting data from "risdata.case_collection"
"""
input risdata_case_collection_order_by {
  case_id: order_by
  collection_id: order_by
  collection_name: order_by
  created_date: order_by
  created_user: order_by
  modified_date: order_by
  modified_user: order_by
  rowid: order_by
}

"""
primary key columns input for table: "risdata.case_collection"
"""
input risdata_case_collection_pk_columns_input {
  collection_id: numeric!
}

"""
select columns of table "risdata.case_collection"
"""
enum risdata_case_collection_select_column {
  """
  column name
  """
  case_id

  """
  column name
  """
  collection_id

  """
  column name
  """
  collection_name

  """
  column name
  """
  created_date

  """
  column name
  """
  created_user

  """
  column name
  """
  modified_date

  """
  column name
  """
  modified_user

  """
  column name
  """
  rowid
}

"""
input type for updating data in table "risdata.case_collection"
"""
input risdata_case_collection_set_input {
  case_id: numeric
  collection_id: numeric
  collection_name: String
  created_date: timestamp
  created_user: String
  modified_date: timestamp
  modified_user: String
  rowid: String
}

"""
aggregate stddev on columns
"""
type risdata_case_collection_stddev_fields {
  case_id: Float
  collection_id: Float
}

"""
order by stddev() on columns of table "risdata.case_collection"
"""
input risdata_case_collection_stddev_order_by {
  case_id: order_by
  collection_id: order_by
}

"""
aggregate stddev_pop on columns
"""
type risdata_case_collection_stddev_pop_fields {
  case_id: Float
  collection_id: Float
}

"""
order by stddev_pop() on columns of table "risdata.case_collection"
"""
input risdata_case_collection_stddev_pop_order_by {
  case_id: order_by
  collection_id: order_by
}

"""
aggregate stddev_samp on columns
"""
type risdata_case_collection_stddev_samp_fields {
  case_id: Float
  collection_id: Float
}

"""
order by stddev_samp() on columns of table "risdata.case_collection"
"""
input risdata_case_collection_stddev_samp_order_by {
  case_id: order_by
  collection_id: order_by
}

"""
aggregate sum on columns
"""
type risdata_case_collection_sum_fields {
  case_id: numeric
  collection_id: numeric
}

"""
order by sum() on columns of table "risdata.case_collection"
"""
input risdata_case_collection_sum_order_by {
  case_id: order_by
  collection_id: order_by
}

"""
update columns of table "risdata.case_collection"
"""
enum risdata_case_collection_update_column {
  """
  column name
  """
  case_id

  """
  column name
  """
  collection_id

  """
  column name
  """
  collection_name

  """
  column name
  """
  created_date

  """
  column name
  """
  created_user

  """
  column name
  """
  modified_date

  """
  column name
  """
  modified_user

  """
  column name
  """
  rowid
}

"""
aggregate var_pop on columns
"""
type risdata_case_collection_var_pop_fields {
  case_id: Float
  collection_id: Float
}

"""
order by var_pop() on columns of table "risdata.case_collection"
"""
input risdata_case_collection_var_pop_order_by {
  case_id: order_by
  collection_id: order_by
}

"""
aggregate var_samp on columns
"""
type risdata_case_collection_var_samp_fields {
  case_id: Float
  collection_id: Float
}

"""
order by var_samp() on columns of table "risdata.case_collection"
"""
input risdata_case_collection_var_samp_order_by {
  case_id: order_by
  collection_id: order_by
}

"""
aggregate variance on columns
"""
type risdata_case_collection_variance_fields {
  case_id: Float
  collection_id: Float
}

"""
order by variance() on columns of table "risdata.case_collection"
"""
input risdata_case_collection_variance_order_by {
  case_id: order_by
  collection_id: order_by
}

"""
columns and relationships of "risdata.doc_main"
"""
type risdata_doc_main {
  TEXT: bpchar
  VERSION: float8
  ads_bates_fpage: String
  ads_bates_lpage: String
  ads_bates_range: String
  ads_ctrname: String!
  ads_docdates: String!
  ads_fpack: numeric
  ads_fpage: numeric!
  ads_lpack: numeric
  ads_lpage: numeric!
  ads_udi: String!
  batch_no: String
  bax_file_load_date: timestamp
  box_no: float8
  challenged: bpchar
  challenged_date: String
  collection_id: numeric
  collection_type: bpchar
  container: String
  created_date: timestamp
  created_user: String
  ctr_page_range: String
  dat_file_load_date: timestamp
  database_name: String
  dm_comment: String
  docdates_c: String
  dtype: bpchar
  header_only: bpchar
  hsc_flag: bpchar
  hsc_proc: bpchar
  hsc_proc_date: timestamp
  incomplete: float8
  is_checked_out: bpchar
  is_hot: bpchar
  is_rework: bpchar
  last_user: String
  load_datex: timestamp
  lsn_access_cntrl: String
  lsn_relevancy_date: String
  lvload: String
  lvload_date: timestamp
  media_code: String
  media_count: float8
  modified_date: timestamp
  modified_user: String
  mts1: String
  mts2: String
  mts3: String
  mts4: String
  mts5: String
  ocr_load_date: timestamp
  ocr_load_status: bpchar
  on_irs: String
  p_acc_no: String!
  pac_flag: String
  package_id: String
  pads_udi: String
  pctype: String
  pctype_date: timestamp
  priv_att: bpchar
  privacy: bpchar
  privileged: bpchar
  prop: bpchar
  qa: String
  qa_record: bpchar
  redaction_status: bpchar
  released: bpchar
  released_date: timestamp
  relevancy: bpchar
  ret_code: bpchar
  rms_chg_ctl_comments: String
  rms_comments: String
  rms_load_date: timestamp
  rms_relevancy: bpchar
  rowid: String!
  seq_fpage: float8
  seq_lpage: float8
  shipping_status: bpchar
  splv: String
  splv_date: timestamp
  staged: bpchar
  staged_date: timestamp
  status_code: bpchar
  temp_update_flag_hm: bpchar
  title: String!
  title_redacted: String

  """
  An array relationship
  """
  types(
    """
    distinct select on columns
    """
    distinct_on: [risdata_type_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [risdata_type_order_by!]

    """
    filter the rows returned
    """
    where: risdata_type_bool_exp
  ): [risdata_type!]!

  """
  An aggregated array relationship
  """
  types_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [risdata_type_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [risdata_type_order_by!]

    """
    filter the rows returned
    """
    where: risdata_type_bool_exp
  ): risdata_type_aggregate!
  volume: String
  xml_load_date: timestamp
}

"""
aggregated selection of "risdata.doc_main"
"""
type risdata_doc_main_aggregate {
  aggregate: risdata_doc_main_aggregate_fields
  nodes: [risdata_doc_main!]!
}

"""
aggregate fields of "risdata.doc_main"
"""
type risdata_doc_main_aggregate_fields {
  avg: risdata_doc_main_avg_fields
  count(columns: [risdata_doc_main_select_column!], distinct: Boolean): Int
  max: risdata_doc_main_max_fields
  min: risdata_doc_main_min_fields
  stddev: risdata_doc_main_stddev_fields
  stddev_pop: risdata_doc_main_stddev_pop_fields
  stddev_samp: risdata_doc_main_stddev_samp_fields
  sum: risdata_doc_main_sum_fields
  var_pop: risdata_doc_main_var_pop_fields
  var_samp: risdata_doc_main_var_samp_fields
  variance: risdata_doc_main_variance_fields
}

"""
order by aggregate values of table "risdata.doc_main"
"""
input risdata_doc_main_aggregate_order_by {
  avg: risdata_doc_main_avg_order_by
  count: order_by
  max: risdata_doc_main_max_order_by
  min: risdata_doc_main_min_order_by
  stddev: risdata_doc_main_stddev_order_by
  stddev_pop: risdata_doc_main_stddev_pop_order_by
  stddev_samp: risdata_doc_main_stddev_samp_order_by
  sum: risdata_doc_main_sum_order_by
  var_pop: risdata_doc_main_var_pop_order_by
  var_samp: risdata_doc_main_var_samp_order_by
  variance: risdata_doc_main_variance_order_by
}

"""
input type for inserting array relation for remote table "risdata.doc_main"
"""
input risdata_doc_main_arr_rel_insert_input {
  data: [risdata_doc_main_insert_input!]!
  on_conflict: risdata_doc_main_on_conflict
}

"""
aggregate avg on columns
"""
type risdata_doc_main_avg_fields {
  VERSION: Float
  ads_fpack: Float
  ads_fpage: Float
  ads_lpack: Float
  ads_lpage: Float
  box_no: Float
  collection_id: Float
  incomplete: Float
  media_count: Float
  seq_fpage: Float
  seq_lpage: Float
}

"""
order by avg() on columns of table "risdata.doc_main"
"""
input risdata_doc_main_avg_order_by {
  VERSION: order_by
  ads_fpack: order_by
  ads_fpage: order_by
  ads_lpack: order_by
  ads_lpage: order_by
  box_no: order_by
  collection_id: order_by
  incomplete: order_by
  media_count: order_by
  seq_fpage: order_by
  seq_lpage: order_by
}

"""
Boolean expression to filter rows from the table "risdata.doc_main". All fields are combined with a logical 'AND'.
"""
input risdata_doc_main_bool_exp {
  TEXT: bpchar_comparison_exp
  VERSION: float8_comparison_exp
  _and: [risdata_doc_main_bool_exp]
  _not: risdata_doc_main_bool_exp
  _or: [risdata_doc_main_bool_exp]
  ads_bates_fpage: String_comparison_exp
  ads_bates_lpage: String_comparison_exp
  ads_bates_range: String_comparison_exp
  ads_ctrname: String_comparison_exp
  ads_docdates: String_comparison_exp
  ads_fpack: numeric_comparison_exp
  ads_fpage: numeric_comparison_exp
  ads_lpack: numeric_comparison_exp
  ads_lpage: numeric_comparison_exp
  ads_udi: String_comparison_exp
  batch_no: String_comparison_exp
  bax_file_load_date: timestamp_comparison_exp
  box_no: float8_comparison_exp
  challenged: bpchar_comparison_exp
  challenged_date: String_comparison_exp
  collection_id: numeric_comparison_exp
  collection_type: bpchar_comparison_exp
  container: String_comparison_exp
  created_date: timestamp_comparison_exp
  created_user: String_comparison_exp
  ctr_page_range: String_comparison_exp
  dat_file_load_date: timestamp_comparison_exp
  database_name: String_comparison_exp
  dm_comment: String_comparison_exp
  docdates_c: String_comparison_exp
  dtype: bpchar_comparison_exp
  header_only: bpchar_comparison_exp
  hsc_flag: bpchar_comparison_exp
  hsc_proc: bpchar_comparison_exp
  hsc_proc_date: timestamp_comparison_exp
  incomplete: float8_comparison_exp
  is_checked_out: bpchar_comparison_exp
  is_hot: bpchar_comparison_exp
  is_rework: bpchar_comparison_exp
  last_user: String_comparison_exp
  load_datex: timestamp_comparison_exp
  lsn_access_cntrl: String_comparison_exp
  lsn_relevancy_date: String_comparison_exp
  lvload: String_comparison_exp
  lvload_date: timestamp_comparison_exp
  media_code: String_comparison_exp
  media_count: float8_comparison_exp
  modified_date: timestamp_comparison_exp
  modified_user: String_comparison_exp
  mts1: String_comparison_exp
  mts2: String_comparison_exp
  mts3: String_comparison_exp
  mts4: String_comparison_exp
  mts5: String_comparison_exp
  ocr_load_date: timestamp_comparison_exp
  ocr_load_status: bpchar_comparison_exp
  on_irs: String_comparison_exp
  p_acc_no: String_comparison_exp
  pac_flag: String_comparison_exp
  package_id: String_comparison_exp
  pads_udi: String_comparison_exp
  pctype: String_comparison_exp
  pctype_date: timestamp_comparison_exp
  priv_att: bpchar_comparison_exp
  privacy: bpchar_comparison_exp
  privileged: bpchar_comparison_exp
  prop: bpchar_comparison_exp
  qa: String_comparison_exp
  qa_record: bpchar_comparison_exp
  redaction_status: bpchar_comparison_exp
  released: bpchar_comparison_exp
  released_date: timestamp_comparison_exp
  relevancy: bpchar_comparison_exp
  ret_code: bpchar_comparison_exp
  rms_chg_ctl_comments: String_comparison_exp
  rms_comments: String_comparison_exp
  rms_load_date: timestamp_comparison_exp
  rms_relevancy: bpchar_comparison_exp
  rowid: String_comparison_exp
  seq_fpage: float8_comparison_exp
  seq_lpage: float8_comparison_exp
  shipping_status: bpchar_comparison_exp
  splv: String_comparison_exp
  splv_date: timestamp_comparison_exp
  staged: bpchar_comparison_exp
  staged_date: timestamp_comparison_exp
  status_code: bpchar_comparison_exp
  temp_update_flag_hm: bpchar_comparison_exp
  title: String_comparison_exp
  title_redacted: String_comparison_exp
  types: risdata_type_bool_exp
  volume: String_comparison_exp
  xml_load_date: timestamp_comparison_exp
}

"""
unique or primary key constraints on table "risdata.doc_main"
"""
enum risdata_doc_main_constraint {
  """
  unique or primary key constraint
  """
  doc_main_doc_no_unq

  """
  unique or primary key constraint
  """
  doc_main_pkey

  """
  unique or primary key constraint
  """
  uk_doc_main_ads_udi_acc
}

"""
input type for incrementing integer column in table "risdata.doc_main"
"""
input risdata_doc_main_inc_input {
  VERSION: float8
  ads_fpack: numeric
  ads_fpage: numeric
  ads_lpack: numeric
  ads_lpage: numeric
  box_no: float8
  collection_id: numeric
  incomplete: float8
  media_count: float8
  seq_fpage: float8
  seq_lpage: float8
}

"""
input type for inserting data into table "risdata.doc_main"
"""
input risdata_doc_main_insert_input {
  TEXT: bpchar
  VERSION: float8
  ads_bates_fpage: String
  ads_bates_lpage: String
  ads_bates_range: String
  ads_ctrname: String
  ads_docdates: String
  ads_fpack: numeric
  ads_fpage: numeric
  ads_lpack: numeric
  ads_lpage: numeric
  ads_udi: String
  batch_no: String
  bax_file_load_date: timestamp
  box_no: float8
  challenged: bpchar
  challenged_date: String
  collection_id: numeric
  collection_type: bpchar
  container: String
  created_date: timestamp
  created_user: String
  ctr_page_range: String
  dat_file_load_date: timestamp
  database_name: String
  dm_comment: String
  docdates_c: String
  dtype: bpchar
  header_only: bpchar
  hsc_flag: bpchar
  hsc_proc: bpchar
  hsc_proc_date: timestamp
  incomplete: float8
  is_checked_out: bpchar
  is_hot: bpchar
  is_rework: bpchar
  last_user: String
  load_datex: timestamp
  lsn_access_cntrl: String
  lsn_relevancy_date: String
  lvload: String
  lvload_date: timestamp
  media_code: String
  media_count: float8
  modified_date: timestamp
  modified_user: String
  mts1: String
  mts2: String
  mts3: String
  mts4: String
  mts5: String
  ocr_load_date: timestamp
  ocr_load_status: bpchar
  on_irs: String
  p_acc_no: String
  pac_flag: String
  package_id: String
  pads_udi: String
  pctype: String
  pctype_date: timestamp
  priv_att: bpchar
  privacy: bpchar
  privileged: bpchar
  prop: bpchar
  qa: String
  qa_record: bpchar
  redaction_status: bpchar
  released: bpchar
  released_date: timestamp
  relevancy: bpchar
  ret_code: bpchar
  rms_chg_ctl_comments: String
  rms_comments: String
  rms_load_date: timestamp
  rms_relevancy: bpchar
  rowid: String
  seq_fpage: float8
  seq_lpage: float8
  shipping_status: bpchar
  splv: String
  splv_date: timestamp
  staged: bpchar
  staged_date: timestamp
  status_code: bpchar
  temp_update_flag_hm: bpchar
  title: String
  title_redacted: String
  types: risdata_type_arr_rel_insert_input
  volume: String
  xml_load_date: timestamp
}

"""
aggregate max on columns
"""
type risdata_doc_main_max_fields {
  VERSION: float8
  ads_bates_fpage: String
  ads_bates_lpage: String
  ads_bates_range: String
  ads_ctrname: String
  ads_docdates: String
  ads_fpack: numeric
  ads_fpage: numeric
  ads_lpack: numeric
  ads_lpage: numeric
  ads_udi: String
  batch_no: String
  bax_file_load_date: timestamp
  box_no: float8
  challenged_date: String
  collection_id: numeric
  container: String
  created_date: timestamp
  created_user: String
  ctr_page_range: String
  dat_file_load_date: timestamp
  database_name: String
  dm_comment: String
  docdates_c: String
  hsc_proc_date: timestamp
  incomplete: float8
  last_user: String
  load_datex: timestamp
  lsn_access_cntrl: String
  lsn_relevancy_date: String
  lvload: String
  lvload_date: timestamp
  media_code: String
  media_count: float8
  modified_date: timestamp
  modified_user: String
  mts1: String
  mts2: String
  mts3: String
  mts4: String
  mts5: String
  ocr_load_date: timestamp
  on_irs: String
  p_acc_no: String
  pac_flag: String
  package_id: String
  pads_udi: String
  pctype: String
  pctype_date: timestamp
  qa: String
  released_date: timestamp
  rms_chg_ctl_comments: String
  rms_comments: String
  rms_load_date: timestamp
  rowid: String
  seq_fpage: float8
  seq_lpage: float8
  splv: String
  splv_date: timestamp
  staged_date: timestamp
  title: String
  title_redacted: String
  volume: String
  xml_load_date: timestamp
}

"""
order by max() on columns of table "risdata.doc_main"
"""
input risdata_doc_main_max_order_by {
  VERSION: order_by
  ads_bates_fpage: order_by
  ads_bates_lpage: order_by
  ads_bates_range: order_by
  ads_ctrname: order_by
  ads_docdates: order_by
  ads_fpack: order_by
  ads_fpage: order_by
  ads_lpack: order_by
  ads_lpage: order_by
  ads_udi: order_by
  batch_no: order_by
  bax_file_load_date: order_by
  box_no: order_by
  challenged_date: order_by
  collection_id: order_by
  container: order_by
  created_date: order_by
  created_user: order_by
  ctr_page_range: order_by
  dat_file_load_date: order_by
  database_name: order_by
  dm_comment: order_by
  docdates_c: order_by
  hsc_proc_date: order_by
  incomplete: order_by
  last_user: order_by
  load_datex: order_by
  lsn_access_cntrl: order_by
  lsn_relevancy_date: order_by
  lvload: order_by
  lvload_date: order_by
  media_code: order_by
  media_count: order_by
  modified_date: order_by
  modified_user: order_by
  mts1: order_by
  mts2: order_by
  mts3: order_by
  mts4: order_by
  mts5: order_by
  ocr_load_date: order_by
  on_irs: order_by
  p_acc_no: order_by
  pac_flag: order_by
  package_id: order_by
  pads_udi: order_by
  pctype: order_by
  pctype_date: order_by
  qa: order_by
  released_date: order_by
  rms_chg_ctl_comments: order_by
  rms_comments: order_by
  rms_load_date: order_by
  rowid: order_by
  seq_fpage: order_by
  seq_lpage: order_by
  splv: order_by
  splv_date: order_by
  staged_date: order_by
  title: order_by
  title_redacted: order_by
  volume: order_by
  xml_load_date: order_by
}

"""
aggregate min on columns
"""
type risdata_doc_main_min_fields {
  VERSION: float8
  ads_bates_fpage: String
  ads_bates_lpage: String
  ads_bates_range: String
  ads_ctrname: String
  ads_docdates: String
  ads_fpack: numeric
  ads_fpage: numeric
  ads_lpack: numeric
  ads_lpage: numeric
  ads_udi: String
  batch_no: String
  bax_file_load_date: timestamp
  box_no: float8
  challenged_date: String
  collection_id: numeric
  container: String
  created_date: timestamp
  created_user: String
  ctr_page_range: String
  dat_file_load_date: timestamp
  database_name: String
  dm_comment: String
  docdates_c: String
  hsc_proc_date: timestamp
  incomplete: float8
  last_user: String
  load_datex: timestamp
  lsn_access_cntrl: String
  lsn_relevancy_date: String
  lvload: String
  lvload_date: timestamp
  media_code: String
  media_count: float8
  modified_date: timestamp
  modified_user: String
  mts1: String
  mts2: String
  mts3: String
  mts4: String
  mts5: String
  ocr_load_date: timestamp
  on_irs: String
  p_acc_no: String
  pac_flag: String
  package_id: String
  pads_udi: String
  pctype: String
  pctype_date: timestamp
  qa: String
  released_date: timestamp
  rms_chg_ctl_comments: String
  rms_comments: String
  rms_load_date: timestamp
  rowid: String
  seq_fpage: float8
  seq_lpage: float8
  splv: String
  splv_date: timestamp
  staged_date: timestamp
  title: String
  title_redacted: String
  volume: String
  xml_load_date: timestamp
}

"""
order by min() on columns of table "risdata.doc_main"
"""
input risdata_doc_main_min_order_by {
  VERSION: order_by
  ads_bates_fpage: order_by
  ads_bates_lpage: order_by
  ads_bates_range: order_by
  ads_ctrname: order_by
  ads_docdates: order_by
  ads_fpack: order_by
  ads_fpage: order_by
  ads_lpack: order_by
  ads_lpage: order_by
  ads_udi: order_by
  batch_no: order_by
  bax_file_load_date: order_by
  box_no: order_by
  challenged_date: order_by
  collection_id: order_by
  container: order_by
  created_date: order_by
  created_user: order_by
  ctr_page_range: order_by
  dat_file_load_date: order_by
  database_name: order_by
  dm_comment: order_by
  docdates_c: order_by
  hsc_proc_date: order_by
  incomplete: order_by
  last_user: order_by
  load_datex: order_by
  lsn_access_cntrl: order_by
  lsn_relevancy_date: order_by
  lvload: order_by
  lvload_date: order_by
  media_code: order_by
  media_count: order_by
  modified_date: order_by
  modified_user: order_by
  mts1: order_by
  mts2: order_by
  mts3: order_by
  mts4: order_by
  mts5: order_by
  ocr_load_date: order_by
  on_irs: order_by
  p_acc_no: order_by
  pac_flag: order_by
  package_id: order_by
  pads_udi: order_by
  pctype: order_by
  pctype_date: order_by
  qa: order_by
  released_date: order_by
  rms_chg_ctl_comments: order_by
  rms_comments: order_by
  rms_load_date: order_by
  rowid: order_by
  seq_fpage: order_by
  seq_lpage: order_by
  splv: order_by
  splv_date: order_by
  staged_date: order_by
  title: order_by
  title_redacted: order_by
  volume: order_by
  xml_load_date: order_by
}

"""
response of any mutation on the table "risdata.doc_main"
"""
type risdata_doc_main_mutation_response {
  """
  number of affected rows by the mutation
  """
  affected_rows: Int!

  """
  data of the affected rows by the mutation
  """
  returning: [risdata_doc_main!]!
}

"""
input type for inserting object relation for remote table "risdata.doc_main"
"""
input risdata_doc_main_obj_rel_insert_input {
  data: risdata_doc_main_insert_input!
  on_conflict: risdata_doc_main_on_conflict
}

"""
on conflict condition type for table "risdata.doc_main"
"""
input risdata_doc_main_on_conflict {
  constraint: risdata_doc_main_constraint!
  update_columns: [risdata_doc_main_update_column!]!
  where: risdata_doc_main_bool_exp
}

"""
ordering options when selecting data from "risdata.doc_main"
"""
input risdata_doc_main_order_by {
  TEXT: order_by
  VERSION: order_by
  ads_bates_fpage: order_by
  ads_bates_lpage: order_by
  ads_bates_range: order_by
  ads_ctrname: order_by
  ads_docdates: order_by
  ads_fpack: order_by
  ads_fpage: order_by
  ads_lpack: order_by
  ads_lpage: order_by
  ads_udi: order_by
  batch_no: order_by
  bax_file_load_date: order_by
  box_no: order_by
  challenged: order_by
  challenged_date: order_by
  collection_id: order_by
  collection_type: order_by
  container: order_by
  created_date: order_by
  created_user: order_by
  ctr_page_range: order_by
  dat_file_load_date: order_by
  database_name: order_by
  dm_comment: order_by
  docdates_c: order_by
  dtype: order_by
  header_only: order_by
  hsc_flag: order_by
  hsc_proc: order_by
  hsc_proc_date: order_by
  incomplete: order_by
  is_checked_out: order_by
  is_hot: order_by
  is_rework: order_by
  last_user: order_by
  load_datex: order_by
  lsn_access_cntrl: order_by
  lsn_relevancy_date: order_by
  lvload: order_by
  lvload_date: order_by
  media_code: order_by
  media_count: order_by
  modified_date: order_by
  modified_user: order_by
  mts1: order_by
  mts2: order_by
  mts3: order_by
  mts4: order_by
  mts5: order_by
  ocr_load_date: order_by
  ocr_load_status: order_by
  on_irs: order_by
  p_acc_no: order_by
  pac_flag: order_by
  package_id: order_by
  pads_udi: order_by
  pctype: order_by
  pctype_date: order_by
  priv_att: order_by
  privacy: order_by
  privileged: order_by
  prop: order_by
  qa: order_by
  qa_record: order_by
  redaction_status: order_by
  released: order_by
  released_date: order_by
  relevancy: order_by
  ret_code: order_by
  rms_chg_ctl_comments: order_by
  rms_comments: order_by
  rms_load_date: order_by
  rms_relevancy: order_by
  rowid: order_by
  seq_fpage: order_by
  seq_lpage: order_by
  shipping_status: order_by
  splv: order_by
  splv_date: order_by
  staged: order_by
  staged_date: order_by
  status_code: order_by
  temp_update_flag_hm: order_by
  title: order_by
  title_redacted: order_by
  types_aggregate: risdata_type_aggregate_order_by
  volume: order_by
  xml_load_date: order_by
}

"""
primary key columns input for table: "risdata.doc_main"
"""
input risdata_doc_main_pk_columns_input {
  ads_udi: String!
}

"""
select columns of table "risdata.doc_main"
"""
enum risdata_doc_main_select_column {
  """
  column name
  """
  TEXT

  """
  column name
  """
  VERSION

  """
  column name
  """
  ads_bates_fpage

  """
  column name
  """
  ads_bates_lpage

  """
  column name
  """
  ads_bates_range

  """
  column name
  """
  ads_ctrname

  """
  column name
  """
  ads_docdates

  """
  column name
  """
  ads_fpack

  """
  column name
  """
  ads_fpage

  """
  column name
  """
  ads_lpack

  """
  column name
  """
  ads_lpage

  """
  column name
  """
  ads_udi

  """
  column name
  """
  batch_no

  """
  column name
  """
  bax_file_load_date

  """
  column name
  """
  box_no

  """
  column name
  """
  challenged

  """
  column name
  """
  challenged_date

  """
  column name
  """
  collection_id

  """
  column name
  """
  collection_type

  """
  column name
  """
  container

  """
  column name
  """
  created_date

  """
  column name
  """
  created_user

  """
  column name
  """
  ctr_page_range

  """
  column name
  """
  dat_file_load_date

  """
  column name
  """
  database_name

  """
  column name
  """
  dm_comment

  """
  column name
  """
  docdates_c

  """
  column name
  """
  dtype

  """
  column name
  """
  header_only

  """
  column name
  """
  hsc_flag

  """
  column name
  """
  hsc_proc

  """
  column name
  """
  hsc_proc_date

  """
  column name
  """
  incomplete

  """
  column name
  """
  is_checked_out

  """
  column name
  """
  is_hot

  """
  column name
  """
  is_rework

  """
  column name
  """
  last_user

  """
  column name
  """
  load_datex

  """
  column name
  """
  lsn_access_cntrl

  """
  column name
  """
  lsn_relevancy_date

  """
  column name
  """
  lvload

  """
  column name
  """
  lvload_date

  """
  column name
  """
  media_code

  """
  column name
  """
  media_count

  """
  column name
  """
  modified_date

  """
  column name
  """
  modified_user

  """
  column name
  """
  mts1

  """
  column name
  """
  mts2

  """
  column name
  """
  mts3

  """
  column name
  """
  mts4

  """
  column name
  """
  mts5

  """
  column name
  """
  ocr_load_date

  """
  column name
  """
  ocr_load_status

  """
  column name
  """
  on_irs

  """
  column name
  """
  p_acc_no

  """
  column name
  """
  pac_flag

  """
  column name
  """
  package_id

  """
  column name
  """
  pads_udi

  """
  column name
  """
  pctype

  """
  column name
  """
  pctype_date

  """
  column name
  """
  priv_att

  """
  column name
  """
  privacy

  """
  column name
  """
  privileged

  """
  column name
  """
  prop

  """
  column name
  """
  qa

  """
  column name
  """
  qa_record

  """
  column name
  """
  redaction_status

  """
  column name
  """
  released

  """
  column name
  """
  released_date

  """
  column name
  """
  relevancy

  """
  column name
  """
  ret_code

  """
  column name
  """
  rms_chg_ctl_comments

  """
  column name
  """
  rms_comments

  """
  column name
  """
  rms_load_date

  """
  column name
  """
  rms_relevancy

  """
  column name
  """
  rowid

  """
  column name
  """
  seq_fpage

  """
  column name
  """
  seq_lpage

  """
  column name
  """
  shipping_status

  """
  column name
  """
  splv

  """
  column name
  """
  splv_date

  """
  column name
  """
  staged

  """
  column name
  """
  staged_date

  """
  column name
  """
  status_code

  """
  column name
  """
  temp_update_flag_hm

  """
  column name
  """
  title

  """
  column name
  """
  title_redacted

  """
  column name
  """
  volume

  """
  column name
  """
  xml_load_date
}

"""
input type for updating data in table "risdata.doc_main"
"""
input risdata_doc_main_set_input {
  TEXT: bpchar
  VERSION: float8
  ads_bates_fpage: String
  ads_bates_lpage: String
  ads_bates_range: String
  ads_ctrname: String
  ads_docdates: String
  ads_fpack: numeric
  ads_fpage: numeric
  ads_lpack: numeric
  ads_lpage: numeric
  ads_udi: String
  batch_no: String
  bax_file_load_date: timestamp
  box_no: float8
  challenged: bpchar
  challenged_date: String
  collection_id: numeric
  collection_type: bpchar
  container: String
  created_date: timestamp
  created_user: String
  ctr_page_range: String
  dat_file_load_date: timestamp
  database_name: String
  dm_comment: String
  docdates_c: String
  dtype: bpchar
  header_only: bpchar
  hsc_flag: bpchar
  hsc_proc: bpchar
  hsc_proc_date: timestamp
  incomplete: float8
  is_checked_out: bpchar
  is_hot: bpchar
  is_rework: bpchar
  last_user: String
  load_datex: timestamp
  lsn_access_cntrl: String
  lsn_relevancy_date: String
  lvload: String
  lvload_date: timestamp
  media_code: String
  media_count: float8
  modified_date: timestamp
  modified_user: String
  mts1: String
  mts2: String
  mts3: String
  mts4: String
  mts5: String
  ocr_load_date: timestamp
  ocr_load_status: bpchar
  on_irs: String
  p_acc_no: String
  pac_flag: String
  package_id: String
  pads_udi: String
  pctype: String
  pctype_date: timestamp
  priv_att: bpchar
  privacy: bpchar
  privileged: bpchar
  prop: bpchar
  qa: String
  qa_record: bpchar
  redaction_status: bpchar
  released: bpchar
  released_date: timestamp
  relevancy: bpchar
  ret_code: bpchar
  rms_chg_ctl_comments: String
  rms_comments: String
  rms_load_date: timestamp
  rms_relevancy: bpchar
  rowid: String
  seq_fpage: float8
  seq_lpage: float8
  shipping_status: bpchar
  splv: String
  splv_date: timestamp
  staged: bpchar
  staged_date: timestamp
  status_code: bpchar
  temp_update_flag_hm: bpchar
  title: String
  title_redacted: String
  volume: String
  xml_load_date: timestamp
}

"""
aggregate stddev on columns
"""
type risdata_doc_main_stddev_fields {
  VERSION: Float
  ads_fpack: Float
  ads_fpage: Float
  ads_lpack: Float
  ads_lpage: Float
  box_no: Float
  collection_id: Float
  incomplete: Float
  media_count: Float
  seq_fpage: Float
  seq_lpage: Float
}

"""
order by stddev() on columns of table "risdata.doc_main"
"""
input risdata_doc_main_stddev_order_by {
  VERSION: order_by
  ads_fpack: order_by
  ads_fpage: order_by
  ads_lpack: order_by
  ads_lpage: order_by
  box_no: order_by
  collection_id: order_by
  incomplete: order_by
  media_count: order_by
  seq_fpage: order_by
  seq_lpage: order_by
}

"""
aggregate stddev_pop on columns
"""
type risdata_doc_main_stddev_pop_fields {
  VERSION: Float
  ads_fpack: Float
  ads_fpage: Float
  ads_lpack: Float
  ads_lpage: Float
  box_no: Float
  collection_id: Float
  incomplete: Float
  media_count: Float
  seq_fpage: Float
  seq_lpage: Float
}

"""
order by stddev_pop() on columns of table "risdata.doc_main"
"""
input risdata_doc_main_stddev_pop_order_by {
  VERSION: order_by
  ads_fpack: order_by
  ads_fpage: order_by
  ads_lpack: order_by
  ads_lpage: order_by
  box_no: order_by
  collection_id: order_by
  incomplete: order_by
  media_count: order_by
  seq_fpage: order_by
  seq_lpage: order_by
}

"""
aggregate stddev_samp on columns
"""
type risdata_doc_main_stddev_samp_fields {
  VERSION: Float
  ads_fpack: Float
  ads_fpage: Float
  ads_lpack: Float
  ads_lpage: Float
  box_no: Float
  collection_id: Float
  incomplete: Float
  media_count: Float
  seq_fpage: Float
  seq_lpage: Float
}

"""
order by stddev_samp() on columns of table "risdata.doc_main"
"""
input risdata_doc_main_stddev_samp_order_by {
  VERSION: order_by
  ads_fpack: order_by
  ads_fpage: order_by
  ads_lpack: order_by
  ads_lpage: order_by
  box_no: order_by
  collection_id: order_by
  incomplete: order_by
  media_count: order_by
  seq_fpage: order_by
  seq_lpage: order_by
}

"""
aggregate sum on columns
"""
type risdata_doc_main_sum_fields {
  VERSION: float8
  ads_fpack: numeric
  ads_fpage: numeric
  ads_lpack: numeric
  ads_lpage: numeric
  box_no: float8
  collection_id: numeric
  incomplete: float8
  media_count: float8
  seq_fpage: float8
  seq_lpage: float8
}

"""
order by sum() on columns of table "risdata.doc_main"
"""
input risdata_doc_main_sum_order_by {
  VERSION: order_by
  ads_fpack: order_by
  ads_fpage: order_by
  ads_lpack: order_by
  ads_lpage: order_by
  box_no: order_by
  collection_id: order_by
  incomplete: order_by
  media_count: order_by
  seq_fpage: order_by
  seq_lpage: order_by
}

"""
update columns of table "risdata.doc_main"
"""
enum risdata_doc_main_update_column {
  """
  column name
  """
  TEXT

  """
  column name
  """
  VERSION

  """
  column name
  """
  ads_bates_fpage

  """
  column name
  """
  ads_bates_lpage

  """
  column name
  """
  ads_bates_range

  """
  column name
  """
  ads_ctrname

  """
  column name
  """
  ads_docdates

  """
  column name
  """
  ads_fpack

  """
  column name
  """
  ads_fpage

  """
  column name
  """
  ads_lpack

  """
  column name
  """
  ads_lpage

  """
  column name
  """
  ads_udi

  """
  column name
  """
  batch_no

  """
  column name
  """
  bax_file_load_date

  """
  column name
  """
  box_no

  """
  column name
  """
  challenged

  """
  column name
  """
  challenged_date

  """
  column name
  """
  collection_id

  """
  column name
  """
  collection_type

  """
  column name
  """
  container

  """
  column name
  """
  created_date

  """
  column name
  """
  created_user

  """
  column name
  """
  ctr_page_range

  """
  column name
  """
  dat_file_load_date

  """
  column name
  """
  database_name

  """
  column name
  """
  dm_comment

  """
  column name
  """
  docdates_c

  """
  column name
  """
  dtype

  """
  column name
  """
  header_only

  """
  column name
  """
  hsc_flag

  """
  column name
  """
  hsc_proc

  """
  column name
  """
  hsc_proc_date

  """
  column name
  """
  incomplete

  """
  column name
  """
  is_checked_out

  """
  column name
  """
  is_hot

  """
  column name
  """
  is_rework

  """
  column name
  """
  last_user

  """
  column name
  """
  load_datex

  """
  column name
  """
  lsn_access_cntrl

  """
  column name
  """
  lsn_relevancy_date

  """
  column name
  """
  lvload

  """
  column name
  """
  lvload_date

  """
  column name
  """
  media_code

  """
  column name
  """
  media_count

  """
  column name
  """
  modified_date

  """
  column name
  """
  modified_user

  """
  column name
  """
  mts1

  """
  column name
  """
  mts2

  """
  column name
  """
  mts3

  """
  column name
  """
  mts4

  """
  column name
  """
  mts5

  """
  column name
  """
  ocr_load_date

  """
  column name
  """
  ocr_load_status

  """
  column name
  """
  on_irs

  """
  column name
  """
  p_acc_no

  """
  column name
  """
  pac_flag

  """
  column name
  """
  package_id

  """
  column name
  """
  pads_udi

  """
  column name
  """
  pctype

  """
  column name
  """
  pctype_date

  """
  column name
  """
  priv_att

  """
  column name
  """
  privacy

  """
  column name
  """
  privileged

  """
  column name
  """
  prop

  """
  column name
  """
  qa

  """
  column name
  """
  qa_record

  """
  column name
  """
  redaction_status

  """
  column name
  """
  released

  """
  column name
  """
  released_date

  """
  column name
  """
  relevancy

  """
  column name
  """
  ret_code

  """
  column name
  """
  rms_chg_ctl_comments

  """
  column name
  """
  rms_comments

  """
  column name
  """
  rms_load_date

  """
  column name
  """
  rms_relevancy

  """
  column name
  """
  rowid

  """
  column name
  """
  seq_fpage

  """
  column name
  """
  seq_lpage

  """
  column name
  """
  shipping_status

  """
  column name
  """
  splv

  """
  column name
  """
  splv_date

  """
  column name
  """
  staged

  """
  column name
  """
  staged_date

  """
  column name
  """
  status_code

  """
  column name
  """
  temp_update_flag_hm

  """
  column name
  """
  title

  """
  column name
  """
  title_redacted

  """
  column name
  """
  volume

  """
  column name
  """
  xml_load_date
}

"""
aggregate var_pop on columns
"""
type risdata_doc_main_var_pop_fields {
  VERSION: Float
  ads_fpack: Float
  ads_fpage: Float
  ads_lpack: Float
  ads_lpage: Float
  box_no: Float
  collection_id: Float
  incomplete: Float
  media_count: Float
  seq_fpage: Float
  seq_lpage: Float
}

"""
order by var_pop() on columns of table "risdata.doc_main"
"""
input risdata_doc_main_var_pop_order_by {
  VERSION: order_by
  ads_fpack: order_by
  ads_fpage: order_by
  ads_lpack: order_by
  ads_lpage: order_by
  box_no: order_by
  collection_id: order_by
  incomplete: order_by
  media_count: order_by
  seq_fpage: order_by
  seq_lpage: order_by
}

"""
aggregate var_samp on columns
"""
type risdata_doc_main_var_samp_fields {
  VERSION: Float
  ads_fpack: Float
  ads_fpage: Float
  ads_lpack: Float
  ads_lpage: Float
  box_no: Float
  collection_id: Float
  incomplete: Float
  media_count: Float
  seq_fpage: Float
  seq_lpage: Float
}

"""
order by var_samp() on columns of table "risdata.doc_main"
"""
input risdata_doc_main_var_samp_order_by {
  VERSION: order_by
  ads_fpack: order_by
  ads_fpage: order_by
  ads_lpack: order_by
  ads_lpage: order_by
  box_no: order_by
  collection_id: order_by
  incomplete: order_by
  media_count: order_by
  seq_fpage: order_by
  seq_lpage: order_by
}

"""
aggregate variance on columns
"""
type risdata_doc_main_variance_fields {
  VERSION: Float
  ads_fpack: Float
  ads_fpage: Float
  ads_lpack: Float
  ads_lpage: Float
  box_no: Float
  collection_id: Float
  incomplete: Float
  media_count: Float
  seq_fpage: Float
  seq_lpage: Float
}

"""
order by variance() on columns of table "risdata.doc_main"
"""
input risdata_doc_main_variance_order_by {
  VERSION: order_by
  ads_fpack: order_by
  ads_fpage: order_by
  ads_lpack: order_by
  ads_lpage: order_by
  box_no: order_by
  collection_id: order_by
  incomplete: order_by
  media_count: order_by
  seq_fpage: order_by
  seq_lpage: order_by
}

"""
columns and relationships of "risdata.doc_names"
"""
type risdata_doc_names {
  ads_udi: String
  created_date: timestamp
  created_user: String
  flag: bpchar
  modified_date: timestamp
  modified_user: String
  name: String
  name_id: numeric
  name_type: String
  org_id: numeric
  organization: String
  type: String
}

"""
aggregated selection of "risdata.doc_names"
"""
type risdata_doc_names_aggregate {
  aggregate: risdata_doc_names_aggregate_fields
  nodes: [risdata_doc_names!]!
}

"""
aggregate fields of "risdata.doc_names"
"""
type risdata_doc_names_aggregate_fields {
  avg: risdata_doc_names_avg_fields
  count(columns: [risdata_doc_names_select_column!], distinct: Boolean): Int
  max: risdata_doc_names_max_fields
  min: risdata_doc_names_min_fields
  stddev: risdata_doc_names_stddev_fields
  stddev_pop: risdata_doc_names_stddev_pop_fields
  stddev_samp: risdata_doc_names_stddev_samp_fields
  sum: risdata_doc_names_sum_fields
  var_pop: risdata_doc_names_var_pop_fields
  var_samp: risdata_doc_names_var_samp_fields
  variance: risdata_doc_names_variance_fields
}

"""
order by aggregate values of table "risdata.doc_names"
"""
input risdata_doc_names_aggregate_order_by {
  avg: risdata_doc_names_avg_order_by
  count: order_by
  max: risdata_doc_names_max_order_by
  min: risdata_doc_names_min_order_by
  stddev: risdata_doc_names_stddev_order_by
  stddev_pop: risdata_doc_names_stddev_pop_order_by
  stddev_samp: risdata_doc_names_stddev_samp_order_by
  sum: risdata_doc_names_sum_order_by
  var_pop: risdata_doc_names_var_pop_order_by
  var_samp: risdata_doc_names_var_samp_order_by
  variance: risdata_doc_names_variance_order_by
}

"""
aggregate avg on columns
"""
type risdata_doc_names_avg_fields {
  name_id: Float
  org_id: Float
}

"""
order by avg() on columns of table "risdata.doc_names"
"""
input risdata_doc_names_avg_order_by {
  name_id: order_by
  org_id: order_by
}

"""
Boolean expression to filter rows from the table "risdata.doc_names". All fields are combined with a logical 'AND'.
"""
input risdata_doc_names_bool_exp {
  _and: [risdata_doc_names_bool_exp]
  _not: risdata_doc_names_bool_exp
  _or: [risdata_doc_names_bool_exp]
  ads_udi: String_comparison_exp
  created_date: timestamp_comparison_exp
  created_user: String_comparison_exp
  flag: bpchar_comparison_exp
  modified_date: timestamp_comparison_exp
  modified_user: String_comparison_exp
  name: String_comparison_exp
  name_id: numeric_comparison_exp
  name_type: String_comparison_exp
  org_id: numeric_comparison_exp
  organization: String_comparison_exp
  type: String_comparison_exp
}

"""
aggregate max on columns
"""
type risdata_doc_names_max_fields {
  ads_udi: String
  created_date: timestamp
  created_user: String
  modified_date: timestamp
  modified_user: String
  name: String
  name_id: numeric
  name_type: String
  org_id: numeric
  organization: String
  type: String
}

"""
order by max() on columns of table "risdata.doc_names"
"""
input risdata_doc_names_max_order_by {
  ads_udi: order_by
  created_date: order_by
  created_user: order_by
  modified_date: order_by
  modified_user: order_by
  name: order_by
  name_id: order_by
  name_type: order_by
  org_id: order_by
  organization: order_by
  type: order_by
}

"""
aggregate min on columns
"""
type risdata_doc_names_min_fields {
  ads_udi: String
  created_date: timestamp
  created_user: String
  modified_date: timestamp
  modified_user: String
  name: String
  name_id: numeric
  name_type: String
  org_id: numeric
  organization: String
  type: String
}

"""
order by min() on columns of table "risdata.doc_names"
"""
input risdata_doc_names_min_order_by {
  ads_udi: order_by
  created_date: order_by
  created_user: order_by
  modified_date: order_by
  modified_user: order_by
  name: order_by
  name_id: order_by
  name_type: order_by
  org_id: order_by
  organization: order_by
  type: order_by
}

"""
ordering options when selecting data from "risdata.doc_names"
"""
input risdata_doc_names_order_by {
  ads_udi: order_by
  created_date: order_by
  created_user: order_by
  flag: order_by
  modified_date: order_by
  modified_user: order_by
  name: order_by
  name_id: order_by
  name_type: order_by
  org_id: order_by
  organization: order_by
  type: order_by
}

"""
select columns of table "risdata.doc_names"
"""
enum risdata_doc_names_select_column {
  """
  column name
  """
  ads_udi

  """
  column name
  """
  created_date

  """
  column name
  """
  created_user

  """
  column name
  """
  flag

  """
  column name
  """
  modified_date

  """
  column name
  """
  modified_user

  """
  column name
  """
  name

  """
  column name
  """
  name_id

  """
  column name
  """
  name_type

  """
  column name
  """
  org_id

  """
  column name
  """
  organization

  """
  column name
  """
  type
}

"""
aggregate stddev on columns
"""
type risdata_doc_names_stddev_fields {
  name_id: Float
  org_id: Float
}

"""
order by stddev() on columns of table "risdata.doc_names"
"""
input risdata_doc_names_stddev_order_by {
  name_id: order_by
  org_id: order_by
}

"""
aggregate stddev_pop on columns
"""
type risdata_doc_names_stddev_pop_fields {
  name_id: Float
  org_id: Float
}

"""
order by stddev_pop() on columns of table "risdata.doc_names"
"""
input risdata_doc_names_stddev_pop_order_by {
  name_id: order_by
  org_id: order_by
}

"""
aggregate stddev_samp on columns
"""
type risdata_doc_names_stddev_samp_fields {
  name_id: Float
  org_id: Float
}

"""
order by stddev_samp() on columns of table "risdata.doc_names"
"""
input risdata_doc_names_stddev_samp_order_by {
  name_id: order_by
  org_id: order_by
}

"""
aggregate sum on columns
"""
type risdata_doc_names_sum_fields {
  name_id: numeric
  org_id: numeric
}

"""
order by sum() on columns of table "risdata.doc_names"
"""
input risdata_doc_names_sum_order_by {
  name_id: order_by
  org_id: order_by
}

"""
aggregate var_pop on columns
"""
type risdata_doc_names_var_pop_fields {
  name_id: Float
  org_id: Float
}

"""
order by var_pop() on columns of table "risdata.doc_names"
"""
input risdata_doc_names_var_pop_order_by {
  name_id: order_by
  org_id: order_by
}

"""
aggregate var_samp on columns
"""
type risdata_doc_names_var_samp_fields {
  name_id: Float
  org_id: Float
}

"""
order by var_samp() on columns of table "risdata.doc_names"
"""
input risdata_doc_names_var_samp_order_by {
  name_id: order_by
  org_id: order_by
}

"""
aggregate variance on columns
"""
type risdata_doc_names_variance_fields {
  name_id: Float
  org_id: Float
}

"""
order by variance() on columns of table "risdata.doc_names"
"""
input risdata_doc_names_variance_order_by {
  name_id: order_by
  org_id: order_by
}

"""
columns and relationships of "risdata.doe_related_rec"
"""
type risdata_doe_related_rec {
  ads_udi: String!
  created_date: timestamp
  created_user: String
  modified_date: timestamp
  modified_user: String
  rel_ads_udi: String!
  rel_rec_code: String!
  rowid: String!
}

"""
aggregated selection of "risdata.doe_related_rec"
"""
type risdata_doe_related_rec_aggregate {
  aggregate: risdata_doe_related_rec_aggregate_fields
  nodes: [risdata_doe_related_rec!]!
}

"""
aggregate fields of "risdata.doe_related_rec"
"""
type risdata_doe_related_rec_aggregate_fields {
  count(columns: [risdata_doe_related_rec_select_column!], distinct: Boolean): Int
  max: risdata_doe_related_rec_max_fields
  min: risdata_doe_related_rec_min_fields
}

"""
order by aggregate values of table "risdata.doe_related_rec"
"""
input risdata_doe_related_rec_aggregate_order_by {
  count: order_by
  max: risdata_doe_related_rec_max_order_by
  min: risdata_doe_related_rec_min_order_by
}

"""
input type for inserting array relation for remote table "risdata.doe_related_rec"
"""
input risdata_doe_related_rec_arr_rel_insert_input {
  data: [risdata_doe_related_rec_insert_input!]!
  on_conflict: risdata_doe_related_rec_on_conflict
}

"""
Boolean expression to filter rows from the table "risdata.doe_related_rec". All fields are combined with a logical 'AND'.
"""
input risdata_doe_related_rec_bool_exp {
  _and: [risdata_doe_related_rec_bool_exp]
  _not: risdata_doe_related_rec_bool_exp
  _or: [risdata_doe_related_rec_bool_exp]
  ads_udi: String_comparison_exp
  created_date: timestamp_comparison_exp
  created_user: String_comparison_exp
  modified_date: timestamp_comparison_exp
  modified_user: String_comparison_exp
  rel_ads_udi: String_comparison_exp
  rel_rec_code: String_comparison_exp
  rowid: String_comparison_exp
}

"""
unique or primary key constraints on table "risdata.doe_related_rec"
"""
enum risdata_doe_related_rec_constraint {
  """
  unique or primary key constraint
  """
  doe_related_rec_comb1

  """
  unique or primary key constraint
  """
  doe_related_rec_pkey
}

"""
input type for inserting data into table "risdata.doe_related_rec"
"""
input risdata_doe_related_rec_insert_input {
  ads_udi: String
  created_date: timestamp
  created_user: String
  modified_date: timestamp
  modified_user: String
  rel_ads_udi: String
  rel_rec_code: String
  rowid: String
}

"""
aggregate max on columns
"""
type risdata_doe_related_rec_max_fields {
  ads_udi: String
  created_date: timestamp
  created_user: String
  modified_date: timestamp
  modified_user: String
  rel_ads_udi: String
  rel_rec_code: String
  rowid: String
}

"""
order by max() on columns of table "risdata.doe_related_rec"
"""
input risdata_doe_related_rec_max_order_by {
  ads_udi: order_by
  created_date: order_by
  created_user: order_by
  modified_date: order_by
  modified_user: order_by
  rel_ads_udi: order_by
  rel_rec_code: order_by
  rowid: order_by
}

"""
aggregate min on columns
"""
type risdata_doe_related_rec_min_fields {
  ads_udi: String
  created_date: timestamp
  created_user: String
  modified_date: timestamp
  modified_user: String
  rel_ads_udi: String
  rel_rec_code: String
  rowid: String
}

"""
order by min() on columns of table "risdata.doe_related_rec"
"""
input risdata_doe_related_rec_min_order_by {
  ads_udi: order_by
  created_date: order_by
  created_user: order_by
  modified_date: order_by
  modified_user: order_by
  rel_ads_udi: order_by
  rel_rec_code: order_by
  rowid: order_by
}

"""
response of any mutation on the table "risdata.doe_related_rec"
"""
type risdata_doe_related_rec_mutation_response {
  """
  number of affected rows by the mutation
  """
  affected_rows: Int!

  """
  data of the affected rows by the mutation
  """
  returning: [risdata_doe_related_rec!]!
}

"""
input type for inserting object relation for remote table "risdata.doe_related_rec"
"""
input risdata_doe_related_rec_obj_rel_insert_input {
  data: risdata_doe_related_rec_insert_input!
  on_conflict: risdata_doe_related_rec_on_conflict
}

"""
on conflict condition type for table "risdata.doe_related_rec"
"""
input risdata_doe_related_rec_on_conflict {
  constraint: risdata_doe_related_rec_constraint!
  update_columns: [risdata_doe_related_rec_update_column!]!
  where: risdata_doe_related_rec_bool_exp
}

"""
ordering options when selecting data from "risdata.doe_related_rec"
"""
input risdata_doe_related_rec_order_by {
  ads_udi: order_by
  created_date: order_by
  created_user: order_by
  modified_date: order_by
  modified_user: order_by
  rel_ads_udi: order_by
  rel_rec_code: order_by
  rowid: order_by
}

"""
primary key columns input for table: "risdata.doe_related_rec"
"""
input risdata_doe_related_rec_pk_columns_input {
  ads_udi: String!
  rel_ads_udi: String!
  rel_rec_code: String!
}

"""
select columns of table "risdata.doe_related_rec"
"""
enum risdata_doe_related_rec_select_column {
  """
  column name
  """
  ads_udi

  """
  column name
  """
  created_date

  """
  column name
  """
  created_user

  """
  column name
  """
  modified_date

  """
  column name
  """
  modified_user

  """
  column name
  """
  rel_ads_udi

  """
  column name
  """
  rel_rec_code

  """
  column name
  """
  rowid
}

"""
input type for updating data in table "risdata.doe_related_rec"
"""
input risdata_doe_related_rec_set_input {
  ads_udi: String
  created_date: timestamp
  created_user: String
  modified_date: timestamp
  modified_user: String
  rel_ads_udi: String
  rel_rec_code: String
  rowid: String
}

"""
update columns of table "risdata.doe_related_rec"
"""
enum risdata_doe_related_rec_update_column {
  """
  column name
  """
  ads_udi

  """
  column name
  """
  created_date

  """
  column name
  """
  created_user

  """
  column name
  """
  modified_date

  """
  column name
  """
  modified_user

  """
  column name
  """
  rel_ads_udi

  """
  column name
  """
  rel_rec_code

  """
  column name
  """
  rowid
}

"""
columns and relationships of "risdata.ocr"
"""
type risdata_ocr {
  TEXT: String
  ads_firstbyte: float8
  ads_page: numeric!
  ads_udi: String!
  created_date: timestamp
  created_user: String
  highlite_fixed: String
  insert_date: timestamp
  modified_date: timestamp
  modified_user: String
  modulo: float8
  page_size: float8
  rowid: String!
  updated: float8
}

"""
aggregated selection of "risdata.ocr"
"""
type risdata_ocr_aggregate {
  aggregate: risdata_ocr_aggregate_fields
  nodes: [risdata_ocr!]!
}

"""
aggregate fields of "risdata.ocr"
"""
type risdata_ocr_aggregate_fields {
  avg: risdata_ocr_avg_fields
  count(columns: [risdata_ocr_select_column!], distinct: Boolean): Int
  max: risdata_ocr_max_fields
  min: risdata_ocr_min_fields
  stddev: risdata_ocr_stddev_fields
  stddev_pop: risdata_ocr_stddev_pop_fields
  stddev_samp: risdata_ocr_stddev_samp_fields
  sum: risdata_ocr_sum_fields
  var_pop: risdata_ocr_var_pop_fields
  var_samp: risdata_ocr_var_samp_fields
  variance: risdata_ocr_variance_fields
}

"""
order by aggregate values of table "risdata.ocr"
"""
input risdata_ocr_aggregate_order_by {
  avg: risdata_ocr_avg_order_by
  count: order_by
  max: risdata_ocr_max_order_by
  min: risdata_ocr_min_order_by
  stddev: risdata_ocr_stddev_order_by
  stddev_pop: risdata_ocr_stddev_pop_order_by
  stddev_samp: risdata_ocr_stddev_samp_order_by
  sum: risdata_ocr_sum_order_by
  var_pop: risdata_ocr_var_pop_order_by
  var_samp: risdata_ocr_var_samp_order_by
  variance: risdata_ocr_variance_order_by
}

"""
input type for inserting array relation for remote table "risdata.ocr"
"""
input risdata_ocr_arr_rel_insert_input {
  data: [risdata_ocr_insert_input!]!
  on_conflict: risdata_ocr_on_conflict
}

"""
aggregate avg on columns
"""
type risdata_ocr_avg_fields {
  ads_firstbyte: Float
  ads_page: Float
  modulo: Float
  page_size: Float
  updated: Float
}

"""
order by avg() on columns of table "risdata.ocr"
"""
input risdata_ocr_avg_order_by {
  ads_firstbyte: order_by
  ads_page: order_by
  modulo: order_by
  page_size: order_by
  updated: order_by
}

"""
Boolean expression to filter rows from the table "risdata.ocr". All fields are combined with a logical 'AND'.
"""
input risdata_ocr_bool_exp {
  TEXT: String_comparison_exp
  _and: [risdata_ocr_bool_exp]
  _not: risdata_ocr_bool_exp
  _or: [risdata_ocr_bool_exp]
  ads_firstbyte: float8_comparison_exp
  ads_page: numeric_comparison_exp
  ads_udi: String_comparison_exp
  created_date: timestamp_comparison_exp
  created_user: String_comparison_exp
  highlite_fixed: String_comparison_exp
  insert_date: timestamp_comparison_exp
  modified_date: timestamp_comparison_exp
  modified_user: String_comparison_exp
  modulo: float8_comparison_exp
  page_size: float8_comparison_exp
  rowid: String_comparison_exp
  updated: float8_comparison_exp
}

"""
unique or primary key constraints on table "risdata.ocr"
"""
enum risdata_ocr_constraint {
  """
  unique or primary key constraint
  """
  ocr_pkey
}

"""
input type for incrementing integer column in table "risdata.ocr"
"""
input risdata_ocr_inc_input {
  ads_firstbyte: float8
  ads_page: numeric
  modulo: float8
  page_size: float8
  updated: float8
}

"""
input type for inserting data into table "risdata.ocr"
"""
input risdata_ocr_insert_input {
  TEXT: String
  ads_firstbyte: float8
  ads_page: numeric
  ads_udi: String
  created_date: timestamp
  created_user: String
  highlite_fixed: String
  insert_date: timestamp
  modified_date: timestamp
  modified_user: String
  modulo: float8
  page_size: float8
  rowid: String
  updated: float8
}

"""
aggregate max on columns
"""
type risdata_ocr_max_fields {
  TEXT: String
  ads_firstbyte: float8
  ads_page: numeric
  ads_udi: String
  created_date: timestamp
  created_user: String
  highlite_fixed: String
  insert_date: timestamp
  modified_date: timestamp
  modified_user: String
  modulo: float8
  page_size: float8
  rowid: String
  updated: float8
}

"""
order by max() on columns of table "risdata.ocr"
"""
input risdata_ocr_max_order_by {
  TEXT: order_by
  ads_firstbyte: order_by
  ads_page: order_by
  ads_udi: order_by
  created_date: order_by
  created_user: order_by
  highlite_fixed: order_by
  insert_date: order_by
  modified_date: order_by
  modified_user: order_by
  modulo: order_by
  page_size: order_by
  rowid: order_by
  updated: order_by
}

"""
aggregate min on columns
"""
type risdata_ocr_min_fields {
  TEXT: String
  ads_firstbyte: float8
  ads_page: numeric
  ads_udi: String
  created_date: timestamp
  created_user: String
  highlite_fixed: String
  insert_date: timestamp
  modified_date: timestamp
  modified_user: String
  modulo: float8
  page_size: float8
  rowid: String
  updated: float8
}

"""
order by min() on columns of table "risdata.ocr"
"""
input risdata_ocr_min_order_by {
  TEXT: order_by
  ads_firstbyte: order_by
  ads_page: order_by
  ads_udi: order_by
  created_date: order_by
  created_user: order_by
  highlite_fixed: order_by
  insert_date: order_by
  modified_date: order_by
  modified_user: order_by
  modulo: order_by
  page_size: order_by
  rowid: order_by
  updated: order_by
}

"""
response of any mutation on the table "risdata.ocr"
"""
type risdata_ocr_mutation_response {
  """
  number of affected rows by the mutation
  """
  affected_rows: Int!

  """
  data of the affected rows by the mutation
  """
  returning: [risdata_ocr!]!
}

"""
input type for inserting object relation for remote table "risdata.ocr"
"""
input risdata_ocr_obj_rel_insert_input {
  data: risdata_ocr_insert_input!
  on_conflict: risdata_ocr_on_conflict
}

"""
on conflict condition type for table "risdata.ocr"
"""
input risdata_ocr_on_conflict {
  constraint: risdata_ocr_constraint!
  update_columns: [risdata_ocr_update_column!]!
  where: risdata_ocr_bool_exp
}

"""
ordering options when selecting data from "risdata.ocr"
"""
input risdata_ocr_order_by {
  TEXT: order_by
  ads_firstbyte: order_by
  ads_page: order_by
  ads_udi: order_by
  created_date: order_by
  created_user: order_by
  highlite_fixed: order_by
  insert_date: order_by
  modified_date: order_by
  modified_user: order_by
  modulo: order_by
  page_size: order_by
  rowid: order_by
  updated: order_by
}

"""
primary key columns input for table: "risdata.ocr"
"""
input risdata_ocr_pk_columns_input {
  ads_page: numeric!
  ads_udi: String!
}

"""
select columns of table "risdata.ocr"
"""
enum risdata_ocr_select_column {
  """
  column name
  """
  TEXT

  """
  column name
  """
  ads_firstbyte

  """
  column name
  """
  ads_page

  """
  column name
  """
  ads_udi

  """
  column name
  """
  created_date

  """
  column name
  """
  created_user

  """
  column name
  """
  highlite_fixed

  """
  column name
  """
  insert_date

  """
  column name
  """
  modified_date

  """
  column name
  """
  modified_user

  """
  column name
  """
  modulo

  """
  column name
  """
  page_size

  """
  column name
  """
  rowid

  """
  column name
  """
  updated
}

"""
input type for updating data in table "risdata.ocr"
"""
input risdata_ocr_set_input {
  TEXT: String
  ads_firstbyte: float8
  ads_page: numeric
  ads_udi: String
  created_date: timestamp
  created_user: String
  highlite_fixed: String
  insert_date: timestamp
  modified_date: timestamp
  modified_user: String
  modulo: float8
  page_size: float8
  rowid: String
  updated: float8
}

"""
aggregate stddev on columns
"""
type risdata_ocr_stddev_fields {
  ads_firstbyte: Float
  ads_page: Float
  modulo: Float
  page_size: Float
  updated: Float
}

"""
order by stddev() on columns of table "risdata.ocr"
"""
input risdata_ocr_stddev_order_by {
  ads_firstbyte: order_by
  ads_page: order_by
  modulo: order_by
  page_size: order_by
  updated: order_by
}

"""
aggregate stddev_pop on columns
"""
type risdata_ocr_stddev_pop_fields {
  ads_firstbyte: Float
  ads_page: Float
  modulo: Float
  page_size: Float
  updated: Float
}

"""
order by stddev_pop() on columns of table "risdata.ocr"
"""
input risdata_ocr_stddev_pop_order_by {
  ads_firstbyte: order_by
  ads_page: order_by
  modulo: order_by
  page_size: order_by
  updated: order_by
}

"""
aggregate stddev_samp on columns
"""
type risdata_ocr_stddev_samp_fields {
  ads_firstbyte: Float
  ads_page: Float
  modulo: Float
  page_size: Float
  updated: Float
}

"""
order by stddev_samp() on columns of table "risdata.ocr"
"""
input risdata_ocr_stddev_samp_order_by {
  ads_firstbyte: order_by
  ads_page: order_by
  modulo: order_by
  page_size: order_by
  updated: order_by
}

"""
aggregate sum on columns
"""
type risdata_ocr_sum_fields {
  ads_firstbyte: float8
  ads_page: numeric
  modulo: float8
  page_size: float8
  updated: float8
}

"""
order by sum() on columns of table "risdata.ocr"
"""
input risdata_ocr_sum_order_by {
  ads_firstbyte: order_by
  ads_page: order_by
  modulo: order_by
  page_size: order_by
  updated: order_by
}

"""
update columns of table "risdata.ocr"
"""
enum risdata_ocr_update_column {
  """
  column name
  """
  TEXT

  """
  column name
  """
  ads_firstbyte

  """
  column name
  """
  ads_page

  """
  column name
  """
  ads_udi

  """
  column name
  """
  created_date

  """
  column name
  """
  created_user

  """
  column name
  """
  highlite_fixed

  """
  column name
  """
  insert_date

  """
  column name
  """
  modified_date

  """
  column name
  """
  modified_user

  """
  column name
  """
  modulo

  """
  column name
  """
  page_size

  """
  column name
  """
  rowid

  """
  column name
  """
  updated
}

"""
aggregate var_pop on columns
"""
type risdata_ocr_var_pop_fields {
  ads_firstbyte: Float
  ads_page: Float
  modulo: Float
  page_size: Float
  updated: Float
}

"""
order by var_pop() on columns of table "risdata.ocr"
"""
input risdata_ocr_var_pop_order_by {
  ads_firstbyte: order_by
  ads_page: order_by
  modulo: order_by
  page_size: order_by
  updated: order_by
}

"""
aggregate var_samp on columns
"""
type risdata_ocr_var_samp_fields {
  ads_firstbyte: Float
  ads_page: Float
  modulo: Float
  page_size: Float
  updated: Float
}

"""
order by var_samp() on columns of table "risdata.ocr"
"""
input risdata_ocr_var_samp_order_by {
  ads_firstbyte: order_by
  ads_page: order_by
  modulo: order_by
  page_size: order_by
  updated: order_by
}

"""
aggregate variance on columns
"""
type risdata_ocr_variance_fields {
  ads_firstbyte: Float
  ads_page: Float
  modulo: Float
  page_size: Float
  updated: Float
}

"""
order by variance() on columns of table "risdata.ocr"
"""
input risdata_ocr_variance_order_by {
  ads_firstbyte: order_by
  ads_page: order_by
  modulo: order_by
  page_size: order_by
  updated: order_by
}

"""
columns and relationships of "risdata.type"
"""
type risdata_type {
  ads_udi: String!
  created_date: timestamp
  created_user: String
  doc_type: String!
  modified_date: timestamp
  modified_user: String
  rowid: String!
}

"""
aggregated selection of "risdata.type"
"""
type risdata_type_aggregate {
  aggregate: risdata_type_aggregate_fields
  nodes: [risdata_type!]!
}

"""
aggregate fields of "risdata.type"
"""
type risdata_type_aggregate_fields {
  count(columns: [risdata_type_select_column!], distinct: Boolean): Int
  max: risdata_type_max_fields
  min: risdata_type_min_fields
}

"""
order by aggregate values of table "risdata.type"
"""
input risdata_type_aggregate_order_by {
  count: order_by
  max: risdata_type_max_order_by
  min: risdata_type_min_order_by
}

"""
input type for inserting array relation for remote table "risdata.type"
"""
input risdata_type_arr_rel_insert_input {
  data: [risdata_type_insert_input!]!
  on_conflict: risdata_type_on_conflict
}

"""
Boolean expression to filter rows from the table "risdata.type". All fields are combined with a logical 'AND'.
"""
input risdata_type_bool_exp {
  _and: [risdata_type_bool_exp]
  _not: risdata_type_bool_exp
  _or: [risdata_type_bool_exp]
  ads_udi: String_comparison_exp
  created_date: timestamp_comparison_exp
  created_user: String_comparison_exp
  doc_type: String_comparison_exp
  modified_date: timestamp_comparison_exp
  modified_user: String_comparison_exp
  rowid: String_comparison_exp
}

"""
unique or primary key constraints on table "risdata.type"
"""
enum risdata_type_constraint {
  """
  unique or primary key constraint
  """
  type_pkey
}

"""
input type for inserting data into table "risdata.type"
"""
input risdata_type_insert_input {
  ads_udi: String
  created_date: timestamp
  created_user: String
  doc_type: String
  modified_date: timestamp
  modified_user: String
  rowid: String
}

"""
columns and relationships of "risdata.type_lookup"
"""
type risdata_type_lookup {
  created_date: timestamp
  created_user: String
  doc_type: String!
  doc_type_lookup: String!
  modified_date: timestamp
  modified_user: String
  rowid: String!
}

"""
aggregated selection of "risdata.type_lookup"
"""
type risdata_type_lookup_aggregate {
  aggregate: risdata_type_lookup_aggregate_fields
  nodes: [risdata_type_lookup!]!
}

"""
aggregate fields of "risdata.type_lookup"
"""
type risdata_type_lookup_aggregate_fields {
  count(columns: [risdata_type_lookup_select_column!], distinct: Boolean): Int
  max: risdata_type_lookup_max_fields
  min: risdata_type_lookup_min_fields
}

"""
order by aggregate values of table "risdata.type_lookup"
"""
input risdata_type_lookup_aggregate_order_by {
  count: order_by
  max: risdata_type_lookup_max_order_by
  min: risdata_type_lookup_min_order_by
}

"""
input type for inserting array relation for remote table "risdata.type_lookup"
"""
input risdata_type_lookup_arr_rel_insert_input {
  data: [risdata_type_lookup_insert_input!]!
  on_conflict: risdata_type_lookup_on_conflict
}

"""
Boolean expression to filter rows from the table "risdata.type_lookup". All fields are combined with a logical 'AND'.
"""
input risdata_type_lookup_bool_exp {
  _and: [risdata_type_lookup_bool_exp]
  _not: risdata_type_lookup_bool_exp
  _or: [risdata_type_lookup_bool_exp]
  created_date: timestamp_comparison_exp
  created_user: String_comparison_exp
  doc_type: String_comparison_exp
  doc_type_lookup: String_comparison_exp
  modified_date: timestamp_comparison_exp
  modified_user: String_comparison_exp
  rowid: String_comparison_exp
}

"""
unique or primary key constraints on table "risdata.type_lookup"
"""
enum risdata_type_lookup_constraint {
  """
  unique or primary key constraint
  """
  type_lookup_pkey

  """
  unique or primary key constraint
  """
  type_lookup_type_lk_unq
}

"""
input type for inserting data into table "risdata.type_lookup"
"""
input risdata_type_lookup_insert_input {
  created_date: timestamp
  created_user: String
  doc_type: String
  doc_type_lookup: String
  modified_date: timestamp
  modified_user: String
  rowid: String
}

"""
aggregate max on columns
"""
type risdata_type_lookup_max_fields {
  created_date: timestamp
  created_user: String
  doc_type: String
  doc_type_lookup: String
  modified_date: timestamp
  modified_user: String
  rowid: String
}

"""
order by max() on columns of table "risdata.type_lookup"
"""
input risdata_type_lookup_max_order_by {
  created_date: order_by
  created_user: order_by
  doc_type: order_by
  doc_type_lookup: order_by
  modified_date: order_by
  modified_user: order_by
  rowid: order_by
}

"""
aggregate min on columns
"""
type risdata_type_lookup_min_fields {
  created_date: timestamp
  created_user: String
  doc_type: String
  doc_type_lookup: String
  modified_date: timestamp
  modified_user: String
  rowid: String
}

"""
order by min() on columns of table "risdata.type_lookup"
"""
input risdata_type_lookup_min_order_by {
  created_date: order_by
  created_user: order_by
  doc_type: order_by
  doc_type_lookup: order_by
  modified_date: order_by
  modified_user: order_by
  rowid: order_by
}

"""
response of any mutation on the table "risdata.type_lookup"
"""
type risdata_type_lookup_mutation_response {
  """
  number of affected rows by the mutation
  """
  affected_rows: Int!

  """
  data of the affected rows by the mutation
  """
  returning: [risdata_type_lookup!]!
}

"""
input type for inserting object relation for remote table "risdata.type_lookup"
"""
input risdata_type_lookup_obj_rel_insert_input {
  data: risdata_type_lookup_insert_input!
  on_conflict: risdata_type_lookup_on_conflict
}

"""
on conflict condition type for table "risdata.type_lookup"
"""
input risdata_type_lookup_on_conflict {
  constraint: risdata_type_lookup_constraint!
  update_columns: [risdata_type_lookup_update_column!]!
  where: risdata_type_lookup_bool_exp
}

"""
ordering options when selecting data from "risdata.type_lookup"
"""
input risdata_type_lookup_order_by {
  created_date: order_by
  created_user: order_by
  doc_type: order_by
  doc_type_lookup: order_by
  modified_date: order_by
  modified_user: order_by
  rowid: order_by
}

"""
primary key columns input for table: "risdata.type_lookup"
"""
input risdata_type_lookup_pk_columns_input {
  doc_type: String!
}

"""
select columns of table "risdata.type_lookup"
"""
enum risdata_type_lookup_select_column {
  """
  column name
  """
  created_date

  """
  column name
  """
  created_user

  """
  column name
  """
  doc_type

  """
  column name
  """
  doc_type_lookup

  """
  column name
  """
  modified_date

  """
  column name
  """
  modified_user

  """
  column name
  """
  rowid
}

"""
input type for updating data in table "risdata.type_lookup"
"""
input risdata_type_lookup_set_input {
  created_date: timestamp
  created_user: String
  doc_type: String
  doc_type_lookup: String
  modified_date: timestamp
  modified_user: String
  rowid: String
}

"""
update columns of table "risdata.type_lookup"
"""
enum risdata_type_lookup_update_column {
  """
  column name
  """
  created_date

  """
  column name
  """
  created_user

  """
  column name
  """
  doc_type

  """
  column name
  """
  doc_type_lookup

  """
  column name
  """
  modified_date

  """
  column name
  """
  modified_user

  """
  column name
  """
  rowid
}

"""
aggregate max on columns
"""
type risdata_type_max_fields {
  ads_udi: String
  created_date: timestamp
  created_user: String
  doc_type: String
  modified_date: timestamp
  modified_user: String
  rowid: String
}

"""
order by max() on columns of table "risdata.type"
"""
input risdata_type_max_order_by {
  ads_udi: order_by
  created_date: order_by
  created_user: order_by
  doc_type: order_by
  modified_date: order_by
  modified_user: order_by
  rowid: order_by
}

"""
aggregate min on columns
"""
type risdata_type_min_fields {
  ads_udi: String
  created_date: timestamp
  created_user: String
  doc_type: String
  modified_date: timestamp
  modified_user: String
  rowid: String
}

"""
order by min() on columns of table "risdata.type"
"""
input risdata_type_min_order_by {
  ads_udi: order_by
  created_date: order_by
  created_user: order_by
  doc_type: order_by
  modified_date: order_by
  modified_user: order_by
  rowid: order_by
}

"""
response of any mutation on the table "risdata.type"
"""
type risdata_type_mutation_response {
  """
  number of affected rows by the mutation
  """
  affected_rows: Int!

  """
  data of the affected rows by the mutation
  """
  returning: [risdata_type!]!
}

"""
input type for inserting object relation for remote table "risdata.type"
"""
input risdata_type_obj_rel_insert_input {
  data: risdata_type_insert_input!
  on_conflict: risdata_type_on_conflict
}

"""
on conflict condition type for table "risdata.type"
"""
input risdata_type_on_conflict {
  constraint: risdata_type_constraint!
  update_columns: [risdata_type_update_column!]!
  where: risdata_type_bool_exp
}

"""
ordering options when selecting data from "risdata.type"
"""
input risdata_type_order_by {
  ads_udi: order_by
  created_date: order_by
  created_user: order_by
  doc_type: order_by
  modified_date: order_by
  modified_user: order_by
  rowid: order_by
}

"""
primary key columns input for table: "risdata.type"
"""
input risdata_type_pk_columns_input {
  ads_udi: String!
  doc_type: String!
}

"""
select columns of table "risdata.type"
"""
enum risdata_type_select_column {
  """
  column name
  """
  ads_udi

  """
  column name
  """
  created_date

  """
  column name
  """
  created_user

  """
  column name
  """
  doc_type

  """
  column name
  """
  modified_date

  """
  column name
  """
  modified_user

  """
  column name
  """
  rowid
}

"""
input type for updating data in table "risdata.type"
"""
input risdata_type_set_input {
  ads_udi: String
  created_date: timestamp
  created_user: String
  doc_type: String
  modified_date: timestamp
  modified_user: String
  rowid: String
}

"""
update columns of table "risdata.type"
"""
enum risdata_type_update_column {
  """
  column name
  """
  ads_udi

  """
  column name
  """
  created_date

  """
  column name
  """
  created_user

  """
  column name
  """
  doc_type

  """
  column name
  """
  modified_date

  """
  column name
  """
  modified_user

  """
  column name
  """
  rowid
}

"""
expression to compare columns of type String. All fields are combined with logical 'AND'.
"""
input String_comparison_exp {
  _eq: String
  _gt: String
  _gte: String
  _ilike: String
  _in: [String!]
  _is_null: Boolean
  _like: String
  _lt: String
  _lte: String
  _neq: String
  _nilike: String
  _nin: [String!]
  _nlike: String
  _nsimilar: String
  _similar: String
}

"""
subscription root
"""
type subscription_root {
  """
  fetch data from the table: "efiles.contain"
  """
  efiles_contain(
    """
    distinct select on columns
    """
    distinct_on: [efiles_contain_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [efiles_contain_order_by!]

    """
    filter the rows returned
    """
    where: efiles_contain_bool_exp
  ): [efiles_contain!]!

  """
  fetch aggregated fields from the table: "efiles.contain"
  """
  efiles_contain_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [efiles_contain_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [efiles_contain_order_by!]

    """
    filter the rows returned
    """
    where: efiles_contain_bool_exp
  ): efiles_contain_aggregate!

  """
  fetch data from the table: "efiles.contain" using primary key columns
  """
  efiles_contain_by_pk(containerid: String!): efiles_contain

  """
  fetch data from the table: "efiles.doc_main"
  """
  efiles_doc_main(
    """
    distinct select on columns
    """
    distinct_on: [efiles_doc_main_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [efiles_doc_main_order_by!]

    """
    filter the rows returned
    """
    where: efiles_doc_main_bool_exp
  ): [efiles_doc_main!]!

  """
  fetch aggregated fields from the table: "efiles.doc_main"
  """
  efiles_doc_main_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [efiles_doc_main_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [efiles_doc_main_order_by!]

    """
    filter the rows returned
    """
    where: efiles_doc_main_bool_exp
  ): efiles_doc_main_aggregate!

  """
  fetch data from the table: "efiles.doc_main" using primary key columns
  """
  efiles_doc_main_by_pk(ads_udi: String!): efiles_doc_main

  """
  fetch data from the table: "efiles.doc_names"
  """
  efiles_doc_names(
    """
    distinct select on columns
    """
    distinct_on: [efiles_doc_names_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [efiles_doc_names_order_by!]

    """
    filter the rows returned
    """
    where: efiles_doc_names_bool_exp
  ): [efiles_doc_names!]!

  """
  fetch aggregated fields from the table: "efiles.doc_names"
  """
  efiles_doc_names_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [efiles_doc_names_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [efiles_doc_names_order_by!]

    """
    filter the rows returned
    """
    where: efiles_doc_names_bool_exp
  ): efiles_doc_names_aggregate!

  """
  fetch data from the table: "efiles.ocr"
  """
  efiles_ocr(
    """
    distinct select on columns
    """
    distinct_on: [efiles_ocr_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [efiles_ocr_order_by!]

    """
    filter the rows returned
    """
    where: efiles_ocr_bool_exp
  ): [efiles_ocr!]!

  """
  fetch aggregated fields from the table: "efiles.ocr"
  """
  efiles_ocr_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [efiles_ocr_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [efiles_ocr_order_by!]

    """
    filter the rows returned
    """
    where: efiles_ocr_bool_exp
  ): efiles_ocr_aggregate!

  """
  fetch data from the table: "efiles.ocr" using primary key columns
  """
  efiles_ocr_by_pk(ads_page: numeric!): efiles_ocr

  """
  fetch data from the table: "efiles.redaction_types"
  """
  efiles_redaction_types(
    """
    distinct select on columns
    """
    distinct_on: [efiles_redaction_types_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [efiles_redaction_types_order_by!]

    """
    filter the rows returned
    """
    where: efiles_redaction_types_bool_exp
  ): [efiles_redaction_types!]!

  """
  fetch aggregated fields from the table: "efiles.redaction_types"
  """
  efiles_redaction_types_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [efiles_redaction_types_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [efiles_redaction_types_order_by!]

    """
    filter the rows returned
    """
    where: efiles_redaction_types_bool_exp
  ): efiles_redaction_types_aggregate!

  """
  fetch data from the table: "efiles.redaction_types" using primary key columns
  """
  efiles_redaction_types_by_pk(red_id: numeric!): efiles_redaction_types

  """
  fetch data from the table: "efiles.type"
  """
  efiles_type(
    """
    distinct select on columns
    """
    distinct_on: [efiles_type_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [efiles_type_order_by!]

    """
    filter the rows returned
    """
    where: efiles_type_bool_exp
  ): [efiles_type!]!

  """
  fetch aggregated fields from the table: "efiles.type"
  """
  efiles_type_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [efiles_type_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [efiles_type_order_by!]

    """
    filter the rows returned
    """
    where: efiles_type_bool_exp
  ): efiles_type_aggregate!

  """
  fetch data from the table: "efiles.type" using primary key columns
  """
  efiles_type_by_pk(ads_udi: String!, doc_type: String!): efiles_type

  """
  fetch data from the table: "efiles.type_lookup"
  """
  efiles_type_lookup(
    """
    distinct select on columns
    """
    distinct_on: [efiles_type_lookup_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [efiles_type_lookup_order_by!]

    """
    filter the rows returned
    """
    where: efiles_type_lookup_bool_exp
  ): [efiles_type_lookup!]!

  """
  fetch aggregated fields from the table: "efiles.type_lookup"
  """
  efiles_type_lookup_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [efiles_type_lookup_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [efiles_type_lookup_order_by!]

    """
    filter the rows returned
    """
    where: efiles_type_lookup_bool_exp
  ): efiles_type_lookup_aggregate!

  """
  fetch data from the table: "email.doc_main"
  """
  email_doc_main(
    """
    distinct select on columns
    """
    distinct_on: [email_doc_main_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [email_doc_main_order_by!]

    """
    filter the rows returned
    """
    where: email_doc_main_bool_exp
  ): [email_doc_main!]!

  """
  fetch aggregated fields from the table: "email.doc_main"
  """
  email_doc_main_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [email_doc_main_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [email_doc_main_order_by!]

    """
    filter the rows returned
    """
    where: email_doc_main_bool_exp
  ): email_doc_main_aggregate!

  """
  fetch data from the table: "email.doc_main" using primary key columns
  """
  email_doc_main_by_pk(ads_udi: String!): email_doc_main

  """
  fetch data from the table: "email.doc_names"
  """
  email_doc_names(
    """
    distinct select on columns
    """
    distinct_on: [email_doc_names_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [email_doc_names_order_by!]

    """
    filter the rows returned
    """
    where: email_doc_names_bool_exp
  ): [email_doc_names!]!

  """
  fetch aggregated fields from the table: "email.doc_names"
  """
  email_doc_names_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [email_doc_names_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [email_doc_names_order_by!]

    """
    filter the rows returned
    """
    where: email_doc_names_bool_exp
  ): email_doc_names_aggregate!

  """
  fetch data from the table: "email.doe_related_rec"
  """
  email_doe_related_rec(
    """
    distinct select on columns
    """
    distinct_on: [email_doe_related_rec_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [email_doe_related_rec_order_by!]

    """
    filter the rows returned
    """
    where: email_doe_related_rec_bool_exp
  ): [email_doe_related_rec!]!

  """
  fetch aggregated fields from the table: "email.doe_related_rec"
  """
  email_doe_related_rec_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [email_doe_related_rec_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [email_doe_related_rec_order_by!]

    """
    filter the rows returned
    """
    where: email_doe_related_rec_bool_exp
  ): email_doe_related_rec_aggregate!

  """
  fetch data from the table: "email.doe_related_rec" using primary key columns
  """
  email_doe_related_rec_by_pk(ads_udi: String!, rel_ads_udi: String!, rel_rec_code: String!): email_doe_related_rec

  """
  fetch data from the table: "email.ocr"
  """
  email_ocr(
    """
    distinct select on columns
    """
    distinct_on: [email_ocr_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [email_ocr_order_by!]

    """
    filter the rows returned
    """
    where: email_ocr_bool_exp
  ): [email_ocr!]!

  """
  fetch aggregated fields from the table: "email.ocr"
  """
  email_ocr_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [email_ocr_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [email_ocr_order_by!]

    """
    filter the rows returned
    """
    where: email_ocr_bool_exp
  ): email_ocr_aggregate!

  """
  fetch data from the table: "email.ocr" using primary key columns
  """
  email_ocr_by_pk(ads_page: numeric!, ads_udi: String!): email_ocr

  """
  fetch data from the table: "email.type"
  """
  email_type(
    """
    distinct select on columns
    """
    distinct_on: [email_type_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [email_type_order_by!]

    """
    filter the rows returned
    """
    where: email_type_bool_exp
  ): [email_type!]!

  """
  fetch aggregated fields from the table: "email.type"
  """
  email_type_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [email_type_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [email_type_order_by!]

    """
    filter the rows returned
    """
    where: email_type_bool_exp
  ): email_type_aggregate!

  """
  fetch data from the table: "email.type" using primary key columns
  """
  email_type_by_pk(ads_udi: String!, doc_type: String!): email_type

  """
  fetch data from the table: "email.type_lookup"
  """
  email_type_lookup(
    """
    distinct select on columns
    """
    distinct_on: [email_type_lookup_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [email_type_lookup_order_by!]

    """
    filter the rows returned
    """
    where: email_type_lookup_bool_exp
  ): [email_type_lookup!]!

  """
  fetch aggregated fields from the table: "email.type_lookup"
  """
  email_type_lookup_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [email_type_lookup_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [email_type_lookup_order_by!]

    """
    filter the rows returned
    """
    where: email_type_lookup_bool_exp
  ): email_type_lookup_aggregate!

  """
  fetch data from the table: "email.type_lookup" using primary key columns
  """
  email_type_lookup_by_pk(doc_type: String!): email_type_lookup

  """
  fetch data from the table: "paper.doc_main"
  """
  paper_doc_main(
    """
    distinct select on columns
    """
    distinct_on: [paper_doc_main_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [paper_doc_main_order_by!]

    """
    filter the rows returned
    """
    where: paper_doc_main_bool_exp
  ): [paper_doc_main!]!

  """
  fetch aggregated fields from the table: "paper.doc_main"
  """
  paper_doc_main_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [paper_doc_main_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [paper_doc_main_order_by!]

    """
    filter the rows returned
    """
    where: paper_doc_main_bool_exp
  ): paper_doc_main_aggregate!

  """
  fetch data from the table: "paper.doc_main" using primary key columns
  """
  paper_doc_main_by_pk(ads_udi: String!): paper_doc_main

  """
  fetch data from the table: "paper.doc_names"
  """
  paper_doc_names(
    """
    distinct select on columns
    """
    distinct_on: [paper_doc_names_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [paper_doc_names_order_by!]

    """
    filter the rows returned
    """
    where: paper_doc_names_bool_exp
  ): [paper_doc_names!]!

  """
  fetch aggregated fields from the table: "paper.doc_names"
  """
  paper_doc_names_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [paper_doc_names_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [paper_doc_names_order_by!]

    """
    filter the rows returned
    """
    where: paper_doc_names_bool_exp
  ): paper_doc_names_aggregate!

  """
  fetch data from the table: "paper.ocr"
  """
  paper_ocr(
    """
    distinct select on columns
    """
    distinct_on: [paper_ocr_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [paper_ocr_order_by!]

    """
    filter the rows returned
    """
    where: paper_ocr_bool_exp
  ): [paper_ocr!]!

  """
  fetch aggregated fields from the table: "paper.ocr"
  """
  paper_ocr_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [paper_ocr_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [paper_ocr_order_by!]

    """
    filter the rows returned
    """
    where: paper_ocr_bool_exp
  ): paper_ocr_aggregate!

  """
  fetch data from the table: "paper.ocr" using primary key columns
  """
  paper_ocr_by_pk(ads_page: numeric!, ads_udi: String!): paper_ocr

  """
  fetch data from the table: "paper.type"
  """
  paper_type(
    """
    distinct select on columns
    """
    distinct_on: [paper_type_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [paper_type_order_by!]

    """
    filter the rows returned
    """
    where: paper_type_bool_exp
  ): [paper_type!]!

  """
  fetch aggregated fields from the table: "paper.type"
  """
  paper_type_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [paper_type_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [paper_type_order_by!]

    """
    filter the rows returned
    """
    where: paper_type_bool_exp
  ): paper_type_aggregate!

  """
  fetch data from the table: "paper.type" using primary key columns
  """
  paper_type_by_pk(ads_udi: String!, doc_type: String!): paper_type

  """
  fetch data from the table: "paper.type_lookup"
  """
  paper_type_lookup(
    """
    distinct select on columns
    """
    distinct_on: [paper_type_lookup_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [paper_type_lookup_order_by!]

    """
    filter the rows returned
    """
    where: paper_type_lookup_bool_exp
  ): [paper_type_lookup!]!

  """
  fetch aggregated fields from the table: "paper.type_lookup"
  """
  paper_type_lookup_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [paper_type_lookup_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [paper_type_lookup_order_by!]

    """
    filter the rows returned
    """
    where: paper_type_lookup_bool_exp
  ): paper_type_lookup_aggregate!

  """
  fetch data from the table: "paper.type_lookup" using primary key columns
  """
  paper_type_lookup_by_pk(doc_type: String!): paper_type_lookup

  """
  fetch data from the table: "risdata.case_collection"
  """
  risdata_case_collection(
    """
    distinct select on columns
    """
    distinct_on: [risdata_case_collection_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [risdata_case_collection_order_by!]

    """
    filter the rows returned
    """
    where: risdata_case_collection_bool_exp
  ): [risdata_case_collection!]!

  """
  fetch aggregated fields from the table: "risdata.case_collection"
  """
  risdata_case_collection_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [risdata_case_collection_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [risdata_case_collection_order_by!]

    """
    filter the rows returned
    """
    where: risdata_case_collection_bool_exp
  ): risdata_case_collection_aggregate!

  """
  fetch data from the table: "risdata.case_collection" using primary key columns
  """
  risdata_case_collection_by_pk(collection_id: numeric!): risdata_case_collection

  """
  fetch data from the table: "risdata.doc_main"
  """
  risdata_doc_main(
    """
    distinct select on columns
    """
    distinct_on: [risdata_doc_main_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [risdata_doc_main_order_by!]

    """
    filter the rows returned
    """
    where: risdata_doc_main_bool_exp
  ): [risdata_doc_main!]!

  """
  fetch aggregated fields from the table: "risdata.doc_main"
  """
  risdata_doc_main_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [risdata_doc_main_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [risdata_doc_main_order_by!]

    """
    filter the rows returned
    """
    where: risdata_doc_main_bool_exp
  ): risdata_doc_main_aggregate!

  """
  fetch data from the table: "risdata.doc_main" using primary key columns
  """
  risdata_doc_main_by_pk(ads_udi: String!): risdata_doc_main

  """
  fetch data from the table: "risdata.doc_names"
  """
  risdata_doc_names(
    """
    distinct select on columns
    """
    distinct_on: [risdata_doc_names_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [risdata_doc_names_order_by!]

    """
    filter the rows returned
    """
    where: risdata_doc_names_bool_exp
  ): [risdata_doc_names!]!

  """
  fetch aggregated fields from the table: "risdata.doc_names"
  """
  risdata_doc_names_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [risdata_doc_names_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [risdata_doc_names_order_by!]

    """
    filter the rows returned
    """
    where: risdata_doc_names_bool_exp
  ): risdata_doc_names_aggregate!

  """
  fetch data from the table: "risdata.doe_related_rec"
  """
  risdata_doe_related_rec(
    """
    distinct select on columns
    """
    distinct_on: [risdata_doe_related_rec_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [risdata_doe_related_rec_order_by!]

    """
    filter the rows returned
    """
    where: risdata_doe_related_rec_bool_exp
  ): [risdata_doe_related_rec!]!

  """
  fetch aggregated fields from the table: "risdata.doe_related_rec"
  """
  risdata_doe_related_rec_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [risdata_doe_related_rec_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [risdata_doe_related_rec_order_by!]

    """
    filter the rows returned
    """
    where: risdata_doe_related_rec_bool_exp
  ): risdata_doe_related_rec_aggregate!

  """
  fetch data from the table: "risdata.doe_related_rec" using primary key columns
  """
  risdata_doe_related_rec_by_pk(ads_udi: String!, rel_ads_udi: String!, rel_rec_code: String!): risdata_doe_related_rec

  """
  fetch data from the table: "risdata.ocr"
  """
  risdata_ocr(
    """
    distinct select on columns
    """
    distinct_on: [risdata_ocr_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [risdata_ocr_order_by!]

    """
    filter the rows returned
    """
    where: risdata_ocr_bool_exp
  ): [risdata_ocr!]!

  """
  fetch aggregated fields from the table: "risdata.ocr"
  """
  risdata_ocr_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [risdata_ocr_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [risdata_ocr_order_by!]

    """
    filter the rows returned
    """
    where: risdata_ocr_bool_exp
  ): risdata_ocr_aggregate!

  """
  fetch data from the table: "risdata.ocr" using primary key columns
  """
  risdata_ocr_by_pk(ads_page: numeric!, ads_udi: String!): risdata_ocr

  """
  fetch data from the table: "risdata.type"
  """
  risdata_type(
    """
    distinct select on columns
    """
    distinct_on: [risdata_type_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [risdata_type_order_by!]

    """
    filter the rows returned
    """
    where: risdata_type_bool_exp
  ): [risdata_type!]!

  """
  fetch aggregated fields from the table: "risdata.type"
  """
  risdata_type_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [risdata_type_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [risdata_type_order_by!]

    """
    filter the rows returned
    """
    where: risdata_type_bool_exp
  ): risdata_type_aggregate!

  """
  fetch data from the table: "risdata.type" using primary key columns
  """
  risdata_type_by_pk(ads_udi: String!, doc_type: String!): risdata_type

  """
  fetch data from the table: "risdata.type_lookup"
  """
  risdata_type_lookup(
    """
    distinct select on columns
    """
    distinct_on: [risdata_type_lookup_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [risdata_type_lookup_order_by!]

    """
    filter the rows returned
    """
    where: risdata_type_lookup_bool_exp
  ): [risdata_type_lookup!]!

  """
  fetch aggregated fields from the table: "risdata.type_lookup"
  """
  risdata_type_lookup_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [risdata_type_lookup_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [risdata_type_lookup_order_by!]

    """
    filter the rows returned
    """
    where: risdata_type_lookup_bool_exp
  ): risdata_type_lookup_aggregate!

  """
  fetch data from the table: "risdata.type_lookup" using primary key columns
  """
  risdata_type_lookup_by_pk(doc_type: String!): risdata_type_lookup

  """
  fetch data from the table: "workflow.adhoc"
  """
  workflow_adhoc(
    """
    distinct select on columns
    """
    distinct_on: [workflow_adhoc_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_adhoc_order_by!]

    """
    filter the rows returned
    """
    where: workflow_adhoc_bool_exp
  ): [workflow_adhoc!]!

  """
  fetch aggregated fields from the table: "workflow.adhoc"
  """
  workflow_adhoc_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_adhoc_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_adhoc_order_by!]

    """
    filter the rows returned
    """
    where: workflow_adhoc_bool_exp
  ): workflow_adhoc_aggregate!

  """
  fetch data from the table: "workflow.adhoc_card"
  """
  workflow_adhoc_card(
    """
    distinct select on columns
    """
    distinct_on: [workflow_adhoc_card_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_adhoc_card_order_by!]

    """
    filter the rows returned
    """
    where: workflow_adhoc_card_bool_exp
  ): [workflow_adhoc_card!]!

  """
  fetch aggregated fields from the table: "workflow.adhoc_card"
  """
  workflow_adhoc_card_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_adhoc_card_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_adhoc_card_order_by!]

    """
    filter the rows returned
    """
    where: workflow_adhoc_card_bool_exp
  ): workflow_adhoc_card_aggregate!

  """
  fetch data from the table: "workflow.adhoc_checks"
  """
  workflow_adhoc_checks(
    """
    distinct select on columns
    """
    distinct_on: [workflow_adhoc_checks_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_adhoc_checks_order_by!]

    """
    filter the rows returned
    """
    where: workflow_adhoc_checks_bool_exp
  ): [workflow_adhoc_checks!]!

  """
  fetch aggregated fields from the table: "workflow.adhoc_checks"
  """
  workflow_adhoc_checks_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_adhoc_checks_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_adhoc_checks_order_by!]

    """
    filter the rows returned
    """
    where: workflow_adhoc_checks_bool_exp
  ): workflow_adhoc_checks_aggregate!

  """
  fetch data from the table: "workflow.adhoc_requests"
  """
  workflow_adhoc_requests(
    """
    distinct select on columns
    """
    distinct_on: [workflow_adhoc_requests_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_adhoc_requests_order_by!]

    """
    filter the rows returned
    """
    where: workflow_adhoc_requests_bool_exp
  ): [workflow_adhoc_requests!]!

  """
  fetch aggregated fields from the table: "workflow.adhoc_requests"
  """
  workflow_adhoc_requests_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_adhoc_requests_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_adhoc_requests_order_by!]

    """
    filter the rows returned
    """
    where: workflow_adhoc_requests_bool_exp
  ): workflow_adhoc_requests_aggregate!

  """
  fetch data from the table: "workflow.call_center_acc_no"
  """
  workflow_call_center_acc_no(
    """
    distinct select on columns
    """
    distinct_on: [workflow_call_center_acc_no_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_call_center_acc_no_order_by!]

    """
    filter the rows returned
    """
    where: workflow_call_center_acc_no_bool_exp
  ): [workflow_call_center_acc_no!]!

  """
  fetch aggregated fields from the table: "workflow.call_center_acc_no"
  """
  workflow_call_center_acc_no_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_call_center_acc_no_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_call_center_acc_no_order_by!]

    """
    filter the rows returned
    """
    where: workflow_call_center_acc_no_bool_exp
  ): workflow_call_center_acc_no_aggregate!

  """
  fetch data from the table: "workflow.call_center_batch"
  """
  workflow_call_center_batch(
    """
    distinct select on columns
    """
    distinct_on: [workflow_call_center_batch_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_call_center_batch_order_by!]

    """
    filter the rows returned
    """
    where: workflow_call_center_batch_bool_exp
  ): [workflow_call_center_batch!]!

  """
  fetch aggregated fields from the table: "workflow.call_center_batch"
  """
  workflow_call_center_batch_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_call_center_batch_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_call_center_batch_order_by!]

    """
    filter the rows returned
    """
    where: workflow_call_center_batch_bool_exp
  ): workflow_call_center_batch_aggregate!

  """
  fetch data from the table: "workflow.call_center_batch" using primary key columns
  """
  workflow_call_center_batch_by_pk(batch_id: float8!): workflow_call_center_batch

  """
  fetch data from the table: "workflow.copyright_docs"
  """
  workflow_copyright_docs(
    """
    distinct select on columns
    """
    distinct_on: [workflow_copyright_docs_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_copyright_docs_order_by!]

    """
    filter the rows returned
    """
    where: workflow_copyright_docs_bool_exp
  ): [workflow_copyright_docs!]!

  """
  fetch aggregated fields from the table: "workflow.copyright_docs"
  """
  workflow_copyright_docs_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_copyright_docs_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_copyright_docs_order_by!]

    """
    filter the rows returned
    """
    where: workflow_copyright_docs_bool_exp
  ): workflow_copyright_docs_aggregate!

  """
  fetch data from the table: "workflow.doc_comments"
  """
  workflow_doc_comments(
    """
    distinct select on columns
    """
    distinct_on: [workflow_doc_comments_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_doc_comments_order_by!]

    """
    filter the rows returned
    """
    where: workflow_doc_comments_bool_exp
  ): [workflow_doc_comments!]!

  """
  fetch aggregated fields from the table: "workflow.doc_comments"
  """
  workflow_doc_comments_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_doc_comments_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_doc_comments_order_by!]

    """
    filter the rows returned
    """
    where: workflow_doc_comments_bool_exp
  ): workflow_doc_comments_aggregate!

  """
  fetch data from the table: "workflow.doc_names"
  """
  workflow_doc_names(
    """
    distinct select on columns
    """
    distinct_on: [workflow_doc_names_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_doc_names_order_by!]

    """
    filter the rows returned
    """
    where: workflow_doc_names_bool_exp
  ): [workflow_doc_names!]!

  """
  fetch aggregated fields from the table: "workflow.doc_names"
  """
  workflow_doc_names_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_doc_names_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_doc_names_order_by!]

    """
    filter the rows returned
    """
    where: workflow_doc_names_bool_exp
  ): workflow_doc_names_aggregate!

  """
  fetch data from the table: "workflow.doc_sources"
  """
  workflow_doc_sources(
    """
    distinct select on columns
    """
    distinct_on: [workflow_doc_sources_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_doc_sources_order_by!]

    """
    filter the rows returned
    """
    where: workflow_doc_sources_bool_exp
  ): [workflow_doc_sources!]!

  """
  fetch aggregated fields from the table: "workflow.doc_sources"
  """
  workflow_doc_sources_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_doc_sources_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_doc_sources_order_by!]

    """
    filter the rows returned
    """
    where: workflow_doc_sources_bool_exp
  ): workflow_doc_sources_aggregate!

  """
  fetch data from the table: "workflow.doc_status"
  """
  workflow_doc_status(
    """
    distinct select on columns
    """
    distinct_on: [workflow_doc_status_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_doc_status_order_by!]

    """
    filter the rows returned
    """
    where: workflow_doc_status_bool_exp
  ): [workflow_doc_status!]!

  """
  fetch aggregated fields from the table: "workflow.doc_status"
  """
  workflow_doc_status_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_doc_status_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_doc_status_order_by!]

    """
    filter the rows returned
    """
    where: workflow_doc_status_bool_exp
  ): workflow_doc_status_aggregate!

  """
  fetch data from the table: "workflow.doc_tags_names"
  """
  workflow_doc_tags_names(
    """
    distinct select on columns
    """
    distinct_on: [workflow_doc_tags_names_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_doc_tags_names_order_by!]

    """
    filter the rows returned
    """
    where: workflow_doc_tags_names_bool_exp
  ): [workflow_doc_tags_names!]!

  """
  fetch aggregated fields from the table: "workflow.doc_tags_names"
  """
  workflow_doc_tags_names_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_doc_tags_names_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_doc_tags_names_order_by!]

    """
    filter the rows returned
    """
    where: workflow_doc_tags_names_bool_exp
  ): workflow_doc_tags_names_aggregate!

  """
  fetch data from the table: "workflow.doc_tags_names" using primary key columns
  """
  workflow_doc_tags_names_by_pk(tag: String!): workflow_doc_tags_names

  """
  fetch data from the table: "workflow.documents"
  """
  workflow_documents(
    """
    distinct select on columns
    """
    distinct_on: [workflow_documents_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_documents_order_by!]

    """
    filter the rows returned
    """
    where: workflow_documents_bool_exp
  ): [workflow_documents!]!

  """
  fetch aggregated fields from the table: "workflow.documents"
  """
  workflow_documents_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_documents_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_documents_order_by!]

    """
    filter the rows returned
    """
    where: workflow_documents_bool_exp
  ): workflow_documents_aggregate!

  """
  fetch data from the table: "workflow.documents" using primary key columns
  """
  workflow_documents_by_pk(ID: float8!): workflow_documents

  """
  fetch data from the table: "workflow.final_priv_log"
  """
  workflow_final_priv_log(
    """
    distinct select on columns
    """
    distinct_on: [workflow_final_priv_log_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_final_priv_log_order_by!]

    """
    filter the rows returned
    """
    where: workflow_final_priv_log_bool_exp
  ): [workflow_final_priv_log!]!

  """
  fetch aggregated fields from the table: "workflow.final_priv_log"
  """
  workflow_final_priv_log_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_final_priv_log_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_final_priv_log_order_by!]

    """
    filter the rows returned
    """
    where: workflow_final_priv_log_bool_exp
  ): workflow_final_priv_log_aggregate!

  """
  fetch data from the table: "workflow.final_priv_log_author"
  """
  workflow_final_priv_log_author(
    """
    distinct select on columns
    """
    distinct_on: [workflow_final_priv_log_author_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_final_priv_log_author_order_by!]

    """
    filter the rows returned
    """
    where: workflow_final_priv_log_author_bool_exp
  ): [workflow_final_priv_log_author!]!

  """
  fetch aggregated fields from the table: "workflow.final_priv_log_author"
  """
  workflow_final_priv_log_author_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_final_priv_log_author_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_final_priv_log_author_order_by!]

    """
    filter the rows returned
    """
    where: workflow_final_priv_log_author_bool_exp
  ): workflow_final_priv_log_author_aggregate!

  """
  fetch data from the table: "workflow.final_priv_log" using primary key columns
  """
  workflow_final_priv_log_by_pk(acc_no: String!): workflow_final_priv_log

  """
  fetch data from the table: "workflow.final_priv_log_recipient"
  """
  workflow_final_priv_log_recipient(
    """
    distinct select on columns
    """
    distinct_on: [workflow_final_priv_log_recipient_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_final_priv_log_recipient_order_by!]

    """
    filter the rows returned
    """
    where: workflow_final_priv_log_recipient_bool_exp
  ): [workflow_final_priv_log_recipient!]!

  """
  fetch aggregated fields from the table: "workflow.final_priv_log_recipient"
  """
  workflow_final_priv_log_recipient_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_final_priv_log_recipient_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_final_priv_log_recipient_order_by!]

    """
    filter the rows returned
    """
    where: workflow_final_priv_log_recipient_bool_exp
  ): workflow_final_priv_log_recipient_aggregate!

  """
  fetch data from the table: "workflow.highlight_words"
  """
  workflow_highlight_words(
    """
    distinct select on columns
    """
    distinct_on: [workflow_highlight_words_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_highlight_words_order_by!]

    """
    filter the rows returned
    """
    where: workflow_highlight_words_bool_exp
  ): [workflow_highlight_words!]!

  """
  fetch aggregated fields from the table: "workflow.highlight_words"
  """
  workflow_highlight_words_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_highlight_words_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_highlight_words_order_by!]

    """
    filter the rows returned
    """
    where: workflow_highlight_words_bool_exp
  ): workflow_highlight_words_aggregate!

  """
  fetch data from the table: "workflow.highlight_words" using primary key columns
  """
  workflow_highlight_words_by_pk(highlight_word_id: Int!): workflow_highlight_words

  """
  fetch data from the table: "workflow.history"
  """
  workflow_history(
    """
    distinct select on columns
    """
    distinct_on: [workflow_history_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_history_order_by!]

    """
    filter the rows returned
    """
    where: workflow_history_bool_exp
  ): [workflow_history!]!

  """
  fetch aggregated fields from the table: "workflow.history"
  """
  workflow_history_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_history_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_history_order_by!]

    """
    filter the rows returned
    """
    where: workflow_history_bool_exp
  ): workflow_history_aggregate!

  """
  fetch data from the table: "workflow.history" using primary key columns
  """
  workflow_history_by_pk(id: Int!): workflow_history

  """
  fetch data from the table: "workflow.lookups"
  """
  workflow_lookups(
    """
    distinct select on columns
    """
    distinct_on: [workflow_lookups_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_lookups_order_by!]

    """
    filter the rows returned
    """
    where: workflow_lookups_bool_exp
  ): [workflow_lookups!]!

  """
  fetch aggregated fields from the table: "workflow.lookups"
  """
  workflow_lookups_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_lookups_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_lookups_order_by!]

    """
    filter the rows returned
    """
    where: workflow_lookups_bool_exp
  ): workflow_lookups_aggregate!

  """
  fetch data from the table: "workflow.name_org_type"
  """
  workflow_name_org_type(
    """
    distinct select on columns
    """
    distinct_on: [workflow_name_org_type_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_name_org_type_order_by!]

    """
    filter the rows returned
    """
    where: workflow_name_org_type_bool_exp
  ): [workflow_name_org_type!]!

  """
  fetch aggregated fields from the table: "workflow.name_org_type"
  """
  workflow_name_org_type_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_name_org_type_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_name_org_type_order_by!]

    """
    filter the rows returned
    """
    where: workflow_name_org_type_bool_exp
  ): workflow_name_org_type_aggregate!

  """
  fetch data from the table: "workflow.name_type_lookup"
  """
  workflow_name_type_lookup(
    """
    distinct select on columns
    """
    distinct_on: [workflow_name_type_lookup_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_name_type_lookup_order_by!]

    """
    filter the rows returned
    """
    where: workflow_name_type_lookup_bool_exp
  ): [workflow_name_type_lookup!]!

  """
  fetch aggregated fields from the table: "workflow.name_type_lookup"
  """
  workflow_name_type_lookup_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_name_type_lookup_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_name_type_lookup_order_by!]

    """
    filter the rows returned
    """
    where: workflow_name_type_lookup_bool_exp
  ): workflow_name_type_lookup_aggregate!

  """
  fetch data from the table: "workflow.priv_log_detail"
  """
  workflow_priv_log_detail(
    """
    distinct select on columns
    """
    distinct_on: [workflow_priv_log_detail_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_priv_log_detail_order_by!]

    """
    filter the rows returned
    """
    where: workflow_priv_log_detail_bool_exp
  ): [workflow_priv_log_detail!]!

  """
  fetch aggregated fields from the table: "workflow.priv_log_detail"
  """
  workflow_priv_log_detail_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_priv_log_detail_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_priv_log_detail_order_by!]

    """
    filter the rows returned
    """
    where: workflow_priv_log_detail_bool_exp
  ): workflow_priv_log_detail_aggregate!

  """
  fetch data from the table: "workflow.priv_log_detail" using primary key columns
  """
  workflow_priv_log_detail_by_pk(priv_log_detail_id: float8!): workflow_priv_log_detail

  """
  fetch data from the table: "workflow.priv_log_entry"
  """
  workflow_priv_log_entry(
    """
    distinct select on columns
    """
    distinct_on: [workflow_priv_log_entry_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_priv_log_entry_order_by!]

    """
    filter the rows returned
    """
    where: workflow_priv_log_entry_bool_exp
  ): [workflow_priv_log_entry!]!

  """
  fetch aggregated fields from the table: "workflow.priv_log_entry"
  """
  workflow_priv_log_entry_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_priv_log_entry_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_priv_log_entry_order_by!]

    """
    filter the rows returned
    """
    where: workflow_priv_log_entry_bool_exp
  ): workflow_priv_log_entry_aggregate!

  """
  fetch data from the table: "workflow.priv_log_entry" using primary key columns
  """
  workflow_priv_log_entry_by_pk(priv_log_entry_id: float8!): workflow_priv_log_entry

  """
  fetch data from the table: "workflow.privacy_docs"
  """
  workflow_privacy_docs(
    """
    distinct select on columns
    """
    distinct_on: [workflow_privacy_docs_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_privacy_docs_order_by!]

    """
    filter the rows returned
    """
    where: workflow_privacy_docs_bool_exp
  ): [workflow_privacy_docs!]!

  """
  fetch aggregated fields from the table: "workflow.privacy_docs"
  """
  workflow_privacy_docs_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_privacy_docs_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_privacy_docs_order_by!]

    """
    filter the rows returned
    """
    where: workflow_privacy_docs_bool_exp
  ): workflow_privacy_docs_aggregate!

  """
  fetch data from the table: "workflow.redacted_docs"
  """
  workflow_redacted_docs(
    """
    distinct select on columns
    """
    distinct_on: [workflow_redacted_docs_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_redacted_docs_order_by!]

    """
    filter the rows returned
    """
    where: workflow_redacted_docs_bool_exp
  ): [workflow_redacted_docs!]!

  """
  fetch aggregated fields from the table: "workflow.redacted_docs"
  """
  workflow_redacted_docs_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_redacted_docs_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_redacted_docs_order_by!]

    """
    filter the rows returned
    """
    where: workflow_redacted_docs_bool_exp
  ): workflow_redacted_docs_aggregate!

  """
  fetch data from the table: "workflow.redacted_pages"
  """
  workflow_redacted_pages(
    """
    distinct select on columns
    """
    distinct_on: [workflow_redacted_pages_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_redacted_pages_order_by!]

    """
    filter the rows returned
    """
    where: workflow_redacted_pages_bool_exp
  ): [workflow_redacted_pages!]!

  """
  fetch aggregated fields from the table: "workflow.redacted_pages"
  """
  workflow_redacted_pages_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_redacted_pages_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_redacted_pages_order_by!]

    """
    filter the rows returned
    """
    where: workflow_redacted_pages_bool_exp
  ): workflow_redacted_pages_aggregate!

  """
  fetch data from the table: "workflow.redaction_processing"
  """
  workflow_redaction_processing(
    """
    distinct select on columns
    """
    distinct_on: [workflow_redaction_processing_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_redaction_processing_order_by!]

    """
    filter the rows returned
    """
    where: workflow_redaction_processing_bool_exp
  ): [workflow_redaction_processing!]!

  """
  fetch aggregated fields from the table: "workflow.redaction_processing"
  """
  workflow_redaction_processing_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_redaction_processing_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_redaction_processing_order_by!]

    """
    filter the rows returned
    """
    where: workflow_redaction_processing_bool_exp
  ): workflow_redaction_processing_aggregate!

  """
  fetch data from the table: "workflow.released_docs"
  """
  workflow_released_docs(
    """
    distinct select on columns
    """
    distinct_on: [workflow_released_docs_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_released_docs_order_by!]

    """
    filter the rows returned
    """
    where: workflow_released_docs_bool_exp
  ): [workflow_released_docs!]!

  """
  fetch aggregated fields from the table: "workflow.released_docs"
  """
  workflow_released_docs_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_released_docs_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_released_docs_order_by!]

    """
    filter the rows returned
    """
    where: workflow_released_docs_bool_exp
  ): workflow_released_docs_aggregate!

  """
  fetch data from the table: "workflow.sources"
  """
  workflow_sources(
    """
    distinct select on columns
    """
    distinct_on: [workflow_sources_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_sources_order_by!]

    """
    filter the rows returned
    """
    where: workflow_sources_bool_exp
  ): [workflow_sources!]!

  """
  fetch aggregated fields from the table: "workflow.sources"
  """
  workflow_sources_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_sources_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_sources_order_by!]

    """
    filter the rows returned
    """
    where: workflow_sources_bool_exp
  ): workflow_sources_aggregate!

  """
  fetch data from the table: "workflow.sources" using primary key columns
  """
  workflow_sources_by_pk(ID: float8!): workflow_sources

  """
  fetch data from the table: "workflow.stages"
  """
  workflow_stages(
    """
    distinct select on columns
    """
    distinct_on: [workflow_stages_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_stages_order_by!]

    """
    filter the rows returned
    """
    where: workflow_stages_bool_exp
  ): [workflow_stages!]!

  """
  fetch aggregated fields from the table: "workflow.stages"
  """
  workflow_stages_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_stages_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_stages_order_by!]

    """
    filter the rows returned
    """
    where: workflow_stages_bool_exp
  ): workflow_stages_aggregate!

  """
  fetch data from the table: "workflow.stamped_pages"
  """
  workflow_stamped_pages(
    """
    distinct select on columns
    """
    distinct_on: [workflow_stamped_pages_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_stamped_pages_order_by!]

    """
    filter the rows returned
    """
    where: workflow_stamped_pages_bool_exp
  ): [workflow_stamped_pages!]!

  """
  fetch aggregated fields from the table: "workflow.stamped_pages"
  """
  workflow_stamped_pages_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_stamped_pages_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_stamped_pages_order_by!]

    """
    filter the rows returned
    """
    where: workflow_stamped_pages_bool_exp
  ): workflow_stamped_pages_aggregate!

  """
  fetch data from the table: "workflow.users"
  """
  workflow_users(
    """
    distinct select on columns
    """
    distinct_on: [workflow_users_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_users_order_by!]

    """
    filter the rows returned
    """
    where: workflow_users_bool_exp
  ): [workflow_users!]!

  """
  fetch aggregated fields from the table: "workflow.users"
  """
  workflow_users_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_users_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_users_order_by!]

    """
    filter the rows returned
    """
    where: workflow_users_bool_exp
  ): workflow_users_aggregate!

  """
  fetch data from the table: "workflow.workflow"
  """
  workflow_workflow(
    """
    distinct select on columns
    """
    distinct_on: [workflow_workflow_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_workflow_order_by!]

    """
    filter the rows returned
    """
    where: workflow_workflow_bool_exp
  ): [workflow_workflow!]!

  """
  fetch aggregated fields from the table: "workflow.workflow"
  """
  workflow_workflow_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_workflow_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_workflow_order_by!]

    """
    filter the rows returned
    """
    where: workflow_workflow_bool_exp
  ): workflow_workflow_aggregate!

  """
  fetch data from the table: "workflow.workflow" using primary key columns
  """
  workflow_workflow_by_pk(ID: float8!): workflow_workflow

  """
  fetch data from the table: "workflow.workflow_decision"
  """
  workflow_workflow_decision(
    """
    distinct select on columns
    """
    distinct_on: [workflow_workflow_decision_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_workflow_decision_order_by!]

    """
    filter the rows returned
    """
    where: workflow_workflow_decision_bool_exp
  ): [workflow_workflow_decision!]!

  """
  fetch aggregated fields from the table: "workflow.workflow_decision"
  """
  workflow_workflow_decision_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_workflow_decision_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_workflow_decision_order_by!]

    """
    filter the rows returned
    """
    where: workflow_workflow_decision_bool_exp
  ): workflow_workflow_decision_aggregate!
}

scalar timestamp

"""
expression to compare columns of type timestamp. All fields are combined with logical 'AND'.
"""
input timestamp_comparison_exp {
  _eq: timestamp
  _gt: timestamp
  _gte: timestamp
  _in: [timestamp!]
  _is_null: Boolean
  _lt: timestamp
  _lte: timestamp
  _neq: timestamp
  _nin: [timestamp!]
}

"""
columns and relationships of "workflow.adhoc"
"""
type workflow_adhoc {
  NAME: String
  SECURITY: String
  adddate: timestamp
  adduser: String
  copyright: String
  decision_authority: String
  decisiondate: timestamp
  doc_id: float8
  foia: String
  legal: String
  legal_protection: String
  privacy: String
  process: String
  proprietary: String
  security_protection: String
  updateuser: String
  updatex: timestamp
}

"""
aggregated selection of "workflow.adhoc"
"""
type workflow_adhoc_aggregate {
  aggregate: workflow_adhoc_aggregate_fields
  nodes: [workflow_adhoc!]!
}

"""
aggregate fields of "workflow.adhoc"
"""
type workflow_adhoc_aggregate_fields {
  avg: workflow_adhoc_avg_fields
  count(columns: [workflow_adhoc_select_column!], distinct: Boolean): Int
  max: workflow_adhoc_max_fields
  min: workflow_adhoc_min_fields
  stddev: workflow_adhoc_stddev_fields
  stddev_pop: workflow_adhoc_stddev_pop_fields
  stddev_samp: workflow_adhoc_stddev_samp_fields
  sum: workflow_adhoc_sum_fields
  var_pop: workflow_adhoc_var_pop_fields
  var_samp: workflow_adhoc_var_samp_fields
  variance: workflow_adhoc_variance_fields
}

"""
order by aggregate values of table "workflow.adhoc"
"""
input workflow_adhoc_aggregate_order_by {
  avg: workflow_adhoc_avg_order_by
  count: order_by
  max: workflow_adhoc_max_order_by
  min: workflow_adhoc_min_order_by
  stddev: workflow_adhoc_stddev_order_by
  stddev_pop: workflow_adhoc_stddev_pop_order_by
  stddev_samp: workflow_adhoc_stddev_samp_order_by
  sum: workflow_adhoc_sum_order_by
  var_pop: workflow_adhoc_var_pop_order_by
  var_samp: workflow_adhoc_var_samp_order_by
  variance: workflow_adhoc_variance_order_by
}

"""
input type for inserting array relation for remote table "workflow.adhoc"
"""
input workflow_adhoc_arr_rel_insert_input {
  data: [workflow_adhoc_insert_input!]!
}

"""
aggregate avg on columns
"""
type workflow_adhoc_avg_fields {
  doc_id: Float
}

"""
order by avg() on columns of table "workflow.adhoc"
"""
input workflow_adhoc_avg_order_by {
  doc_id: order_by
}

"""
Boolean expression to filter rows from the table "workflow.adhoc". All fields are combined with a logical 'AND'.
"""
input workflow_adhoc_bool_exp {
  NAME: String_comparison_exp
  SECURITY: String_comparison_exp
  _and: [workflow_adhoc_bool_exp]
  _not: workflow_adhoc_bool_exp
  _or: [workflow_adhoc_bool_exp]
  adddate: timestamp_comparison_exp
  adduser: String_comparison_exp
  copyright: String_comparison_exp
  decision_authority: String_comparison_exp
  decisiondate: timestamp_comparison_exp
  doc_id: float8_comparison_exp
  foia: String_comparison_exp
  legal: String_comparison_exp
  legal_protection: String_comparison_exp
  privacy: String_comparison_exp
  process: String_comparison_exp
  proprietary: String_comparison_exp
  security_protection: String_comparison_exp
  updateuser: String_comparison_exp
  updatex: timestamp_comparison_exp
}

"""
columns and relationships of "workflow.adhoc_card"
"""
type workflow_adhoc_card {
  NAME: String
  SCHEMA_NAME: String
  acc_no: String
  add_date: timestamp
  add_user: String
  ads_udi: String
  batch_id: float8
  check01: bpchar
  check02: bpchar
  check03: bpchar
  check04: bpchar
  check05: bpchar
  check06: bpchar
  check07: bpchar
  check08: bpchar
  check09: bpchar
  check10: bpchar
  check11: bpchar
  check12: bpchar
  check13: bpchar
  check14: bpchar
  check15: bpchar
  check16: bpchar
  check17: bpchar
  check18: bpchar
  check19: bpchar
  check20: bpchar
  check21: bpchar
  check22: bpchar
  check23: bpchar
  check24: bpchar
  check25: bpchar
  check26: bpchar
  check27: bpchar
  check28: bpchar
  check29: bpchar
  check30: bpchar
  decision_authority: String
  decision_date: timestamp
  foia_exemption: String
  lsn_relevent: bpchar
  notes: String
  process: String
  release_id: numeric
  release_info: String
  stage: String
  stage_id: float8
  status: bpchar
  update_user: String
  updatex_date: timestamp
}

"""
aggregated selection of "workflow.adhoc_card"
"""
type workflow_adhoc_card_aggregate {
  aggregate: workflow_adhoc_card_aggregate_fields
  nodes: [workflow_adhoc_card!]!
}

"""
aggregate fields of "workflow.adhoc_card"
"""
type workflow_adhoc_card_aggregate_fields {
  avg: workflow_adhoc_card_avg_fields
  count(columns: [workflow_adhoc_card_select_column!], distinct: Boolean): Int
  max: workflow_adhoc_card_max_fields
  min: workflow_adhoc_card_min_fields
  stddev: workflow_adhoc_card_stddev_fields
  stddev_pop: workflow_adhoc_card_stddev_pop_fields
  stddev_samp: workflow_adhoc_card_stddev_samp_fields
  sum: workflow_adhoc_card_sum_fields
  var_pop: workflow_adhoc_card_var_pop_fields
  var_samp: workflow_adhoc_card_var_samp_fields
  variance: workflow_adhoc_card_variance_fields
}

"""
order by aggregate values of table "workflow.adhoc_card"
"""
input workflow_adhoc_card_aggregate_order_by {
  avg: workflow_adhoc_card_avg_order_by
  count: order_by
  max: workflow_adhoc_card_max_order_by
  min: workflow_adhoc_card_min_order_by
  stddev: workflow_adhoc_card_stddev_order_by
  stddev_pop: workflow_adhoc_card_stddev_pop_order_by
  stddev_samp: workflow_adhoc_card_stddev_samp_order_by
  sum: workflow_adhoc_card_sum_order_by
  var_pop: workflow_adhoc_card_var_pop_order_by
  var_samp: workflow_adhoc_card_var_samp_order_by
  variance: workflow_adhoc_card_variance_order_by
}

"""
input type for inserting array relation for remote table "workflow.adhoc_card"
"""
input workflow_adhoc_card_arr_rel_insert_input {
  data: [workflow_adhoc_card_insert_input!]!
}

"""
aggregate avg on columns
"""
type workflow_adhoc_card_avg_fields {
  batch_id: Float
  release_id: Float
  stage_id: Float
}

"""
order by avg() on columns of table "workflow.adhoc_card"
"""
input workflow_adhoc_card_avg_order_by {
  batch_id: order_by
  release_id: order_by
  stage_id: order_by
}

"""
Boolean expression to filter rows from the table "workflow.adhoc_card". All fields are combined with a logical 'AND'.
"""
input workflow_adhoc_card_bool_exp {
  NAME: String_comparison_exp
  SCHEMA_NAME: String_comparison_exp
  _and: [workflow_adhoc_card_bool_exp]
  _not: workflow_adhoc_card_bool_exp
  _or: [workflow_adhoc_card_bool_exp]
  acc_no: String_comparison_exp
  add_date: timestamp_comparison_exp
  add_user: String_comparison_exp
  ads_udi: String_comparison_exp
  batch_id: float8_comparison_exp
  check01: bpchar_comparison_exp
  check02: bpchar_comparison_exp
  check03: bpchar_comparison_exp
  check04: bpchar_comparison_exp
  check05: bpchar_comparison_exp
  check06: bpchar_comparison_exp
  check07: bpchar_comparison_exp
  check08: bpchar_comparison_exp
  check09: bpchar_comparison_exp
  check10: bpchar_comparison_exp
  check11: bpchar_comparison_exp
  check12: bpchar_comparison_exp
  check13: bpchar_comparison_exp
  check14: bpchar_comparison_exp
  check15: bpchar_comparison_exp
  check16: bpchar_comparison_exp
  check17: bpchar_comparison_exp
  check18: bpchar_comparison_exp
  check19: bpchar_comparison_exp
  check20: bpchar_comparison_exp
  check21: bpchar_comparison_exp
  check22: bpchar_comparison_exp
  check23: bpchar_comparison_exp
  check24: bpchar_comparison_exp
  check25: bpchar_comparison_exp
  check26: bpchar_comparison_exp
  check27: bpchar_comparison_exp
  check28: bpchar_comparison_exp
  check29: bpchar_comparison_exp
  check30: bpchar_comparison_exp
  decision_authority: String_comparison_exp
  decision_date: timestamp_comparison_exp
  foia_exemption: String_comparison_exp
  lsn_relevent: bpchar_comparison_exp
  notes: String_comparison_exp
  process: String_comparison_exp
  release_id: numeric_comparison_exp
  release_info: String_comparison_exp
  stage: String_comparison_exp
  stage_id: float8_comparison_exp
  status: bpchar_comparison_exp
  update_user: String_comparison_exp
  updatex_date: timestamp_comparison_exp
}

"""
input type for incrementing integer column in table "workflow.adhoc_card"
"""
input workflow_adhoc_card_inc_input {
  batch_id: float8
  release_id: numeric
  stage_id: float8
}

"""
input type for inserting data into table "workflow.adhoc_card"
"""
input workflow_adhoc_card_insert_input {
  NAME: String
  SCHEMA_NAME: String
  acc_no: String
  add_date: timestamp
  add_user: String
  ads_udi: String
  batch_id: float8
  check01: bpchar
  check02: bpchar
  check03: bpchar
  check04: bpchar
  check05: bpchar
  check06: bpchar
  check07: bpchar
  check08: bpchar
  check09: bpchar
  check10: bpchar
  check11: bpchar
  check12: bpchar
  check13: bpchar
  check14: bpchar
  check15: bpchar
  check16: bpchar
  check17: bpchar
  check18: bpchar
  check19: bpchar
  check20: bpchar
  check21: bpchar
  check22: bpchar
  check23: bpchar
  check24: bpchar
  check25: bpchar
  check26: bpchar
  check27: bpchar
  check28: bpchar
  check29: bpchar
  check30: bpchar
  decision_authority: String
  decision_date: timestamp
  foia_exemption: String
  lsn_relevent: bpchar
  notes: String
  process: String
  release_id: numeric
  release_info: String
  stage: String
  stage_id: float8
  status: bpchar
  update_user: String
  updatex_date: timestamp
}

"""
aggregate max on columns
"""
type workflow_adhoc_card_max_fields {
  NAME: String
  SCHEMA_NAME: String
  acc_no: String
  add_date: timestamp
  add_user: String
  ads_udi: String
  batch_id: float8
  decision_authority: String
  decision_date: timestamp
  foia_exemption: String
  notes: String
  process: String
  release_id: numeric
  release_info: String
  stage: String
  stage_id: float8
  update_user: String
  updatex_date: timestamp
}

"""
order by max() on columns of table "workflow.adhoc_card"
"""
input workflow_adhoc_card_max_order_by {
  NAME: order_by
  SCHEMA_NAME: order_by
  acc_no: order_by
  add_date: order_by
  add_user: order_by
  ads_udi: order_by
  batch_id: order_by
  decision_authority: order_by
  decision_date: order_by
  foia_exemption: order_by
  notes: order_by
  process: order_by
  release_id: order_by
  release_info: order_by
  stage: order_by
  stage_id: order_by
  update_user: order_by
  updatex_date: order_by
}

"""
aggregate min on columns
"""
type workflow_adhoc_card_min_fields {
  NAME: String
  SCHEMA_NAME: String
  acc_no: String
  add_date: timestamp
  add_user: String
  ads_udi: String
  batch_id: float8
  decision_authority: String
  decision_date: timestamp
  foia_exemption: String
  notes: String
  process: String
  release_id: numeric
  release_info: String
  stage: String
  stage_id: float8
  update_user: String
  updatex_date: timestamp
}

"""
order by min() on columns of table "workflow.adhoc_card"
"""
input workflow_adhoc_card_min_order_by {
  NAME: order_by
  SCHEMA_NAME: order_by
  acc_no: order_by
  add_date: order_by
  add_user: order_by
  ads_udi: order_by
  batch_id: order_by
  decision_authority: order_by
  decision_date: order_by
  foia_exemption: order_by
  notes: order_by
  process: order_by
  release_id: order_by
  release_info: order_by
  stage: order_by
  stage_id: order_by
  update_user: order_by
  updatex_date: order_by
}

"""
response of any mutation on the table "workflow.adhoc_card"
"""
type workflow_adhoc_card_mutation_response {
  """
  number of affected rows by the mutation
  """
  affected_rows: Int!

  """
  data of the affected rows by the mutation
  """
  returning: [workflow_adhoc_card!]!
}

"""
input type for inserting object relation for remote table "workflow.adhoc_card"
"""
input workflow_adhoc_card_obj_rel_insert_input {
  data: workflow_adhoc_card_insert_input!
}

"""
ordering options when selecting data from "workflow.adhoc_card"
"""
input workflow_adhoc_card_order_by {
  NAME: order_by
  SCHEMA_NAME: order_by
  acc_no: order_by
  add_date: order_by
  add_user: order_by
  ads_udi: order_by
  batch_id: order_by
  check01: order_by
  check02: order_by
  check03: order_by
  check04: order_by
  check05: order_by
  check06: order_by
  check07: order_by
  check08: order_by
  check09: order_by
  check10: order_by
  check11: order_by
  check12: order_by
  check13: order_by
  check14: order_by
  check15: order_by
  check16: order_by
  check17: order_by
  check18: order_by
  check19: order_by
  check20: order_by
  check21: order_by
  check22: order_by
  check23: order_by
  check24: order_by
  check25: order_by
  check26: order_by
  check27: order_by
  check28: order_by
  check29: order_by
  check30: order_by
  decision_authority: order_by
  decision_date: order_by
  foia_exemption: order_by
  lsn_relevent: order_by
  notes: order_by
  process: order_by
  release_id: order_by
  release_info: order_by
  stage: order_by
  stage_id: order_by
  status: order_by
  update_user: order_by
  updatex_date: order_by
}

"""
select columns of table "workflow.adhoc_card"
"""
enum workflow_adhoc_card_select_column {
  """
  column name
  """
  NAME

  """
  column name
  """
  SCHEMA_NAME

  """
  column name
  """
  acc_no

  """
  column name
  """
  add_date

  """
  column name
  """
  add_user

  """
  column name
  """
  ads_udi

  """
  column name
  """
  batch_id

  """
  column name
  """
  check01

  """
  column name
  """
  check02

  """
  column name
  """
  check03

  """
  column name
  """
  check04

  """
  column name
  """
  check05

  """
  column name
  """
  check06

  """
  column name
  """
  check07

  """
  column name
  """
  check08

  """
  column name
  """
  check09

  """
  column name
  """
  check10

  """
  column name
  """
  check11

  """
  column name
  """
  check12

  """
  column name
  """
  check13

  """
  column name
  """
  check14

  """
  column name
  """
  check15

  """
  column name
  """
  check16

  """
  column name
  """
  check17

  """
  column name
  """
  check18

  """
  column name
  """
  check19

  """
  column name
  """
  check20

  """
  column name
  """
  check21

  """
  column name
  """
  check22

  """
  column name
  """
  check23

  """
  column name
  """
  check24

  """
  column name
  """
  check25

  """
  column name
  """
  check26

  """
  column name
  """
  check27

  """
  column name
  """
  check28

  """
  column name
  """
  check29

  """
  column name
  """
  check30

  """
  column name
  """
  decision_authority

  """
  column name
  """
  decision_date

  """
  column name
  """
  foia_exemption

  """
  column name
  """
  lsn_relevent

  """
  column name
  """
  notes

  """
  column name
  """
  process

  """
  column name
  """
  release_id

  """
  column name
  """
  release_info

  """
  column name
  """
  stage

  """
  column name
  """
  stage_id

  """
  column name
  """
  status

  """
  column name
  """
  update_user

  """
  column name
  """
  updatex_date
}

"""
input type for updating data in table "workflow.adhoc_card"
"""
input workflow_adhoc_card_set_input {
  NAME: String
  SCHEMA_NAME: String
  acc_no: String
  add_date: timestamp
  add_user: String
  ads_udi: String
  batch_id: float8
  check01: bpchar
  check02: bpchar
  check03: bpchar
  check04: bpchar
  check05: bpchar
  check06: bpchar
  check07: bpchar
  check08: bpchar
  check09: bpchar
  check10: bpchar
  check11: bpchar
  check12: bpchar
  check13: bpchar
  check14: bpchar
  check15: bpchar
  check16: bpchar
  check17: bpchar
  check18: bpchar
  check19: bpchar
  check20: bpchar
  check21: bpchar
  check22: bpchar
  check23: bpchar
  check24: bpchar
  check25: bpchar
  check26: bpchar
  check27: bpchar
  check28: bpchar
  check29: bpchar
  check30: bpchar
  decision_authority: String
  decision_date: timestamp
  foia_exemption: String
  lsn_relevent: bpchar
  notes: String
  process: String
  release_id: numeric
  release_info: String
  stage: String
  stage_id: float8
  status: bpchar
  update_user: String
  updatex_date: timestamp
}

"""
aggregate stddev on columns
"""
type workflow_adhoc_card_stddev_fields {
  batch_id: Float
  release_id: Float
  stage_id: Float
}

"""
order by stddev() on columns of table "workflow.adhoc_card"
"""
input workflow_adhoc_card_stddev_order_by {
  batch_id: order_by
  release_id: order_by
  stage_id: order_by
}

"""
aggregate stddev_pop on columns
"""
type workflow_adhoc_card_stddev_pop_fields {
  batch_id: Float
  release_id: Float
  stage_id: Float
}

"""
order by stddev_pop() on columns of table "workflow.adhoc_card"
"""
input workflow_adhoc_card_stddev_pop_order_by {
  batch_id: order_by
  release_id: order_by
  stage_id: order_by
}

"""
aggregate stddev_samp on columns
"""
type workflow_adhoc_card_stddev_samp_fields {
  batch_id: Float
  release_id: Float
  stage_id: Float
}

"""
order by stddev_samp() on columns of table "workflow.adhoc_card"
"""
input workflow_adhoc_card_stddev_samp_order_by {
  batch_id: order_by
  release_id: order_by
  stage_id: order_by
}

"""
aggregate sum on columns
"""
type workflow_adhoc_card_sum_fields {
  batch_id: float8
  release_id: numeric
  stage_id: float8
}

"""
order by sum() on columns of table "workflow.adhoc_card"
"""
input workflow_adhoc_card_sum_order_by {
  batch_id: order_by
  release_id: order_by
  stage_id: order_by
}

"""
aggregate var_pop on columns
"""
type workflow_adhoc_card_var_pop_fields {
  batch_id: Float
  release_id: Float
  stage_id: Float
}

"""
order by var_pop() on columns of table "workflow.adhoc_card"
"""
input workflow_adhoc_card_var_pop_order_by {
  batch_id: order_by
  release_id: order_by
  stage_id: order_by
}

"""
aggregate var_samp on columns
"""
type workflow_adhoc_card_var_samp_fields {
  batch_id: Float
  release_id: Float
  stage_id: Float
}

"""
order by var_samp() on columns of table "workflow.adhoc_card"
"""
input workflow_adhoc_card_var_samp_order_by {
  batch_id: order_by
  release_id: order_by
  stage_id: order_by
}

"""
aggregate variance on columns
"""
type workflow_adhoc_card_variance_fields {
  batch_id: Float
  release_id: Float
  stage_id: Float
}

"""
order by variance() on columns of table "workflow.adhoc_card"
"""
input workflow_adhoc_card_variance_order_by {
  batch_id: order_by
  release_id: order_by
  stage_id: order_by
}

"""
columns and relationships of "workflow.adhoc_checks"
"""
type workflow_adhoc_checks {
  ID: float8
  notes: String
  title: String
}

"""
aggregated selection of "workflow.adhoc_checks"
"""
type workflow_adhoc_checks_aggregate {
  aggregate: workflow_adhoc_checks_aggregate_fields
  nodes: [workflow_adhoc_checks!]!
}

"""
aggregate fields of "workflow.adhoc_checks"
"""
type workflow_adhoc_checks_aggregate_fields {
  avg: workflow_adhoc_checks_avg_fields
  count(columns: [workflow_adhoc_checks_select_column!], distinct: Boolean): Int
  max: workflow_adhoc_checks_max_fields
  min: workflow_adhoc_checks_min_fields
  stddev: workflow_adhoc_checks_stddev_fields
  stddev_pop: workflow_adhoc_checks_stddev_pop_fields
  stddev_samp: workflow_adhoc_checks_stddev_samp_fields
  sum: workflow_adhoc_checks_sum_fields
  var_pop: workflow_adhoc_checks_var_pop_fields
  var_samp: workflow_adhoc_checks_var_samp_fields
  variance: workflow_adhoc_checks_variance_fields
}

"""
order by aggregate values of table "workflow.adhoc_checks"
"""
input workflow_adhoc_checks_aggregate_order_by {
  avg: workflow_adhoc_checks_avg_order_by
  count: order_by
  max: workflow_adhoc_checks_max_order_by
  min: workflow_adhoc_checks_min_order_by
  stddev: workflow_adhoc_checks_stddev_order_by
  stddev_pop: workflow_adhoc_checks_stddev_pop_order_by
  stddev_samp: workflow_adhoc_checks_stddev_samp_order_by
  sum: workflow_adhoc_checks_sum_order_by
  var_pop: workflow_adhoc_checks_var_pop_order_by
  var_samp: workflow_adhoc_checks_var_samp_order_by
  variance: workflow_adhoc_checks_variance_order_by
}

"""
input type for inserting array relation for remote table "workflow.adhoc_checks"
"""
input workflow_adhoc_checks_arr_rel_insert_input {
  data: [workflow_adhoc_checks_insert_input!]!
}

"""
aggregate avg on columns
"""
type workflow_adhoc_checks_avg_fields {
  ID: Float
}

"""
order by avg() on columns of table "workflow.adhoc_checks"
"""
input workflow_adhoc_checks_avg_order_by {
  ID: order_by
}

"""
Boolean expression to filter rows from the table "workflow.adhoc_checks". All fields are combined with a logical 'AND'.
"""
input workflow_adhoc_checks_bool_exp {
  ID: float8_comparison_exp
  _and: [workflow_adhoc_checks_bool_exp]
  _not: workflow_adhoc_checks_bool_exp
  _or: [workflow_adhoc_checks_bool_exp]
  notes: String_comparison_exp
  title: String_comparison_exp
}

"""
input type for incrementing integer column in table "workflow.adhoc_checks"
"""
input workflow_adhoc_checks_inc_input {
  ID: float8
}

"""
input type for inserting data into table "workflow.adhoc_checks"
"""
input workflow_adhoc_checks_insert_input {
  ID: float8
  notes: String
  title: String
}

"""
aggregate max on columns
"""
type workflow_adhoc_checks_max_fields {
  ID: float8
  notes: String
  title: String
}

"""
order by max() on columns of table "workflow.adhoc_checks"
"""
input workflow_adhoc_checks_max_order_by {
  ID: order_by
  notes: order_by
  title: order_by
}

"""
aggregate min on columns
"""
type workflow_adhoc_checks_min_fields {
  ID: float8
  notes: String
  title: String
}

"""
order by min() on columns of table "workflow.adhoc_checks"
"""
input workflow_adhoc_checks_min_order_by {
  ID: order_by
  notes: order_by
  title: order_by
}

"""
response of any mutation on the table "workflow.adhoc_checks"
"""
type workflow_adhoc_checks_mutation_response {
  """
  number of affected rows by the mutation
  """
  affected_rows: Int!

  """
  data of the affected rows by the mutation
  """
  returning: [workflow_adhoc_checks!]!
}

"""
input type for inserting object relation for remote table "workflow.adhoc_checks"
"""
input workflow_adhoc_checks_obj_rel_insert_input {
  data: workflow_adhoc_checks_insert_input!
}

"""
ordering options when selecting data from "workflow.adhoc_checks"
"""
input workflow_adhoc_checks_order_by {
  ID: order_by
  notes: order_by
  title: order_by
}

"""
select columns of table "workflow.adhoc_checks"
"""
enum workflow_adhoc_checks_select_column {
  """
  column name
  """
  ID

  """
  column name
  """
  notes

  """
  column name
  """
  title
}

"""
input type for updating data in table "workflow.adhoc_checks"
"""
input workflow_adhoc_checks_set_input {
  ID: float8
  notes: String
  title: String
}

"""
aggregate stddev on columns
"""
type workflow_adhoc_checks_stddev_fields {
  ID: Float
}

"""
order by stddev() on columns of table "workflow.adhoc_checks"
"""
input workflow_adhoc_checks_stddev_order_by {
  ID: order_by
}

"""
aggregate stddev_pop on columns
"""
type workflow_adhoc_checks_stddev_pop_fields {
  ID: Float
}

"""
order by stddev_pop() on columns of table "workflow.adhoc_checks"
"""
input workflow_adhoc_checks_stddev_pop_order_by {
  ID: order_by
}

"""
aggregate stddev_samp on columns
"""
type workflow_adhoc_checks_stddev_samp_fields {
  ID: Float
}

"""
order by stddev_samp() on columns of table "workflow.adhoc_checks"
"""
input workflow_adhoc_checks_stddev_samp_order_by {
  ID: order_by
}

"""
aggregate sum on columns
"""
type workflow_adhoc_checks_sum_fields {
  ID: float8
}

"""
order by sum() on columns of table "workflow.adhoc_checks"
"""
input workflow_adhoc_checks_sum_order_by {
  ID: order_by
}

"""
aggregate var_pop on columns
"""
type workflow_adhoc_checks_var_pop_fields {
  ID: Float
}

"""
order by var_pop() on columns of table "workflow.adhoc_checks"
"""
input workflow_adhoc_checks_var_pop_order_by {
  ID: order_by
}

"""
aggregate var_samp on columns
"""
type workflow_adhoc_checks_var_samp_fields {
  ID: Float
}

"""
order by var_samp() on columns of table "workflow.adhoc_checks"
"""
input workflow_adhoc_checks_var_samp_order_by {
  ID: order_by
}

"""
aggregate variance on columns
"""
type workflow_adhoc_checks_variance_fields {
  ID: Float
}

"""
order by variance() on columns of table "workflow.adhoc_checks"
"""
input workflow_adhoc_checks_variance_order_by {
  ID: order_by
}

"""
input type for incrementing integer column in table "workflow.adhoc"
"""
input workflow_adhoc_inc_input {
  doc_id: float8
}

"""
input type for inserting data into table "workflow.adhoc"
"""
input workflow_adhoc_insert_input {
  NAME: String
  SECURITY: String
  adddate: timestamp
  adduser: String
  copyright: String
  decision_authority: String
  decisiondate: timestamp
  doc_id: float8
  foia: String
  legal: String
  legal_protection: String
  privacy: String
  process: String
  proprietary: String
  security_protection: String
  updateuser: String
  updatex: timestamp
}

"""
aggregate max on columns
"""
type workflow_adhoc_max_fields {
  NAME: String
  SECURITY: String
  adddate: timestamp
  adduser: String
  copyright: String
  decision_authority: String
  decisiondate: timestamp
  doc_id: float8
  foia: String
  legal: String
  legal_protection: String
  privacy: String
  process: String
  proprietary: String
  security_protection: String
  updateuser: String
  updatex: timestamp
}

"""
order by max() on columns of table "workflow.adhoc"
"""
input workflow_adhoc_max_order_by {
  NAME: order_by
  SECURITY: order_by
  adddate: order_by
  adduser: order_by
  copyright: order_by
  decision_authority: order_by
  decisiondate: order_by
  doc_id: order_by
  foia: order_by
  legal: order_by
  legal_protection: order_by
  privacy: order_by
  process: order_by
  proprietary: order_by
  security_protection: order_by
  updateuser: order_by
  updatex: order_by
}

"""
aggregate min on columns
"""
type workflow_adhoc_min_fields {
  NAME: String
  SECURITY: String
  adddate: timestamp
  adduser: String
  copyright: String
  decision_authority: String
  decisiondate: timestamp
  doc_id: float8
  foia: String
  legal: String
  legal_protection: String
  privacy: String
  process: String
  proprietary: String
  security_protection: String
  updateuser: String
  updatex: timestamp
}

"""
order by min() on columns of table "workflow.adhoc"
"""
input workflow_adhoc_min_order_by {
  NAME: order_by
  SECURITY: order_by
  adddate: order_by
  adduser: order_by
  copyright: order_by
  decision_authority: order_by
  decisiondate: order_by
  doc_id: order_by
  foia: order_by
  legal: order_by
  legal_protection: order_by
  privacy: order_by
  process: order_by
  proprietary: order_by
  security_protection: order_by
  updateuser: order_by
  updatex: order_by
}

"""
response of any mutation on the table "workflow.adhoc"
"""
type workflow_adhoc_mutation_response {
  """
  number of affected rows by the mutation
  """
  affected_rows: Int!

  """
  data of the affected rows by the mutation
  """
  returning: [workflow_adhoc!]!
}

"""
input type for inserting object relation for remote table "workflow.adhoc"
"""
input workflow_adhoc_obj_rel_insert_input {
  data: workflow_adhoc_insert_input!
}

"""
ordering options when selecting data from "workflow.adhoc"
"""
input workflow_adhoc_order_by {
  NAME: order_by
  SECURITY: order_by
  adddate: order_by
  adduser: order_by
  copyright: order_by
  decision_authority: order_by
  decisiondate: order_by
  doc_id: order_by
  foia: order_by
  legal: order_by
  legal_protection: order_by
  privacy: order_by
  process: order_by
  proprietary: order_by
  security_protection: order_by
  updateuser: order_by
  updatex: order_by
}

"""
columns and relationships of "workflow.adhoc_requests"
"""
type workflow_adhoc_requests {
  ads_udi: String
  p_acc_no: String
}

"""
aggregated selection of "workflow.adhoc_requests"
"""
type workflow_adhoc_requests_aggregate {
  aggregate: workflow_adhoc_requests_aggregate_fields
  nodes: [workflow_adhoc_requests!]!
}

"""
aggregate fields of "workflow.adhoc_requests"
"""
type workflow_adhoc_requests_aggregate_fields {
  count(columns: [workflow_adhoc_requests_select_column!], distinct: Boolean): Int
  max: workflow_adhoc_requests_max_fields
  min: workflow_adhoc_requests_min_fields
}

"""
order by aggregate values of table "workflow.adhoc_requests"
"""
input workflow_adhoc_requests_aggregate_order_by {
  count: order_by
  max: workflow_adhoc_requests_max_order_by
  min: workflow_adhoc_requests_min_order_by
}

"""
input type for inserting array relation for remote table "workflow.adhoc_requests"
"""
input workflow_adhoc_requests_arr_rel_insert_input {
  data: [workflow_adhoc_requests_insert_input!]!
}

"""
Boolean expression to filter rows from the table "workflow.adhoc_requests". All fields are combined with a logical 'AND'.
"""
input workflow_adhoc_requests_bool_exp {
  _and: [workflow_adhoc_requests_bool_exp]
  _not: workflow_adhoc_requests_bool_exp
  _or: [workflow_adhoc_requests_bool_exp]
  ads_udi: String_comparison_exp
  p_acc_no: String_comparison_exp
}

"""
input type for inserting data into table "workflow.adhoc_requests"
"""
input workflow_adhoc_requests_insert_input {
  ads_udi: String
  p_acc_no: String
}

"""
aggregate max on columns
"""
type workflow_adhoc_requests_max_fields {
  ads_udi: String
  p_acc_no: String
}

"""
order by max() on columns of table "workflow.adhoc_requests"
"""
input workflow_adhoc_requests_max_order_by {
  ads_udi: order_by
  p_acc_no: order_by
}

"""
aggregate min on columns
"""
type workflow_adhoc_requests_min_fields {
  ads_udi: String
  p_acc_no: String
}

"""
order by min() on columns of table "workflow.adhoc_requests"
"""
input workflow_adhoc_requests_min_order_by {
  ads_udi: order_by
  p_acc_no: order_by
}

"""
response of any mutation on the table "workflow.adhoc_requests"
"""
type workflow_adhoc_requests_mutation_response {
  """
  number of affected rows by the mutation
  """
  affected_rows: Int!

  """
  data of the affected rows by the mutation
  """
  returning: [workflow_adhoc_requests!]!
}

"""
input type for inserting object relation for remote table "workflow.adhoc_requests"
"""
input workflow_adhoc_requests_obj_rel_insert_input {
  data: workflow_adhoc_requests_insert_input!
}

"""
ordering options when selecting data from "workflow.adhoc_requests"
"""
input workflow_adhoc_requests_order_by {
  ads_udi: order_by
  p_acc_no: order_by
}

"""
select columns of table "workflow.adhoc_requests"
"""
enum workflow_adhoc_requests_select_column {
  """
  column name
  """
  ads_udi

  """
  column name
  """
  p_acc_no
}

"""
input type for updating data in table "workflow.adhoc_requests"
"""
input workflow_adhoc_requests_set_input {
  ads_udi: String
  p_acc_no: String
}

"""
select columns of table "workflow.adhoc"
"""
enum workflow_adhoc_select_column {
  """
  column name
  """
  NAME

  """
  column name
  """
  SECURITY

  """
  column name
  """
  adddate

  """
  column name
  """
  adduser

  """
  column name
  """
  copyright

  """
  column name
  """
  decision_authority

  """
  column name
  """
  decisiondate

  """
  column name
  """
  doc_id

  """
  column name
  """
  foia

  """
  column name
  """
  legal

  """
  column name
  """
  legal_protection

  """
  column name
  """
  privacy

  """
  column name
  """
  process

  """
  column name
  """
  proprietary

  """
  column name
  """
  security_protection

  """
  column name
  """
  updateuser

  """
  column name
  """
  updatex
}

"""
input type for updating data in table "workflow.adhoc"
"""
input workflow_adhoc_set_input {
  NAME: String
  SECURITY: String
  adddate: timestamp
  adduser: String
  copyright: String
  decision_authority: String
  decisiondate: timestamp
  doc_id: float8
  foia: String
  legal: String
  legal_protection: String
  privacy: String
  process: String
  proprietary: String
  security_protection: String
  updateuser: String
  updatex: timestamp
}

"""
aggregate stddev on columns
"""
type workflow_adhoc_stddev_fields {
  doc_id: Float
}

"""
order by stddev() on columns of table "workflow.adhoc"
"""
input workflow_adhoc_stddev_order_by {
  doc_id: order_by
}

"""
aggregate stddev_pop on columns
"""
type workflow_adhoc_stddev_pop_fields {
  doc_id: Float
}

"""
order by stddev_pop() on columns of table "workflow.adhoc"
"""
input workflow_adhoc_stddev_pop_order_by {
  doc_id: order_by
}

"""
aggregate stddev_samp on columns
"""
type workflow_adhoc_stddev_samp_fields {
  doc_id: Float
}

"""
order by stddev_samp() on columns of table "workflow.adhoc"
"""
input workflow_adhoc_stddev_samp_order_by {
  doc_id: order_by
}

"""
aggregate sum on columns
"""
type workflow_adhoc_sum_fields {
  doc_id: float8
}

"""
order by sum() on columns of table "workflow.adhoc"
"""
input workflow_adhoc_sum_order_by {
  doc_id: order_by
}

"""
aggregate var_pop on columns
"""
type workflow_adhoc_var_pop_fields {
  doc_id: Float
}

"""
order by var_pop() on columns of table "workflow.adhoc"
"""
input workflow_adhoc_var_pop_order_by {
  doc_id: order_by
}

"""
aggregate var_samp on columns
"""
type workflow_adhoc_var_samp_fields {
  doc_id: Float
}

"""
order by var_samp() on columns of table "workflow.adhoc"
"""
input workflow_adhoc_var_samp_order_by {
  doc_id: order_by
}

"""
aggregate variance on columns
"""
type workflow_adhoc_variance_fields {
  doc_id: Float
}

"""
order by variance() on columns of table "workflow.adhoc"
"""
input workflow_adhoc_variance_order_by {
  doc_id: order_by
}

"""
columns and relationships of "workflow.call_center_acc_no"
"""
type workflow_call_center_acc_no {
  NAME: String
  acc_no: String
  add_date: timestamp
  add_user: String
  ads_udi: String
  batch_id: float8

  """
  An object relationship
  """
  call_center_name: workflow_call_center_batch
  check01: bpchar
  check02: bpchar
  check03: bpchar
  check04: bpchar
  check05: bpchar
  check06: bpchar
  check07: bpchar
  check08: bpchar
  check09: bpchar
  check10: bpchar
  check11: bpchar
  check12: bpchar
  check13: bpchar
  check14: bpchar
  check15: bpchar
  check16: bpchar
  check17: bpchar
  check18: bpchar
  check19: bpchar
  check20: bpchar
  check21: bpchar
  check22: bpchar
  check23: bpchar
  check24: bpchar
  check25: bpchar
  check26: bpchar
  check27: bpchar
  check28: bpchar
  check29: bpchar
  check30: bpchar
  decision_authority: String
  decision_date: timestamp
  foia_exemption: String
  lsn_relevent: bpchar
  notes: String
  process: String
  status: bpchar
  update_user: String
  updatex_date: timestamp
}

"""
aggregated selection of "workflow.call_center_acc_no"
"""
type workflow_call_center_acc_no_aggregate {
  aggregate: workflow_call_center_acc_no_aggregate_fields
  nodes: [workflow_call_center_acc_no!]!
}

"""
aggregate fields of "workflow.call_center_acc_no"
"""
type workflow_call_center_acc_no_aggregate_fields {
  avg: workflow_call_center_acc_no_avg_fields
  count(columns: [workflow_call_center_acc_no_select_column!], distinct: Boolean): Int
  max: workflow_call_center_acc_no_max_fields
  min: workflow_call_center_acc_no_min_fields
  stddev: workflow_call_center_acc_no_stddev_fields
  stddev_pop: workflow_call_center_acc_no_stddev_pop_fields
  stddev_samp: workflow_call_center_acc_no_stddev_samp_fields
  sum: workflow_call_center_acc_no_sum_fields
  var_pop: workflow_call_center_acc_no_var_pop_fields
  var_samp: workflow_call_center_acc_no_var_samp_fields
  variance: workflow_call_center_acc_no_variance_fields
}

"""
order by aggregate values of table "workflow.call_center_acc_no"
"""
input workflow_call_center_acc_no_aggregate_order_by {
  avg: workflow_call_center_acc_no_avg_order_by
  count: order_by
  max: workflow_call_center_acc_no_max_order_by
  min: workflow_call_center_acc_no_min_order_by
  stddev: workflow_call_center_acc_no_stddev_order_by
  stddev_pop: workflow_call_center_acc_no_stddev_pop_order_by
  stddev_samp: workflow_call_center_acc_no_stddev_samp_order_by
  sum: workflow_call_center_acc_no_sum_order_by
  var_pop: workflow_call_center_acc_no_var_pop_order_by
  var_samp: workflow_call_center_acc_no_var_samp_order_by
  variance: workflow_call_center_acc_no_variance_order_by
}

"""
input type for inserting array relation for remote table "workflow.call_center_acc_no"
"""
input workflow_call_center_acc_no_arr_rel_insert_input {
  data: [workflow_call_center_acc_no_insert_input!]!
}

"""
aggregate avg on columns
"""
type workflow_call_center_acc_no_avg_fields {
  batch_id: Float
}

"""
order by avg() on columns of table "workflow.call_center_acc_no"
"""
input workflow_call_center_acc_no_avg_order_by {
  batch_id: order_by
}

"""
Boolean expression to filter rows from the table "workflow.call_center_acc_no".
All fields are combined with a logical 'AND'.
"""
input workflow_call_center_acc_no_bool_exp {
  NAME: String_comparison_exp
  _and: [workflow_call_center_acc_no_bool_exp]
  _not: workflow_call_center_acc_no_bool_exp
  _or: [workflow_call_center_acc_no_bool_exp]
  acc_no: String_comparison_exp
  add_date: timestamp_comparison_exp
  add_user: String_comparison_exp
  ads_udi: String_comparison_exp
  batch_id: float8_comparison_exp
  call_center_name: workflow_call_center_batch_bool_exp
  check01: bpchar_comparison_exp
  check02: bpchar_comparison_exp
  check03: bpchar_comparison_exp
  check04: bpchar_comparison_exp
  check05: bpchar_comparison_exp
  check06: bpchar_comparison_exp
  check07: bpchar_comparison_exp
  check08: bpchar_comparison_exp
  check09: bpchar_comparison_exp
  check10: bpchar_comparison_exp
  check11: bpchar_comparison_exp
  check12: bpchar_comparison_exp
  check13: bpchar_comparison_exp
  check14: bpchar_comparison_exp
  check15: bpchar_comparison_exp
  check16: bpchar_comparison_exp
  check17: bpchar_comparison_exp
  check18: bpchar_comparison_exp
  check19: bpchar_comparison_exp
  check20: bpchar_comparison_exp
  check21: bpchar_comparison_exp
  check22: bpchar_comparison_exp
  check23: bpchar_comparison_exp
  check24: bpchar_comparison_exp
  check25: bpchar_comparison_exp
  check26: bpchar_comparison_exp
  check27: bpchar_comparison_exp
  check28: bpchar_comparison_exp
  check29: bpchar_comparison_exp
  check30: bpchar_comparison_exp
  decision_authority: String_comparison_exp
  decision_date: timestamp_comparison_exp
  foia_exemption: String_comparison_exp
  lsn_relevent: bpchar_comparison_exp
  notes: String_comparison_exp
  process: String_comparison_exp
  status: bpchar_comparison_exp
  update_user: String_comparison_exp
  updatex_date: timestamp_comparison_exp
}

"""
input type for incrementing integer column in table "workflow.call_center_acc_no"
"""
input workflow_call_center_acc_no_inc_input {
  batch_id: float8
}

"""
input type for inserting data into table "workflow.call_center_acc_no"
"""
input workflow_call_center_acc_no_insert_input {
  NAME: String
  acc_no: String
  add_date: timestamp
  add_user: String
  ads_udi: String
  batch_id: float8
  call_center_name: workflow_call_center_batch_obj_rel_insert_input
  check01: bpchar
  check02: bpchar
  check03: bpchar
  check04: bpchar
  check05: bpchar
  check06: bpchar
  check07: bpchar
  check08: bpchar
  check09: bpchar
  check10: bpchar
  check11: bpchar
  check12: bpchar
  check13: bpchar
  check14: bpchar
  check15: bpchar
  check16: bpchar
  check17: bpchar
  check18: bpchar
  check19: bpchar
  check20: bpchar
  check21: bpchar
  check22: bpchar
  check23: bpchar
  check24: bpchar
  check25: bpchar
  check26: bpchar
  check27: bpchar
  check28: bpchar
  check29: bpchar
  check30: bpchar
  decision_authority: String
  decision_date: timestamp
  foia_exemption: String
  lsn_relevent: bpchar
  notes: String
  process: String
  status: bpchar
  update_user: String
  updatex_date: timestamp
}

"""
aggregate max on columns
"""
type workflow_call_center_acc_no_max_fields {
  NAME: String
  acc_no: String
  add_date: timestamp
  add_user: String
  ads_udi: String
  batch_id: float8
  decision_authority: String
  decision_date: timestamp
  foia_exemption: String
  notes: String
  process: String
  update_user: String
  updatex_date: timestamp
}

"""
order by max() on columns of table "workflow.call_center_acc_no"
"""
input workflow_call_center_acc_no_max_order_by {
  NAME: order_by
  acc_no: order_by
  add_date: order_by
  add_user: order_by
  ads_udi: order_by
  batch_id: order_by
  decision_authority: order_by
  decision_date: order_by
  foia_exemption: order_by
  notes: order_by
  process: order_by
  update_user: order_by
  updatex_date: order_by
}

"""
aggregate min on columns
"""
type workflow_call_center_acc_no_min_fields {
  NAME: String
  acc_no: String
  add_date: timestamp
  add_user: String
  ads_udi: String
  batch_id: float8
  decision_authority: String
  decision_date: timestamp
  foia_exemption: String
  notes: String
  process: String
  update_user: String
  updatex_date: timestamp
}

"""
order by min() on columns of table "workflow.call_center_acc_no"
"""
input workflow_call_center_acc_no_min_order_by {
  NAME: order_by
  acc_no: order_by
  add_date: order_by
  add_user: order_by
  ads_udi: order_by
  batch_id: order_by
  decision_authority: order_by
  decision_date: order_by
  foia_exemption: order_by
  notes: order_by
  process: order_by
  update_user: order_by
  updatex_date: order_by
}

"""
response of any mutation on the table "workflow.call_center_acc_no"
"""
type workflow_call_center_acc_no_mutation_response {
  """
  number of affected rows by the mutation
  """
  affected_rows: Int!

  """
  data of the affected rows by the mutation
  """
  returning: [workflow_call_center_acc_no!]!
}

"""
input type for inserting object relation for remote table "workflow.call_center_acc_no"
"""
input workflow_call_center_acc_no_obj_rel_insert_input {
  data: workflow_call_center_acc_no_insert_input!
}

"""
ordering options when selecting data from "workflow.call_center_acc_no"
"""
input workflow_call_center_acc_no_order_by {
  NAME: order_by
  acc_no: order_by
  add_date: order_by
  add_user: order_by
  ads_udi: order_by
  batch_id: order_by
  call_center_name: workflow_call_center_batch_order_by
  check01: order_by
  check02: order_by
  check03: order_by
  check04: order_by
  check05: order_by
  check06: order_by
  check07: order_by
  check08: order_by
  check09: order_by
  check10: order_by
  check11: order_by
  check12: order_by
  check13: order_by
  check14: order_by
  check15: order_by
  check16: order_by
  check17: order_by
  check18: order_by
  check19: order_by
  check20: order_by
  check21: order_by
  check22: order_by
  check23: order_by
  check24: order_by
  check25: order_by
  check26: order_by
  check27: order_by
  check28: order_by
  check29: order_by
  check30: order_by
  decision_authority: order_by
  decision_date: order_by
  foia_exemption: order_by
  lsn_relevent: order_by
  notes: order_by
  process: order_by
  status: order_by
  update_user: order_by
  updatex_date: order_by
}

"""
select columns of table "workflow.call_center_acc_no"
"""
enum workflow_call_center_acc_no_select_column {
  """
  column name
  """
  NAME

  """
  column name
  """
  acc_no

  """
  column name
  """
  add_date

  """
  column name
  """
  add_user

  """
  column name
  """
  ads_udi

  """
  column name
  """
  batch_id

  """
  column name
  """
  check01

  """
  column name
  """
  check02

  """
  column name
  """
  check03

  """
  column name
  """
  check04

  """
  column name
  """
  check05

  """
  column name
  """
  check06

  """
  column name
  """
  check07

  """
  column name
  """
  check08

  """
  column name
  """
  check09

  """
  column name
  """
  check10

  """
  column name
  """
  check11

  """
  column name
  """
  check12

  """
  column name
  """
  check13

  """
  column name
  """
  check14

  """
  column name
  """
  check15

  """
  column name
  """
  check16

  """
  column name
  """
  check17

  """
  column name
  """
  check18

  """
  column name
  """
  check19

  """
  column name
  """
  check20

  """
  column name
  """
  check21

  """
  column name
  """
  check22

  """
  column name
  """
  check23

  """
  column name
  """
  check24

  """
  column name
  """
  check25

  """
  column name
  """
  check26

  """
  column name
  """
  check27

  """
  column name
  """
  check28

  """
  column name
  """
  check29

  """
  column name
  """
  check30

  """
  column name
  """
  decision_authority

  """
  column name
  """
  decision_date

  """
  column name
  """
  foia_exemption

  """
  column name
  """
  lsn_relevent

  """
  column name
  """
  notes

  """
  column name
  """
  process

  """
  column name
  """
  status

  """
  column name
  """
  update_user

  """
  column name
  """
  updatex_date
}

"""
input type for updating data in table "workflow.call_center_acc_no"
"""
input workflow_call_center_acc_no_set_input {
  NAME: String
  acc_no: String
  add_date: timestamp
  add_user: String
  ads_udi: String
  batch_id: float8
  check01: bpchar
  check02: bpchar
  check03: bpchar
  check04: bpchar
  check05: bpchar
  check06: bpchar
  check07: bpchar
  check08: bpchar
  check09: bpchar
  check10: bpchar
  check11: bpchar
  check12: bpchar
  check13: bpchar
  check14: bpchar
  check15: bpchar
  check16: bpchar
  check17: bpchar
  check18: bpchar
  check19: bpchar
  check20: bpchar
  check21: bpchar
  check22: bpchar
  check23: bpchar
  check24: bpchar
  check25: bpchar
  check26: bpchar
  check27: bpchar
  check28: bpchar
  check29: bpchar
  check30: bpchar
  decision_authority: String
  decision_date: timestamp
  foia_exemption: String
  lsn_relevent: bpchar
  notes: String
  process: String
  status: bpchar
  update_user: String
  updatex_date: timestamp
}

"""
aggregate stddev on columns
"""
type workflow_call_center_acc_no_stddev_fields {
  batch_id: Float
}

"""
order by stddev() on columns of table "workflow.call_center_acc_no"
"""
input workflow_call_center_acc_no_stddev_order_by {
  batch_id: order_by
}

"""
aggregate stddev_pop on columns
"""
type workflow_call_center_acc_no_stddev_pop_fields {
  batch_id: Float
}

"""
order by stddev_pop() on columns of table "workflow.call_center_acc_no"
"""
input workflow_call_center_acc_no_stddev_pop_order_by {
  batch_id: order_by
}

"""
aggregate stddev_samp on columns
"""
type workflow_call_center_acc_no_stddev_samp_fields {
  batch_id: Float
}

"""
order by stddev_samp() on columns of table "workflow.call_center_acc_no"
"""
input workflow_call_center_acc_no_stddev_samp_order_by {
  batch_id: order_by
}

"""
aggregate sum on columns
"""
type workflow_call_center_acc_no_sum_fields {
  batch_id: float8
}

"""
order by sum() on columns of table "workflow.call_center_acc_no"
"""
input workflow_call_center_acc_no_sum_order_by {
  batch_id: order_by
}

"""
aggregate var_pop on columns
"""
type workflow_call_center_acc_no_var_pop_fields {
  batch_id: Float
}

"""
order by var_pop() on columns of table "workflow.call_center_acc_no"
"""
input workflow_call_center_acc_no_var_pop_order_by {
  batch_id: order_by
}

"""
aggregate var_samp on columns
"""
type workflow_call_center_acc_no_var_samp_fields {
  batch_id: Float
}

"""
order by var_samp() on columns of table "workflow.call_center_acc_no"
"""
input workflow_call_center_acc_no_var_samp_order_by {
  batch_id: order_by
}

"""
aggregate variance on columns
"""
type workflow_call_center_acc_no_variance_fields {
  batch_id: Float
}

"""
order by variance() on columns of table "workflow.call_center_acc_no"
"""
input workflow_call_center_acc_no_variance_order_by {
  batch_id: order_by
}

"""
columns and relationships of "workflow.call_center_batch"
"""
type workflow_call_center_batch {
  batch_id: float8!
  call_date: timestamp
  caller: String
  caller_contact: String
  caller_email: String
  concerns: String
  count_acc: float8
  count_dup: float8
  count_invalid: float8
  dups_acc_no: String
  enter_date: timestamp
  enter_user: String
  invalid_acc_no: String
  q_foia: String
  q_legal: String
  q_security: String
  status: bpchar
}

"""
aggregated selection of "workflow.call_center_batch"
"""
type workflow_call_center_batch_aggregate {
  aggregate: workflow_call_center_batch_aggregate_fields
  nodes: [workflow_call_center_batch!]!
}

"""
aggregate fields of "workflow.call_center_batch"
"""
type workflow_call_center_batch_aggregate_fields {
  avg: workflow_call_center_batch_avg_fields
  count(columns: [workflow_call_center_batch_select_column!], distinct: Boolean): Int
  max: workflow_call_center_batch_max_fields
  min: workflow_call_center_batch_min_fields
  stddev: workflow_call_center_batch_stddev_fields
  stddev_pop: workflow_call_center_batch_stddev_pop_fields
  stddev_samp: workflow_call_center_batch_stddev_samp_fields
  sum: workflow_call_center_batch_sum_fields
  var_pop: workflow_call_center_batch_var_pop_fields
  var_samp: workflow_call_center_batch_var_samp_fields
  variance: workflow_call_center_batch_variance_fields
}

"""
order by aggregate values of table "workflow.call_center_batch"
"""
input workflow_call_center_batch_aggregate_order_by {
  avg: workflow_call_center_batch_avg_order_by
  count: order_by
  max: workflow_call_center_batch_max_order_by
  min: workflow_call_center_batch_min_order_by
  stddev: workflow_call_center_batch_stddev_order_by
  stddev_pop: workflow_call_center_batch_stddev_pop_order_by
  stddev_samp: workflow_call_center_batch_stddev_samp_order_by
  sum: workflow_call_center_batch_sum_order_by
  var_pop: workflow_call_center_batch_var_pop_order_by
  var_samp: workflow_call_center_batch_var_samp_order_by
  variance: workflow_call_center_batch_variance_order_by
}

"""
input type for inserting array relation for remote table "workflow.call_center_batch"
"""
input workflow_call_center_batch_arr_rel_insert_input {
  data: [workflow_call_center_batch_insert_input!]!
  on_conflict: workflow_call_center_batch_on_conflict
}

"""
aggregate avg on columns
"""
type workflow_call_center_batch_avg_fields {
  batch_id: Float
  count_acc: Float
  count_dup: Float
  count_invalid: Float
}

"""
order by avg() on columns of table "workflow.call_center_batch"
"""
input workflow_call_center_batch_avg_order_by {
  batch_id: order_by
  count_acc: order_by
  count_dup: order_by
  count_invalid: order_by
}

"""
Boolean expression to filter rows from the table "workflow.call_center_batch". All fields are combined with a logical 'AND'.
"""
input workflow_call_center_batch_bool_exp {
  _and: [workflow_call_center_batch_bool_exp]
  _not: workflow_call_center_batch_bool_exp
  _or: [workflow_call_center_batch_bool_exp]
  batch_id: float8_comparison_exp
  call_date: timestamp_comparison_exp
  caller: String_comparison_exp
  caller_contact: String_comparison_exp
  caller_email: String_comparison_exp
  concerns: String_comparison_exp
  count_acc: float8_comparison_exp
  count_dup: float8_comparison_exp
  count_invalid: float8_comparison_exp
  dups_acc_no: String_comparison_exp
  enter_date: timestamp_comparison_exp
  enter_user: String_comparison_exp
  invalid_acc_no: String_comparison_exp
  q_foia: String_comparison_exp
  q_legal: String_comparison_exp
  q_security: String_comparison_exp
  status: bpchar_comparison_exp
}

"""
unique or primary key constraints on table "workflow.call_center_batch"
"""
enum workflow_call_center_batch_constraint {
  """
  unique or primary key constraint
  """
  call_center_batch_pkey
}

"""
input type for incrementing integer column in table "workflow.call_center_batch"
"""
input workflow_call_center_batch_inc_input {
  batch_id: float8
  count_acc: float8
  count_dup: float8
  count_invalid: float8
}

"""
input type for inserting data into table "workflow.call_center_batch"
"""
input workflow_call_center_batch_insert_input {
  batch_id: float8
  call_date: timestamp
  caller: String
  caller_contact: String
  caller_email: String
  concerns: String
  count_acc: float8
  count_dup: float8
  count_invalid: float8
  dups_acc_no: String
  enter_date: timestamp
  enter_user: String
  invalid_acc_no: String
  q_foia: String
  q_legal: String
  q_security: String
  status: bpchar
}

"""
aggregate max on columns
"""
type workflow_call_center_batch_max_fields {
  batch_id: float8
  call_date: timestamp
  caller: String
  caller_contact: String
  caller_email: String
  concerns: String
  count_acc: float8
  count_dup: float8
  count_invalid: float8
  dups_acc_no: String
  enter_date: timestamp
  enter_user: String
  invalid_acc_no: String
  q_foia: String
  q_legal: String
  q_security: String
}

"""
order by max() on columns of table "workflow.call_center_batch"
"""
input workflow_call_center_batch_max_order_by {
  batch_id: order_by
  call_date: order_by
  caller: order_by
  caller_contact: order_by
  caller_email: order_by
  concerns: order_by
  count_acc: order_by
  count_dup: order_by
  count_invalid: order_by
  dups_acc_no: order_by
  enter_date: order_by
  enter_user: order_by
  invalid_acc_no: order_by
  q_foia: order_by
  q_legal: order_by
  q_security: order_by
}

"""
aggregate min on columns
"""
type workflow_call_center_batch_min_fields {
  batch_id: float8
  call_date: timestamp
  caller: String
  caller_contact: String
  caller_email: String
  concerns: String
  count_acc: float8
  count_dup: float8
  count_invalid: float8
  dups_acc_no: String
  enter_date: timestamp
  enter_user: String
  invalid_acc_no: String
  q_foia: String
  q_legal: String
  q_security: String
}

"""
order by min() on columns of table "workflow.call_center_batch"
"""
input workflow_call_center_batch_min_order_by {
  batch_id: order_by
  call_date: order_by
  caller: order_by
  caller_contact: order_by
  caller_email: order_by
  concerns: order_by
  count_acc: order_by
  count_dup: order_by
  count_invalid: order_by
  dups_acc_no: order_by
  enter_date: order_by
  enter_user: order_by
  invalid_acc_no: order_by
  q_foia: order_by
  q_legal: order_by
  q_security: order_by
}

"""
response of any mutation on the table "workflow.call_center_batch"
"""
type workflow_call_center_batch_mutation_response {
  """
  number of affected rows by the mutation
  """
  affected_rows: Int!

  """
  data of the affected rows by the mutation
  """
  returning: [workflow_call_center_batch!]!
}

"""
input type for inserting object relation for remote table "workflow.call_center_batch"
"""
input workflow_call_center_batch_obj_rel_insert_input {
  data: workflow_call_center_batch_insert_input!
  on_conflict: workflow_call_center_batch_on_conflict
}

"""
on conflict condition type for table "workflow.call_center_batch"
"""
input workflow_call_center_batch_on_conflict {
  constraint: workflow_call_center_batch_constraint!
  update_columns: [workflow_call_center_batch_update_column!]!
  where: workflow_call_center_batch_bool_exp
}

"""
ordering options when selecting data from "workflow.call_center_batch"
"""
input workflow_call_center_batch_order_by {
  batch_id: order_by
  call_date: order_by
  caller: order_by
  caller_contact: order_by
  caller_email: order_by
  concerns: order_by
  count_acc: order_by
  count_dup: order_by
  count_invalid: order_by
  dups_acc_no: order_by
  enter_date: order_by
  enter_user: order_by
  invalid_acc_no: order_by
  q_foia: order_by
  q_legal: order_by
  q_security: order_by
  status: order_by
}

"""
primary key columns input for table: "workflow.call_center_batch"
"""
input workflow_call_center_batch_pk_columns_input {
  batch_id: float8!
}

"""
select columns of table "workflow.call_center_batch"
"""
enum workflow_call_center_batch_select_column {
  """
  column name
  """
  batch_id

  """
  column name
  """
  call_date

  """
  column name
  """
  caller

  """
  column name
  """
  caller_contact

  """
  column name
  """
  caller_email

  """
  column name
  """
  concerns

  """
  column name
  """
  count_acc

  """
  column name
  """
  count_dup

  """
  column name
  """
  count_invalid

  """
  column name
  """
  dups_acc_no

  """
  column name
  """
  enter_date

  """
  column name
  """
  enter_user

  """
  column name
  """
  invalid_acc_no

  """
  column name
  """
  q_foia

  """
  column name
  """
  q_legal

  """
  column name
  """
  q_security

  """
  column name
  """
  status
}

"""
input type for updating data in table "workflow.call_center_batch"
"""
input workflow_call_center_batch_set_input {
  batch_id: float8
  call_date: timestamp
  caller: String
  caller_contact: String
  caller_email: String
  concerns: String
  count_acc: float8
  count_dup: float8
  count_invalid: float8
  dups_acc_no: String
  enter_date: timestamp
  enter_user: String
  invalid_acc_no: String
  q_foia: String
  q_legal: String
  q_security: String
  status: bpchar
}

"""
aggregate stddev on columns
"""
type workflow_call_center_batch_stddev_fields {
  batch_id: Float
  count_acc: Float
  count_dup: Float
  count_invalid: Float
}

"""
order by stddev() on columns of table "workflow.call_center_batch"
"""
input workflow_call_center_batch_stddev_order_by {
  batch_id: order_by
  count_acc: order_by
  count_dup: order_by
  count_invalid: order_by
}

"""
aggregate stddev_pop on columns
"""
type workflow_call_center_batch_stddev_pop_fields {
  batch_id: Float
  count_acc: Float
  count_dup: Float
  count_invalid: Float
}

"""
order by stddev_pop() on columns of table "workflow.call_center_batch"
"""
input workflow_call_center_batch_stddev_pop_order_by {
  batch_id: order_by
  count_acc: order_by
  count_dup: order_by
  count_invalid: order_by
}

"""
aggregate stddev_samp on columns
"""
type workflow_call_center_batch_stddev_samp_fields {
  batch_id: Float
  count_acc: Float
  count_dup: Float
  count_invalid: Float
}

"""
order by stddev_samp() on columns of table "workflow.call_center_batch"
"""
input workflow_call_center_batch_stddev_samp_order_by {
  batch_id: order_by
  count_acc: order_by
  count_dup: order_by
  count_invalid: order_by
}

"""
aggregate sum on columns
"""
type workflow_call_center_batch_sum_fields {
  batch_id: float8
  count_acc: float8
  count_dup: float8
  count_invalid: float8
}

"""
order by sum() on columns of table "workflow.call_center_batch"
"""
input workflow_call_center_batch_sum_order_by {
  batch_id: order_by
  count_acc: order_by
  count_dup: order_by
  count_invalid: order_by
}

"""
update columns of table "workflow.call_center_batch"
"""
enum workflow_call_center_batch_update_column {
  """
  column name
  """
  batch_id

  """
  column name
  """
  call_date

  """
  column name
  """
  caller

  """
  column name
  """
  caller_contact

  """
  column name
  """
  caller_email

  """
  column name
  """
  concerns

  """
  column name
  """
  count_acc

  """
  column name
  """
  count_dup

  """
  column name
  """
  count_invalid

  """
  column name
  """
  dups_acc_no

  """
  column name
  """
  enter_date

  """
  column name
  """
  enter_user

  """
  column name
  """
  invalid_acc_no

  """
  column name
  """
  q_foia

  """
  column name
  """
  q_legal

  """
  column name
  """
  q_security

  """
  column name
  """
  status
}

"""
aggregate var_pop on columns
"""
type workflow_call_center_batch_var_pop_fields {
  batch_id: Float
  count_acc: Float
  count_dup: Float
  count_invalid: Float
}

"""
order by var_pop() on columns of table "workflow.call_center_batch"
"""
input workflow_call_center_batch_var_pop_order_by {
  batch_id: order_by
  count_acc: order_by
  count_dup: order_by
  count_invalid: order_by
}

"""
aggregate var_samp on columns
"""
type workflow_call_center_batch_var_samp_fields {
  batch_id: Float
  count_acc: Float
  count_dup: Float
  count_invalid: Float
}

"""
order by var_samp() on columns of table "workflow.call_center_batch"
"""
input workflow_call_center_batch_var_samp_order_by {
  batch_id: order_by
  count_acc: order_by
  count_dup: order_by
  count_invalid: order_by
}

"""
aggregate variance on columns
"""
type workflow_call_center_batch_variance_fields {
  batch_id: Float
  count_acc: Float
  count_dup: Float
  count_invalid: Float
}

"""
order by variance() on columns of table "workflow.call_center_batch"
"""
input workflow_call_center_batch_variance_order_by {
  batch_id: order_by
  count_acc: order_by
  count_dup: order_by
  count_invalid: order_by
}

"""
columns and relationships of "workflow.copyright_docs"
"""
type workflow_copyright_docs {
  dev: String
  doe_accession_number: String
  header_only: String
  in_doe_collection: String
  in_scanfile: String
  nrc_accession_number: String
  priv_types: String
  rel: String
  scan_file_affinity: String
  shipment_number: String
  title: String
}

"""
aggregated selection of "workflow.copyright_docs"
"""
type workflow_copyright_docs_aggregate {
  aggregate: workflow_copyright_docs_aggregate_fields
  nodes: [workflow_copyright_docs!]!
}

"""
aggregate fields of "workflow.copyright_docs"
"""
type workflow_copyright_docs_aggregate_fields {
  count(columns: [workflow_copyright_docs_select_column!], distinct: Boolean): Int
  max: workflow_copyright_docs_max_fields
  min: workflow_copyright_docs_min_fields
}

"""
order by aggregate values of table "workflow.copyright_docs"
"""
input workflow_copyright_docs_aggregate_order_by {
  count: order_by
  max: workflow_copyright_docs_max_order_by
  min: workflow_copyright_docs_min_order_by
}

"""
input type for inserting array relation for remote table "workflow.copyright_docs"
"""
input workflow_copyright_docs_arr_rel_insert_input {
  data: [workflow_copyright_docs_insert_input!]!
}

"""
Boolean expression to filter rows from the table "workflow.copyright_docs". All fields are combined with a logical 'AND'.
"""
input workflow_copyright_docs_bool_exp {
  _and: [workflow_copyright_docs_bool_exp]
  _not: workflow_copyright_docs_bool_exp
  _or: [workflow_copyright_docs_bool_exp]
  dev: String_comparison_exp
  doe_accession_number: String_comparison_exp
  header_only: String_comparison_exp
  in_doe_collection: String_comparison_exp
  in_scanfile: String_comparison_exp
  nrc_accession_number: String_comparison_exp
  priv_types: String_comparison_exp
  rel: String_comparison_exp
  scan_file_affinity: String_comparison_exp
  shipment_number: String_comparison_exp
  title: String_comparison_exp
}

"""
input type for inserting data into table "workflow.copyright_docs"
"""
input workflow_copyright_docs_insert_input {
  dev: String
  doe_accession_number: String
  header_only: String
  in_doe_collection: String
  in_scanfile: String
  nrc_accession_number: String
  priv_types: String
  rel: String
  scan_file_affinity: String
  shipment_number: String
  title: String
}

"""
aggregate max on columns
"""
type workflow_copyright_docs_max_fields {
  dev: String
  doe_accession_number: String
  header_only: String
  in_doe_collection: String
  in_scanfile: String
  nrc_accession_number: String
  priv_types: String
  rel: String
  scan_file_affinity: String
  shipment_number: String
  title: String
}

"""
order by max() on columns of table "workflow.copyright_docs"
"""
input workflow_copyright_docs_max_order_by {
  dev: order_by
  doe_accession_number: order_by
  header_only: order_by
  in_doe_collection: order_by
  in_scanfile: order_by
  nrc_accession_number: order_by
  priv_types: order_by
  rel: order_by
  scan_file_affinity: order_by
  shipment_number: order_by
  title: order_by
}

"""
aggregate min on columns
"""
type workflow_copyright_docs_min_fields {
  dev: String
  doe_accession_number: String
  header_only: String
  in_doe_collection: String
  in_scanfile: String
  nrc_accession_number: String
  priv_types: String
  rel: String
  scan_file_affinity: String
  shipment_number: String
  title: String
}

"""
order by min() on columns of table "workflow.copyright_docs"
"""
input workflow_copyright_docs_min_order_by {
  dev: order_by
  doe_accession_number: order_by
  header_only: order_by
  in_doe_collection: order_by
  in_scanfile: order_by
  nrc_accession_number: order_by
  priv_types: order_by
  rel: order_by
  scan_file_affinity: order_by
  shipment_number: order_by
  title: order_by
}

"""
response of any mutation on the table "workflow.copyright_docs"
"""
type workflow_copyright_docs_mutation_response {
  """
  number of affected rows by the mutation
  """
  affected_rows: Int!

  """
  data of the affected rows by the mutation
  """
  returning: [workflow_copyright_docs!]!
}

"""
input type for inserting object relation for remote table "workflow.copyright_docs"
"""
input workflow_copyright_docs_obj_rel_insert_input {
  data: workflow_copyright_docs_insert_input!
}

"""
ordering options when selecting data from "workflow.copyright_docs"
"""
input workflow_copyright_docs_order_by {
  dev: order_by
  doe_accession_number: order_by
  header_only: order_by
  in_doe_collection: order_by
  in_scanfile: order_by
  nrc_accession_number: order_by
  priv_types: order_by
  rel: order_by
  scan_file_affinity: order_by
  shipment_number: order_by
  title: order_by
}

"""
select columns of table "workflow.copyright_docs"
"""
enum workflow_copyright_docs_select_column {
  """
  column name
  """
  dev

  """
  column name
  """
  doe_accession_number

  """
  column name
  """
  header_only

  """
  column name
  """
  in_doe_collection

  """
  column name
  """
  in_scanfile

  """
  column name
  """
  nrc_accession_number

  """
  column name
  """
  priv_types

  """
  column name
  """
  rel

  """
  column name
  """
  scan_file_affinity

  """
  column name
  """
  shipment_number

  """
  column name
  """
  title
}

"""
input type for updating data in table "workflow.copyright_docs"
"""
input workflow_copyright_docs_set_input {
  dev: String
  doe_accession_number: String
  header_only: String
  in_doe_collection: String
  in_scanfile: String
  nrc_accession_number: String
  priv_types: String
  rel: String
  scan_file_affinity: String
  shipment_number: String
  title: String
}

"""
columns and relationships of "workflow.doc_comments"
"""
type workflow_doc_comments {
  COMMENTS: String
  ID: float8
  datex: timestamp
  doc_id: float8
  user_id: String
}

"""
aggregated selection of "workflow.doc_comments"
"""
type workflow_doc_comments_aggregate {
  aggregate: workflow_doc_comments_aggregate_fields
  nodes: [workflow_doc_comments!]!
}

"""
aggregate fields of "workflow.doc_comments"
"""
type workflow_doc_comments_aggregate_fields {
  avg: workflow_doc_comments_avg_fields
  count(columns: [workflow_doc_comments_select_column!], distinct: Boolean): Int
  max: workflow_doc_comments_max_fields
  min: workflow_doc_comments_min_fields
  stddev: workflow_doc_comments_stddev_fields
  stddev_pop: workflow_doc_comments_stddev_pop_fields
  stddev_samp: workflow_doc_comments_stddev_samp_fields
  sum: workflow_doc_comments_sum_fields
  var_pop: workflow_doc_comments_var_pop_fields
  var_samp: workflow_doc_comments_var_samp_fields
  variance: workflow_doc_comments_variance_fields
}

"""
order by aggregate values of table "workflow.doc_comments"
"""
input workflow_doc_comments_aggregate_order_by {
  avg: workflow_doc_comments_avg_order_by
  count: order_by
  max: workflow_doc_comments_max_order_by
  min: workflow_doc_comments_min_order_by
  stddev: workflow_doc_comments_stddev_order_by
  stddev_pop: workflow_doc_comments_stddev_pop_order_by
  stddev_samp: workflow_doc_comments_stddev_samp_order_by
  sum: workflow_doc_comments_sum_order_by
  var_pop: workflow_doc_comments_var_pop_order_by
  var_samp: workflow_doc_comments_var_samp_order_by
  variance: workflow_doc_comments_variance_order_by
}

"""
input type for inserting array relation for remote table "workflow.doc_comments"
"""
input workflow_doc_comments_arr_rel_insert_input {
  data: [workflow_doc_comments_insert_input!]!
}

"""
aggregate avg on columns
"""
type workflow_doc_comments_avg_fields {
  ID: Float
  doc_id: Float
}

"""
order by avg() on columns of table "workflow.doc_comments"
"""
input workflow_doc_comments_avg_order_by {
  ID: order_by
  doc_id: order_by
}

"""
Boolean expression to filter rows from the table "workflow.doc_comments". All fields are combined with a logical 'AND'.
"""
input workflow_doc_comments_bool_exp {
  COMMENTS: String_comparison_exp
  ID: float8_comparison_exp
  _and: [workflow_doc_comments_bool_exp]
  _not: workflow_doc_comments_bool_exp
  _or: [workflow_doc_comments_bool_exp]
  datex: timestamp_comparison_exp
  doc_id: float8_comparison_exp
  user_id: String_comparison_exp
}

"""
input type for incrementing integer column in table "workflow.doc_comments"
"""
input workflow_doc_comments_inc_input {
  ID: float8
  doc_id: float8
}

"""
input type for inserting data into table "workflow.doc_comments"
"""
input workflow_doc_comments_insert_input {
  COMMENTS: String
  ID: float8
  datex: timestamp
  doc_id: float8
  user_id: String
}

"""
aggregate max on columns
"""
type workflow_doc_comments_max_fields {
  COMMENTS: String
  ID: float8
  datex: timestamp
  doc_id: float8
  user_id: String
}

"""
order by max() on columns of table "workflow.doc_comments"
"""
input workflow_doc_comments_max_order_by {
  COMMENTS: order_by
  ID: order_by
  datex: order_by
  doc_id: order_by
  user_id: order_by
}

"""
aggregate min on columns
"""
type workflow_doc_comments_min_fields {
  COMMENTS: String
  ID: float8
  datex: timestamp
  doc_id: float8
  user_id: String
}

"""
order by min() on columns of table "workflow.doc_comments"
"""
input workflow_doc_comments_min_order_by {
  COMMENTS: order_by
  ID: order_by
  datex: order_by
  doc_id: order_by
  user_id: order_by
}

"""
response of any mutation on the table "workflow.doc_comments"
"""
type workflow_doc_comments_mutation_response {
  """
  number of affected rows by the mutation
  """
  affected_rows: Int!

  """
  data of the affected rows by the mutation
  """
  returning: [workflow_doc_comments!]!
}

"""
input type for inserting object relation for remote table "workflow.doc_comments"
"""
input workflow_doc_comments_obj_rel_insert_input {
  data: workflow_doc_comments_insert_input!
}

"""
ordering options when selecting data from "workflow.doc_comments"
"""
input workflow_doc_comments_order_by {
  COMMENTS: order_by
  ID: order_by
  datex: order_by
  doc_id: order_by
  user_id: order_by
}

"""
select columns of table "workflow.doc_comments"
"""
enum workflow_doc_comments_select_column {
  """
  column name
  """
  COMMENTS

  """
  column name
  """
  ID

  """
  column name
  """
  datex

  """
  column name
  """
  doc_id

  """
  column name
  """
  user_id
}

"""
input type for updating data in table "workflow.doc_comments"
"""
input workflow_doc_comments_set_input {
  COMMENTS: String
  ID: float8
  datex: timestamp
  doc_id: float8
  user_id: String
}

"""
aggregate stddev on columns
"""
type workflow_doc_comments_stddev_fields {
  ID: Float
  doc_id: Float
}

"""
order by stddev() on columns of table "workflow.doc_comments"
"""
input workflow_doc_comments_stddev_order_by {
  ID: order_by
  doc_id: order_by
}

"""
aggregate stddev_pop on columns
"""
type workflow_doc_comments_stddev_pop_fields {
  ID: Float
  doc_id: Float
}

"""
order by stddev_pop() on columns of table "workflow.doc_comments"
"""
input workflow_doc_comments_stddev_pop_order_by {
  ID: order_by
  doc_id: order_by
}

"""
aggregate stddev_samp on columns
"""
type workflow_doc_comments_stddev_samp_fields {
  ID: Float
  doc_id: Float
}

"""
order by stddev_samp() on columns of table "workflow.doc_comments"
"""
input workflow_doc_comments_stddev_samp_order_by {
  ID: order_by
  doc_id: order_by
}

"""
aggregate sum on columns
"""
type workflow_doc_comments_sum_fields {
  ID: float8
  doc_id: float8
}

"""
order by sum() on columns of table "workflow.doc_comments"
"""
input workflow_doc_comments_sum_order_by {
  ID: order_by
  doc_id: order_by
}

"""
aggregate var_pop on columns
"""
type workflow_doc_comments_var_pop_fields {
  ID: Float
  doc_id: Float
}

"""
order by var_pop() on columns of table "workflow.doc_comments"
"""
input workflow_doc_comments_var_pop_order_by {
  ID: order_by
  doc_id: order_by
}

"""
aggregate var_samp on columns
"""
type workflow_doc_comments_var_samp_fields {
  ID: Float
  doc_id: Float
}

"""
order by var_samp() on columns of table "workflow.doc_comments"
"""
input workflow_doc_comments_var_samp_order_by {
  ID: order_by
  doc_id: order_by
}

"""
aggregate variance on columns
"""
type workflow_doc_comments_variance_fields {
  ID: Float
  doc_id: Float
}

"""
order by variance() on columns of table "workflow.doc_comments"
"""
input workflow_doc_comments_variance_order_by {
  ID: order_by
  doc_id: order_by
}

"""
columns and relationships of "workflow.doc_names"
"""
type workflow_doc_names {
  NAME: String
  TYPE: String!
  doc_id: float8
  organization: String

  """
  An object relationship
  """
  type_lookup: workflow_name_type_lookup
  update_user: String
  updatex: timestamp
}

"""
aggregated selection of "workflow.doc_names"
"""
type workflow_doc_names_aggregate {
  aggregate: workflow_doc_names_aggregate_fields
  nodes: [workflow_doc_names!]!
}

"""
aggregate fields of "workflow.doc_names"
"""
type workflow_doc_names_aggregate_fields {
  avg: workflow_doc_names_avg_fields
  count(columns: [workflow_doc_names_select_column!], distinct: Boolean): Int
  max: workflow_doc_names_max_fields
  min: workflow_doc_names_min_fields
  stddev: workflow_doc_names_stddev_fields
  stddev_pop: workflow_doc_names_stddev_pop_fields
  stddev_samp: workflow_doc_names_stddev_samp_fields
  sum: workflow_doc_names_sum_fields
  var_pop: workflow_doc_names_var_pop_fields
  var_samp: workflow_doc_names_var_samp_fields
  variance: workflow_doc_names_variance_fields
}

"""
order by aggregate values of table "workflow.doc_names"
"""
input workflow_doc_names_aggregate_order_by {
  avg: workflow_doc_names_avg_order_by
  count: order_by
  max: workflow_doc_names_max_order_by
  min: workflow_doc_names_min_order_by
  stddev: workflow_doc_names_stddev_order_by
  stddev_pop: workflow_doc_names_stddev_pop_order_by
  stddev_samp: workflow_doc_names_stddev_samp_order_by
  sum: workflow_doc_names_sum_order_by
  var_pop: workflow_doc_names_var_pop_order_by
  var_samp: workflow_doc_names_var_samp_order_by
  variance: workflow_doc_names_variance_order_by
}

"""
input type for inserting array relation for remote table "workflow.doc_names"
"""
input workflow_doc_names_arr_rel_insert_input {
  data: [workflow_doc_names_insert_input!]!
}

"""
aggregate avg on columns
"""
type workflow_doc_names_avg_fields {
  doc_id: Float
}

"""
order by avg() on columns of table "workflow.doc_names"
"""
input workflow_doc_names_avg_order_by {
  doc_id: order_by
}

"""
Boolean expression to filter rows from the table "workflow.doc_names". All fields are combined with a logical 'AND'.
"""
input workflow_doc_names_bool_exp {
  NAME: String_comparison_exp
  TYPE: String_comparison_exp
  _and: [workflow_doc_names_bool_exp]
  _not: workflow_doc_names_bool_exp
  _or: [workflow_doc_names_bool_exp]
  doc_id: float8_comparison_exp
  organization: String_comparison_exp
  type_lookup: workflow_name_type_lookup_bool_exp
  update_user: String_comparison_exp
  updatex: timestamp_comparison_exp
}

"""
input type for incrementing integer column in table "workflow.doc_names"
"""
input workflow_doc_names_inc_input {
  doc_id: float8
}

"""
input type for inserting data into table "workflow.doc_names"
"""
input workflow_doc_names_insert_input {
  NAME: String
  TYPE: String
  doc_id: float8
  organization: String
  type_lookup: workflow_name_type_lookup_obj_rel_insert_input
  update_user: String
  updatex: timestamp
}

"""
aggregate max on columns
"""
type workflow_doc_names_max_fields {
  NAME: String
  TYPE: String
  doc_id: float8
  organization: String
  update_user: String
  updatex: timestamp
}

"""
order by max() on columns of table "workflow.doc_names"
"""
input workflow_doc_names_max_order_by {
  NAME: order_by
  TYPE: order_by
  doc_id: order_by
  organization: order_by
  update_user: order_by
  updatex: order_by
}

"""
aggregate min on columns
"""
type workflow_doc_names_min_fields {
  NAME: String
  TYPE: String
  doc_id: float8
  organization: String
  update_user: String
  updatex: timestamp
}

"""
order by min() on columns of table "workflow.doc_names"
"""
input workflow_doc_names_min_order_by {
  NAME: order_by
  TYPE: order_by
  doc_id: order_by
  organization: order_by
  update_user: order_by
  updatex: order_by
}

"""
response of any mutation on the table "workflow.doc_names"
"""
type workflow_doc_names_mutation_response {
  """
  number of affected rows by the mutation
  """
  affected_rows: Int!

  """
  data of the affected rows by the mutation
  """
  returning: [workflow_doc_names!]!
}

"""
input type for inserting object relation for remote table "workflow.doc_names"
"""
input workflow_doc_names_obj_rel_insert_input {
  data: workflow_doc_names_insert_input!
}

"""
ordering options when selecting data from "workflow.doc_names"
"""
input workflow_doc_names_order_by {
  NAME: order_by
  TYPE: order_by
  doc_id: order_by
  organization: order_by
  type_lookup: workflow_name_type_lookup_order_by
  update_user: order_by
  updatex: order_by
}

"""
select columns of table "workflow.doc_names"
"""
enum workflow_doc_names_select_column {
  """
  column name
  """
  NAME

  """
  column name
  """
  TYPE

  """
  column name
  """
  doc_id

  """
  column name
  """
  organization

  """
  column name
  """
  update_user

  """
  column name
  """
  updatex
}

"""
input type for updating data in table "workflow.doc_names"
"""
input workflow_doc_names_set_input {
  NAME: String
  TYPE: String
  doc_id: float8
  organization: String
  update_user: String
  updatex: timestamp
}

"""
aggregate stddev on columns
"""
type workflow_doc_names_stddev_fields {
  doc_id: Float
}

"""
order by stddev() on columns of table "workflow.doc_names"
"""
input workflow_doc_names_stddev_order_by {
  doc_id: order_by
}

"""
aggregate stddev_pop on columns
"""
type workflow_doc_names_stddev_pop_fields {
  doc_id: Float
}

"""
order by stddev_pop() on columns of table "workflow.doc_names"
"""
input workflow_doc_names_stddev_pop_order_by {
  doc_id: order_by
}

"""
aggregate stddev_samp on columns
"""
type workflow_doc_names_stddev_samp_fields {
  doc_id: Float
}

"""
order by stddev_samp() on columns of table "workflow.doc_names"
"""
input workflow_doc_names_stddev_samp_order_by {
  doc_id: order_by
}

"""
aggregate sum on columns
"""
type workflow_doc_names_sum_fields {
  doc_id: float8
}

"""
order by sum() on columns of table "workflow.doc_names"
"""
input workflow_doc_names_sum_order_by {
  doc_id: order_by
}

"""
aggregate var_pop on columns
"""
type workflow_doc_names_var_pop_fields {
  doc_id: Float
}

"""
order by var_pop() on columns of table "workflow.doc_names"
"""
input workflow_doc_names_var_pop_order_by {
  doc_id: order_by
}

"""
aggregate var_samp on columns
"""
type workflow_doc_names_var_samp_fields {
  doc_id: Float
}

"""
order by var_samp() on columns of table "workflow.doc_names"
"""
input workflow_doc_names_var_samp_order_by {
  doc_id: order_by
}

"""
aggregate variance on columns
"""
type workflow_doc_names_variance_fields {
  doc_id: Float
}

"""
order by variance() on columns of table "workflow.doc_names"
"""
input workflow_doc_names_variance_order_by {
  doc_id: order_by
}

"""
columns and relationships of "workflow.doc_sources"
"""
type workflow_doc_sources {
  COMMENTS: String
  datex: timestamp
  doc_id: float8

  """
  An object relationship
  """
  source: workflow_sources
  source_id: float8
  user_id: String
}

"""
aggregated selection of "workflow.doc_sources"
"""
type workflow_doc_sources_aggregate {
  aggregate: workflow_doc_sources_aggregate_fields
  nodes: [workflow_doc_sources!]!
}

"""
aggregate fields of "workflow.doc_sources"
"""
type workflow_doc_sources_aggregate_fields {
  avg: workflow_doc_sources_avg_fields
  count(columns: [workflow_doc_sources_select_column!], distinct: Boolean): Int
  max: workflow_doc_sources_max_fields
  min: workflow_doc_sources_min_fields
  stddev: workflow_doc_sources_stddev_fields
  stddev_pop: workflow_doc_sources_stddev_pop_fields
  stddev_samp: workflow_doc_sources_stddev_samp_fields
  sum: workflow_doc_sources_sum_fields
  var_pop: workflow_doc_sources_var_pop_fields
  var_samp: workflow_doc_sources_var_samp_fields
  variance: workflow_doc_sources_variance_fields
}

"""
order by aggregate values of table "workflow.doc_sources"
"""
input workflow_doc_sources_aggregate_order_by {
  avg: workflow_doc_sources_avg_order_by
  count: order_by
  max: workflow_doc_sources_max_order_by
  min: workflow_doc_sources_min_order_by
  stddev: workflow_doc_sources_stddev_order_by
  stddev_pop: workflow_doc_sources_stddev_pop_order_by
  stddev_samp: workflow_doc_sources_stddev_samp_order_by
  sum: workflow_doc_sources_sum_order_by
  var_pop: workflow_doc_sources_var_pop_order_by
  var_samp: workflow_doc_sources_var_samp_order_by
  variance: workflow_doc_sources_variance_order_by
}

"""
input type for inserting array relation for remote table "workflow.doc_sources"
"""
input workflow_doc_sources_arr_rel_insert_input {
  data: [workflow_doc_sources_insert_input!]!
}

"""
aggregate avg on columns
"""
type workflow_doc_sources_avg_fields {
  doc_id: Float
  source_id: Float
}

"""
order by avg() on columns of table "workflow.doc_sources"
"""
input workflow_doc_sources_avg_order_by {
  doc_id: order_by
  source_id: order_by
}

"""
Boolean expression to filter rows from the table "workflow.doc_sources". All fields are combined with a logical 'AND'.
"""
input workflow_doc_sources_bool_exp {
  COMMENTS: String_comparison_exp
  _and: [workflow_doc_sources_bool_exp]
  _not: workflow_doc_sources_bool_exp
  _or: [workflow_doc_sources_bool_exp]
  datex: timestamp_comparison_exp
  doc_id: float8_comparison_exp
  source: workflow_sources_bool_exp
  source_id: float8_comparison_exp
  user_id: String_comparison_exp
}

"""
input type for incrementing integer column in table "workflow.doc_sources"
"""
input workflow_doc_sources_inc_input {
  doc_id: float8
  source_id: float8
}

"""
input type for inserting data into table "workflow.doc_sources"
"""
input workflow_doc_sources_insert_input {
  COMMENTS: String
  datex: timestamp
  doc_id: float8
  source: workflow_sources_obj_rel_insert_input
  source_id: float8
  user_id: String
}

"""
aggregate max on columns
"""
type workflow_doc_sources_max_fields {
  COMMENTS: String
  datex: timestamp
  doc_id: float8
  source_id: float8
  user_id: String
}

"""
order by max() on columns of table "workflow.doc_sources"
"""
input workflow_doc_sources_max_order_by {
  COMMENTS: order_by
  datex: order_by
  doc_id: order_by
  source_id: order_by
  user_id: order_by
}

"""
aggregate min on columns
"""
type workflow_doc_sources_min_fields {
  COMMENTS: String
  datex: timestamp
  doc_id: float8
  source_id: float8
  user_id: String
}

"""
order by min() on columns of table "workflow.doc_sources"
"""
input workflow_doc_sources_min_order_by {
  COMMENTS: order_by
  datex: order_by
  doc_id: order_by
  source_id: order_by
  user_id: order_by
}

"""
response of any mutation on the table "workflow.doc_sources"
"""
type workflow_doc_sources_mutation_response {
  """
  number of affected rows by the mutation
  """
  affected_rows: Int!

  """
  data of the affected rows by the mutation
  """
  returning: [workflow_doc_sources!]!
}

"""
input type for inserting object relation for remote table "workflow.doc_sources"
"""
input workflow_doc_sources_obj_rel_insert_input {
  data: workflow_doc_sources_insert_input!
}

"""
ordering options when selecting data from "workflow.doc_sources"
"""
input workflow_doc_sources_order_by {
  COMMENTS: order_by
  datex: order_by
  doc_id: order_by
  source: workflow_sources_order_by
  source_id: order_by
  user_id: order_by
}

"""
select columns of table "workflow.doc_sources"
"""
enum workflow_doc_sources_select_column {
  """
  column name
  """
  COMMENTS

  """
  column name
  """
  datex

  """
  column name
  """
  doc_id

  """
  column name
  """
  source_id

  """
  column name
  """
  user_id
}

"""
input type for updating data in table "workflow.doc_sources"
"""
input workflow_doc_sources_set_input {
  COMMENTS: String
  datex: timestamp
  doc_id: float8
  source_id: float8
  user_id: String
}

"""
aggregate stddev on columns
"""
type workflow_doc_sources_stddev_fields {
  doc_id: Float
  source_id: Float
}

"""
order by stddev() on columns of table "workflow.doc_sources"
"""
input workflow_doc_sources_stddev_order_by {
  doc_id: order_by
  source_id: order_by
}

"""
aggregate stddev_pop on columns
"""
type workflow_doc_sources_stddev_pop_fields {
  doc_id: Float
  source_id: Float
}

"""
order by stddev_pop() on columns of table "workflow.doc_sources"
"""
input workflow_doc_sources_stddev_pop_order_by {
  doc_id: order_by
  source_id: order_by
}

"""
aggregate stddev_samp on columns
"""
type workflow_doc_sources_stddev_samp_fields {
  doc_id: Float
  source_id: Float
}

"""
order by stddev_samp() on columns of table "workflow.doc_sources"
"""
input workflow_doc_sources_stddev_samp_order_by {
  doc_id: order_by
  source_id: order_by
}

"""
aggregate sum on columns
"""
type workflow_doc_sources_sum_fields {
  doc_id: float8
  source_id: float8
}

"""
order by sum() on columns of table "workflow.doc_sources"
"""
input workflow_doc_sources_sum_order_by {
  doc_id: order_by
  source_id: order_by
}

"""
aggregate var_pop on columns
"""
type workflow_doc_sources_var_pop_fields {
  doc_id: Float
  source_id: Float
}

"""
order by var_pop() on columns of table "workflow.doc_sources"
"""
input workflow_doc_sources_var_pop_order_by {
  doc_id: order_by
  source_id: order_by
}

"""
aggregate var_samp on columns
"""
type workflow_doc_sources_var_samp_fields {
  doc_id: Float
  source_id: Float
}

"""
order by var_samp() on columns of table "workflow.doc_sources"
"""
input workflow_doc_sources_var_samp_order_by {
  doc_id: order_by
  source_id: order_by
}

"""
aggregate variance on columns
"""
type workflow_doc_sources_variance_fields {
  doc_id: Float
  source_id: Float
}

"""
order by variance() on columns of table "workflow.doc_sources"
"""
input workflow_doc_sources_variance_order_by {
  doc_id: order_by
  source_id: order_by
}

"""
columns and relationships of "workflow.doc_status"
"""
type workflow_doc_status {
  SCHEMA_NAME: String!
  ads_udi: String!
  doc_cond: String
  header_only: String
  in_doe_collection: String
  in_scanfile: String
  nrc_accession_number: String
  p_acc_no: String
  priv_types: String
  reason: String
  request: String
  scan_file_affinity: String
}

"""
aggregated selection of "workflow.doc_status"
"""
type workflow_doc_status_aggregate {
  aggregate: workflow_doc_status_aggregate_fields
  nodes: [workflow_doc_status!]!
}

"""
aggregate fields of "workflow.doc_status"
"""
type workflow_doc_status_aggregate_fields {
  count(columns: [workflow_doc_status_select_column!], distinct: Boolean): Int
  max: workflow_doc_status_max_fields
  min: workflow_doc_status_min_fields
}

"""
order by aggregate values of table "workflow.doc_status"
"""
input workflow_doc_status_aggregate_order_by {
  count: order_by
  max: workflow_doc_status_max_order_by
  min: workflow_doc_status_min_order_by
}

"""
input type for inserting array relation for remote table "workflow.doc_status"
"""
input workflow_doc_status_arr_rel_insert_input {
  data: [workflow_doc_status_insert_input!]!
}

"""
Boolean expression to filter rows from the table "workflow.doc_status". All fields are combined with a logical 'AND'.
"""
input workflow_doc_status_bool_exp {
  SCHEMA_NAME: String_comparison_exp
  _and: [workflow_doc_status_bool_exp]
  _not: workflow_doc_status_bool_exp
  _or: [workflow_doc_status_bool_exp]
  ads_udi: String_comparison_exp
  doc_cond: String_comparison_exp
  header_only: String_comparison_exp
  in_doe_collection: String_comparison_exp
  in_scanfile: String_comparison_exp
  nrc_accession_number: String_comparison_exp
  p_acc_no: String_comparison_exp
  priv_types: String_comparison_exp
  reason: String_comparison_exp
  request: String_comparison_exp
  scan_file_affinity: String_comparison_exp
}

"""
input type for inserting data into table "workflow.doc_status"
"""
input workflow_doc_status_insert_input {
  SCHEMA_NAME: String
  ads_udi: String
  doc_cond: String
  header_only: String
  in_doe_collection: String
  in_scanfile: String
  nrc_accession_number: String
  p_acc_no: String
  priv_types: String
  reason: String
  request: String
  scan_file_affinity: String
}

"""
aggregate max on columns
"""
type workflow_doc_status_max_fields {
  SCHEMA_NAME: String
  ads_udi: String
  doc_cond: String
  header_only: String
  in_doe_collection: String
  in_scanfile: String
  nrc_accession_number: String
  p_acc_no: String
  priv_types: String
  reason: String
  request: String
  scan_file_affinity: String
}

"""
order by max() on columns of table "workflow.doc_status"
"""
input workflow_doc_status_max_order_by {
  SCHEMA_NAME: order_by
  ads_udi: order_by
  doc_cond: order_by
  header_only: order_by
  in_doe_collection: order_by
  in_scanfile: order_by
  nrc_accession_number: order_by
  p_acc_no: order_by
  priv_types: order_by
  reason: order_by
  request: order_by
  scan_file_affinity: order_by
}

"""
aggregate min on columns
"""
type workflow_doc_status_min_fields {
  SCHEMA_NAME: String
  ads_udi: String
  doc_cond: String
  header_only: String
  in_doe_collection: String
  in_scanfile: String
  nrc_accession_number: String
  p_acc_no: String
  priv_types: String
  reason: String
  request: String
  scan_file_affinity: String
}

"""
order by min() on columns of table "workflow.doc_status"
"""
input workflow_doc_status_min_order_by {
  SCHEMA_NAME: order_by
  ads_udi: order_by
  doc_cond: order_by
  header_only: order_by
  in_doe_collection: order_by
  in_scanfile: order_by
  nrc_accession_number: order_by
  p_acc_no: order_by
  priv_types: order_by
  reason: order_by
  request: order_by
  scan_file_affinity: order_by
}

"""
response of any mutation on the table "workflow.doc_status"
"""
type workflow_doc_status_mutation_response {
  """
  number of affected rows by the mutation
  """
  affected_rows: Int!

  """
  data of the affected rows by the mutation
  """
  returning: [workflow_doc_status!]!
}

"""
input type for inserting object relation for remote table "workflow.doc_status"
"""
input workflow_doc_status_obj_rel_insert_input {
  data: workflow_doc_status_insert_input!
}

"""
ordering options when selecting data from "workflow.doc_status"
"""
input workflow_doc_status_order_by {
  SCHEMA_NAME: order_by
  ads_udi: order_by
  doc_cond: order_by
  header_only: order_by
  in_doe_collection: order_by
  in_scanfile: order_by
  nrc_accession_number: order_by
  p_acc_no: order_by
  priv_types: order_by
  reason: order_by
  request: order_by
  scan_file_affinity: order_by
}

"""
select columns of table "workflow.doc_status"
"""
enum workflow_doc_status_select_column {
  """
  column name
  """
  SCHEMA_NAME

  """
  column name
  """
  ads_udi

  """
  column name
  """
  doc_cond

  """
  column name
  """
  header_only

  """
  column name
  """
  in_doe_collection

  """
  column name
  """
  in_scanfile

  """
  column name
  """
  nrc_accession_number

  """
  column name
  """
  p_acc_no

  """
  column name
  """
  priv_types

  """
  column name
  """
  reason

  """
  column name
  """
  request

  """
  column name
  """
  scan_file_affinity
}

"""
input type for updating data in table "workflow.doc_status"
"""
input workflow_doc_status_set_input {
  SCHEMA_NAME: String
  ads_udi: String
  doc_cond: String
  header_only: String
  in_doe_collection: String
  in_scanfile: String
  nrc_accession_number: String
  p_acc_no: String
  priv_types: String
  reason: String
  request: String
  scan_file_affinity: String
}

"""
columns and relationships of "workflow.doc_tags_names"
"""
type workflow_doc_tags_names {
  NAME: String
  SOURCE: String
  VALUE: String
  sort_order: numeric
  tag: String!
}

"""
aggregated selection of "workflow.doc_tags_names"
"""
type workflow_doc_tags_names_aggregate {
  aggregate: workflow_doc_tags_names_aggregate_fields
  nodes: [workflow_doc_tags_names!]!
}

"""
aggregate fields of "workflow.doc_tags_names"
"""
type workflow_doc_tags_names_aggregate_fields {
  avg: workflow_doc_tags_names_avg_fields
  count(columns: [workflow_doc_tags_names_select_column!], distinct: Boolean): Int
  max: workflow_doc_tags_names_max_fields
  min: workflow_doc_tags_names_min_fields
  stddev: workflow_doc_tags_names_stddev_fields
  stddev_pop: workflow_doc_tags_names_stddev_pop_fields
  stddev_samp: workflow_doc_tags_names_stddev_samp_fields
  sum: workflow_doc_tags_names_sum_fields
  var_pop: workflow_doc_tags_names_var_pop_fields
  var_samp: workflow_doc_tags_names_var_samp_fields
  variance: workflow_doc_tags_names_variance_fields
}

"""
order by aggregate values of table "workflow.doc_tags_names"
"""
input workflow_doc_tags_names_aggregate_order_by {
  avg: workflow_doc_tags_names_avg_order_by
  count: order_by
  max: workflow_doc_tags_names_max_order_by
  min: workflow_doc_tags_names_min_order_by
  stddev: workflow_doc_tags_names_stddev_order_by
  stddev_pop: workflow_doc_tags_names_stddev_pop_order_by
  stddev_samp: workflow_doc_tags_names_stddev_samp_order_by
  sum: workflow_doc_tags_names_sum_order_by
  var_pop: workflow_doc_tags_names_var_pop_order_by
  var_samp: workflow_doc_tags_names_var_samp_order_by
  variance: workflow_doc_tags_names_variance_order_by
}

"""
input type for inserting array relation for remote table "workflow.doc_tags_names"
"""
input workflow_doc_tags_names_arr_rel_insert_input {
  data: [workflow_doc_tags_names_insert_input!]!
  on_conflict: workflow_doc_tags_names_on_conflict
}

"""
aggregate avg on columns
"""
type workflow_doc_tags_names_avg_fields {
  sort_order: Float
}

"""
order by avg() on columns of table "workflow.doc_tags_names"
"""
input workflow_doc_tags_names_avg_order_by {
  sort_order: order_by
}

"""
Boolean expression to filter rows from the table "workflow.doc_tags_names". All fields are combined with a logical 'AND'.
"""
input workflow_doc_tags_names_bool_exp {
  NAME: String_comparison_exp
  SOURCE: String_comparison_exp
  VALUE: String_comparison_exp
  _and: [workflow_doc_tags_names_bool_exp]
  _not: workflow_doc_tags_names_bool_exp
  _or: [workflow_doc_tags_names_bool_exp]
  sort_order: numeric_comparison_exp
  tag: String_comparison_exp
}

"""
unique or primary key constraints on table "workflow.doc_tags_names"
"""
enum workflow_doc_tags_names_constraint {
  """
  unique or primary key constraint
  """
  doc_tags_names_pkey
}

"""
input type for incrementing integer column in table "workflow.doc_tags_names"
"""
input workflow_doc_tags_names_inc_input {
  sort_order: numeric
}

"""
input type for inserting data into table "workflow.doc_tags_names"
"""
input workflow_doc_tags_names_insert_input {
  NAME: String
  SOURCE: String
  VALUE: String
  sort_order: numeric
  tag: String
}

"""
aggregate max on columns
"""
type workflow_doc_tags_names_max_fields {
  NAME: String
  SOURCE: String
  VALUE: String
  sort_order: numeric
  tag: String
}

"""
order by max() on columns of table "workflow.doc_tags_names"
"""
input workflow_doc_tags_names_max_order_by {
  NAME: order_by
  SOURCE: order_by
  VALUE: order_by
  sort_order: order_by
  tag: order_by
}

"""
aggregate min on columns
"""
type workflow_doc_tags_names_min_fields {
  NAME: String
  SOURCE: String
  VALUE: String
  sort_order: numeric
  tag: String
}

"""
order by min() on columns of table "workflow.doc_tags_names"
"""
input workflow_doc_tags_names_min_order_by {
  NAME: order_by
  SOURCE: order_by
  VALUE: order_by
  sort_order: order_by
  tag: order_by
}

"""
response of any mutation on the table "workflow.doc_tags_names"
"""
type workflow_doc_tags_names_mutation_response {
  """
  number of affected rows by the mutation
  """
  affected_rows: Int!

  """
  data of the affected rows by the mutation
  """
  returning: [workflow_doc_tags_names!]!
}

"""
input type for inserting object relation for remote table "workflow.doc_tags_names"
"""
input workflow_doc_tags_names_obj_rel_insert_input {
  data: workflow_doc_tags_names_insert_input!
  on_conflict: workflow_doc_tags_names_on_conflict
}

"""
on conflict condition type for table "workflow.doc_tags_names"
"""
input workflow_doc_tags_names_on_conflict {
  constraint: workflow_doc_tags_names_constraint!
  update_columns: [workflow_doc_tags_names_update_column!]!
  where: workflow_doc_tags_names_bool_exp
}

"""
ordering options when selecting data from "workflow.doc_tags_names"
"""
input workflow_doc_tags_names_order_by {
  NAME: order_by
  SOURCE: order_by
  VALUE: order_by
  sort_order: order_by
  tag: order_by
}

"""
primary key columns input for table: "workflow.doc_tags_names"
"""
input workflow_doc_tags_names_pk_columns_input {
  tag: String!
}

"""
select columns of table "workflow.doc_tags_names"
"""
enum workflow_doc_tags_names_select_column {
  """
  column name
  """
  NAME

  """
  column name
  """
  SOURCE

  """
  column name
  """
  VALUE

  """
  column name
  """
  sort_order

  """
  column name
  """
  tag
}

"""
input type for updating data in table "workflow.doc_tags_names"
"""
input workflow_doc_tags_names_set_input {
  NAME: String
  SOURCE: String
  VALUE: String
  sort_order: numeric
  tag: String
}

"""
aggregate stddev on columns
"""
type workflow_doc_tags_names_stddev_fields {
  sort_order: Float
}

"""
order by stddev() on columns of table "workflow.doc_tags_names"
"""
input workflow_doc_tags_names_stddev_order_by {
  sort_order: order_by
}

"""
aggregate stddev_pop on columns
"""
type workflow_doc_tags_names_stddev_pop_fields {
  sort_order: Float
}

"""
order by stddev_pop() on columns of table "workflow.doc_tags_names"
"""
input workflow_doc_tags_names_stddev_pop_order_by {
  sort_order: order_by
}

"""
aggregate stddev_samp on columns
"""
type workflow_doc_tags_names_stddev_samp_fields {
  sort_order: Float
}

"""
order by stddev_samp() on columns of table "workflow.doc_tags_names"
"""
input workflow_doc_tags_names_stddev_samp_order_by {
  sort_order: order_by
}

"""
aggregate sum on columns
"""
type workflow_doc_tags_names_sum_fields {
  sort_order: numeric
}

"""
order by sum() on columns of table "workflow.doc_tags_names"
"""
input workflow_doc_tags_names_sum_order_by {
  sort_order: order_by
}

"""
update columns of table "workflow.doc_tags_names"
"""
enum workflow_doc_tags_names_update_column {
  """
  column name
  """
  NAME

  """
  column name
  """
  SOURCE

  """
  column name
  """
  VALUE

  """
  column name
  """
  sort_order

  """
  column name
  """
  tag
}

"""
aggregate var_pop on columns
"""
type workflow_doc_tags_names_var_pop_fields {
  sort_order: Float
}

"""
order by var_pop() on columns of table "workflow.doc_tags_names"
"""
input workflow_doc_tags_names_var_pop_order_by {
  sort_order: order_by
}

"""
aggregate var_samp on columns
"""
type workflow_doc_tags_names_var_samp_fields {
  sort_order: Float
}

"""
order by var_samp() on columns of table "workflow.doc_tags_names"
"""
input workflow_doc_tags_names_var_samp_order_by {
  sort_order: order_by
}

"""
aggregate variance on columns
"""
type workflow_doc_tags_names_variance_fields {
  sort_order: Float
}

"""
order by variance() on columns of table "workflow.doc_tags_names"
"""
input workflow_doc_tags_names_variance_order_by {
  sort_order: order_by
}

"""
columns and relationships of "workflow.documents"
"""
type workflow_documents {
  COMMENTS: String
  ID: float8!
  RESULT: String
  SCHEMA_NAME: String!
  acc_no: String

  """
  An array relationship
  """
  adhoc_card(
    """
    distinct select on columns
    """
    distinct_on: [workflow_adhoc_card_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_adhoc_card_order_by!]

    """
    filter the rows returned
    """
    where: workflow_adhoc_card_bool_exp
  ): [workflow_adhoc_card!]!

  """
  An aggregated array relationship
  """
  adhoc_card_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_adhoc_card_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_adhoc_card_order_by!]

    """
    filter the rows returned
    """
    where: workflow_adhoc_card_bool_exp
  ): workflow_adhoc_card_aggregate!
  ads_udi: String!
  alert: bpchar

  """
  An array relationship
  """
  call_center(
    """
    distinct select on columns
    """
    distinct_on: [workflow_call_center_acc_no_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_call_center_acc_no_order_by!]

    """
    filter the rows returned
    """
    where: workflow_call_center_acc_no_bool_exp
  ): [workflow_call_center_acc_no!]!

  """
  An aggregated array relationship
  """
  call_center_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_call_center_acc_no_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_call_center_acc_no_order_by!]

    """
    filter the rows returned
    """
    where: workflow_call_center_acc_no_bool_exp
  ): workflow_call_center_acc_no_aggregate!
  child_count: float8

  """
  An array relationship
  """
  children(
    """
    distinct select on columns
    """
    distinct_on: [workflow_documents_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_documents_order_by!]

    """
    filter the rows returned
    """
    where: workflow_documents_bool_exp
  ): [workflow_documents!]!

  """
  An aggregated array relationship
  """
  children_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_documents_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_documents_order_by!]

    """
    filter the rows returned
    """
    where: workflow_documents_bool_exp
  ): workflow_documents_aggregate!
  control_flag: float8
  ctr: String
  date_added: timestamp
  date_due: timestamp

  """
  An object relationship
  """
  decision: workflow_workflow_decision

  """
  An array relationship
  """
  doc_comments(
    """
    distinct select on columns
    """
    distinct_on: [workflow_doc_comments_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_doc_comments_order_by!]

    """
    filter the rows returned
    """
    where: workflow_doc_comments_bool_exp
  ): [workflow_doc_comments!]!

  """
  An aggregated array relationship
  """
  doc_comments_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_doc_comments_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_doc_comments_order_by!]

    """
    filter the rows returned
    """
    where: workflow_doc_comments_bool_exp
  ): workflow_doc_comments_aggregate!

  """
  An array relationship
  """
  doc_sources(
    """
    distinct select on columns
    """
    distinct_on: [workflow_doc_sources_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_doc_sources_order_by!]

    """
    filter the rows returned
    """
    where: workflow_doc_sources_bool_exp
  ): [workflow_doc_sources!]!

  """
  An aggregated array relationship
  """
  doc_sources_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_doc_sources_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_doc_sources_order_by!]

    """
    filter the rows returned
    """
    where: workflow_doc_sources_bool_exp
  ): workflow_doc_sources_aggregate!

  """
  An object relationship
  """
  document_parent: workflow_documents

  """
  An array relationship
  """
  document_redactions(
    """
    distinct select on columns
    """
    distinct_on: [workflow_redacted_pages_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_redacted_pages_order_by!]

    """
    filter the rows returned
    """
    where: workflow_redacted_pages_bool_exp
  ): [workflow_redacted_pages!]!

  """
  An aggregated array relationship
  """
  document_redactions_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_redacted_pages_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_redacted_pages_order_by!]

    """
    filter the rows returned
    """
    where: workflow_redacted_pages_bool_exp
  ): workflow_redacted_pages_aggregate!
  edit_field: String
  edit_field2: String

  """
  An array relationship
  """
  efiles_names(
    """
    distinct select on columns
    """
    distinct_on: [efiles_doc_names_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [efiles_doc_names_order_by!]

    """
    filter the rows returned
    """
    where: efiles_doc_names_bool_exp
  ): [efiles_doc_names!]!

  """
  An aggregated array relationship
  """
  efiles_names_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [efiles_doc_names_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [efiles_doc_names_order_by!]

    """
    filter the rows returned
    """
    where: efiles_doc_names_bool_exp
  ): efiles_doc_names_aggregate!

  """
  An array relationship
  """
  email_names(
    """
    distinct select on columns
    """
    distinct_on: [email_doc_names_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [email_doc_names_order_by!]

    """
    filter the rows returned
    """
    where: email_doc_names_bool_exp
  ): [email_doc_names!]!

  """
  An aggregated array relationship
  """
  email_names_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [email_doc_names_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [email_doc_names_order_by!]

    """
    filter the rows returned
    """
    where: email_doc_names_bool_exp
  ): email_doc_names_aggregate!

  """
  An object relationship
  """
  final_priv_log: workflow_final_priv_log

  """
  An array relationship
  """
  final_priv_log_recipient(
    """
    distinct select on columns
    """
    distinct_on: [workflow_final_priv_log_recipient_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_final_priv_log_recipient_order_by!]

    """
    filter the rows returned
    """
    where: workflow_final_priv_log_recipient_bool_exp
  ): [workflow_final_priv_log_recipient!]!

  """
  An aggregated array relationship
  """
  final_priv_log_recipient_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_final_priv_log_recipient_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_final_priv_log_recipient_order_by!]

    """
    filter the rows returned
    """
    where: workflow_final_priv_log_recipient_bool_exp
  ): workflow_final_priv_log_recipient_aggregate!
  fld_d1: timestamp
  fld_d2: timestamp
  fld_d3: timestamp
  fld_d4: timestamp
  fld_d5: timestamp
  fld_n1: float8
  fld_n2: float8
  fld_n3: float8
  fld_n4: float8
  fld_n5: float8
  fld_s1: String
  fld_s2: String
  fld_s3: String
  fld_s4: String
  fld_s5: String
  fpage: float8

  """
  An array relationship
  """
  history(
    """
    distinct select on columns
    """
    distinct_on: [workflow_history_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_history_order_by!]

    """
    filter the rows returned
    """
    where: workflow_history_bool_exp
  ): [workflow_history!]!

  """
  An aggregated array relationship
  """
  history_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_history_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_history_order_by!]

    """
    filter the rows returned
    """
    where: workflow_history_bool_exp
  ): workflow_history_aggregate!

  """
  An array relationship
  """
  keywords(
    """
    distinct select on columns
    """
    distinct_on: [workflow_highlight_words_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_highlight_words_order_by!]

    """
    filter the rows returned
    """
    where: workflow_highlight_words_bool_exp
  ): [workflow_highlight_words!]!

  """
  An aggregated array relationship
  """
  keywords_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_highlight_words_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_highlight_words_order_by!]

    """
    filter the rows returned
    """
    where: workflow_highlight_words_bool_exp
  ): workflow_highlight_words_aggregate!
  lpage: float8

  """
  An array relationship
  """
  names(
    """
    distinct select on columns
    """
    distinct_on: [risdata_doc_names_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [risdata_doc_names_order_by!]

    """
    filter the rows returned
    """
    where: risdata_doc_names_bool_exp
  ): [risdata_doc_names!]!

  """
  An aggregated array relationship
  """
  names_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [risdata_doc_names_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [risdata_doc_names_order_by!]

    """
    filter the rows returned
    """
    where: risdata_doc_names_bool_exp
  ): risdata_doc_names_aggregate!

  """
  An array relationship
  """
  other_workflows(
    """
    distinct select on columns
    """
    distinct_on: [workflow_documents_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_documents_order_by!]

    """
    filter the rows returned
    """
    where: workflow_documents_bool_exp
  ): [workflow_documents!]!

  """
  An aggregated array relationship
  """
  other_workflows_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_documents_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_documents_order_by!]

    """
    filter the rows returned
    """
    where: workflow_documents_bool_exp
  ): workflow_documents_aggregate!
  pages: float8

  """
  An array relationship
  """
  paper_names(
    """
    distinct select on columns
    """
    distinct_on: [paper_doc_names_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [paper_doc_names_order_by!]

    """
    filter the rows returned
    """
    where: paper_doc_names_bool_exp
  ): [paper_doc_names!]!

  """
  An aggregated array relationship
  """
  paper_names_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [paper_doc_names_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [paper_doc_names_order_by!]

    """
    filter the rows returned
    """
    where: paper_doc_names_bool_exp
  ): paper_doc_names_aggregate!
  parent: bpchar
  parent_id: float8
  prev_stage_user: String!
  redacted_pages: numeric
  release_id: numeric
  release_info: String
  result2: String
  result2_tag: String
  result3: String
  result3_tag: String
  skip_flag: bpchar
  source_id: float8!
  stage: String
  stage_date: timestamp
  stage_id: float8
  stage_lock: bpchar
  stage_user: String
  status: float8
  title: String
  updatex: timestamp
  user_coded: String
  user_qaed: String
  user_qced: String

  """
  An object relationship
  """
  workflow: workflow_workflow
  workflow_id: float8!
}

"""
aggregated selection of "workflow.documents"
"""
type workflow_documents_aggregate {
  aggregate: workflow_documents_aggregate_fields
  nodes: [workflow_documents!]!
}

"""
aggregate fields of "workflow.documents"
"""
type workflow_documents_aggregate_fields {
  avg: workflow_documents_avg_fields
  count(columns: [workflow_documents_select_column!], distinct: Boolean): Int
  max: workflow_documents_max_fields
  min: workflow_documents_min_fields
  stddev: workflow_documents_stddev_fields
  stddev_pop: workflow_documents_stddev_pop_fields
  stddev_samp: workflow_documents_stddev_samp_fields
  sum: workflow_documents_sum_fields
  var_pop: workflow_documents_var_pop_fields
  var_samp: workflow_documents_var_samp_fields
  variance: workflow_documents_variance_fields
}

"""
order by aggregate values of table "workflow.documents"
"""
input workflow_documents_aggregate_order_by {
  avg: workflow_documents_avg_order_by
  count: order_by
  max: workflow_documents_max_order_by
  min: workflow_documents_min_order_by
  stddev: workflow_documents_stddev_order_by
  stddev_pop: workflow_documents_stddev_pop_order_by
  stddev_samp: workflow_documents_stddev_samp_order_by
  sum: workflow_documents_sum_order_by
  var_pop: workflow_documents_var_pop_order_by
  var_samp: workflow_documents_var_samp_order_by
  variance: workflow_documents_variance_order_by
}

"""
input type for inserting array relation for remote table "workflow.documents"
"""
input workflow_documents_arr_rel_insert_input {
  data: [workflow_documents_insert_input!]!
  on_conflict: workflow_documents_on_conflict
}

"""
aggregate avg on columns
"""
type workflow_documents_avg_fields {
  ID: Float
  child_count: Float
  control_flag: Float
  fld_n1: Float
  fld_n2: Float
  fld_n3: Float
  fld_n4: Float
  fld_n5: Float
  fpage: Float
  lpage: Float
  pages: Float
  parent_id: Float
  redacted_pages: Float
  release_id: Float
  source_id: Float
  stage_id: Float
  status: Float
  workflow_id: Float
}

"""
order by avg() on columns of table "workflow.documents"
"""
input workflow_documents_avg_order_by {
  ID: order_by
  child_count: order_by
  control_flag: order_by
  fld_n1: order_by
  fld_n2: order_by
  fld_n3: order_by
  fld_n4: order_by
  fld_n5: order_by
  fpage: order_by
  lpage: order_by
  pages: order_by
  parent_id: order_by
  redacted_pages: order_by
  release_id: order_by
  source_id: order_by
  stage_id: order_by
  status: order_by
  workflow_id: order_by
}

"""
Boolean expression to filter rows from the table "workflow.documents". All fields are combined with a logical 'AND'.
"""
input workflow_documents_bool_exp {
  COMMENTS: String_comparison_exp
  ID: float8_comparison_exp
  RESULT: String_comparison_exp
  SCHEMA_NAME: String_comparison_exp
  _and: [workflow_documents_bool_exp]
  _not: workflow_documents_bool_exp
  _or: [workflow_documents_bool_exp]
  acc_no: String_comparison_exp
  adhoc_card: workflow_adhoc_card_bool_exp
  ads_udi: String_comparison_exp
  alert: bpchar_comparison_exp
  call_center: workflow_call_center_acc_no_bool_exp
  child_count: float8_comparison_exp
  children: workflow_documents_bool_exp
  control_flag: float8_comparison_exp
  ctr: String_comparison_exp
  date_added: timestamp_comparison_exp
  date_due: timestamp_comparison_exp
  decision: workflow_workflow_decision_bool_exp
  doc_comments: workflow_doc_comments_bool_exp
  doc_sources: workflow_doc_sources_bool_exp
  document_parent: workflow_documents_bool_exp
  document_redactions: workflow_redacted_pages_bool_exp
  edit_field: String_comparison_exp
  edit_field2: String_comparison_exp
  efiles_names: efiles_doc_names_bool_exp
  email_names: email_doc_names_bool_exp
  final_priv_log: workflow_final_priv_log_bool_exp
  final_priv_log_recipient: workflow_final_priv_log_recipient_bool_exp
  fld_d1: timestamp_comparison_exp
  fld_d2: timestamp_comparison_exp
  fld_d3: timestamp_comparison_exp
  fld_d4: timestamp_comparison_exp
  fld_d5: timestamp_comparison_exp
  fld_n1: float8_comparison_exp
  fld_n2: float8_comparison_exp
  fld_n3: float8_comparison_exp
  fld_n4: float8_comparison_exp
  fld_n5: float8_comparison_exp
  fld_s1: String_comparison_exp
  fld_s2: String_comparison_exp
  fld_s3: String_comparison_exp
  fld_s4: String_comparison_exp
  fld_s5: String_comparison_exp
  fpage: float8_comparison_exp
  history: workflow_history_bool_exp
  keywords: workflow_highlight_words_bool_exp
  lpage: float8_comparison_exp
  names: risdata_doc_names_bool_exp
  other_workflows: workflow_documents_bool_exp
  pages: float8_comparison_exp
  paper_names: paper_doc_names_bool_exp
  parent: bpchar_comparison_exp
  parent_id: float8_comparison_exp
  prev_stage_user: String_comparison_exp
  redacted_pages: numeric_comparison_exp
  release_id: numeric_comparison_exp
  release_info: String_comparison_exp
  result2: String_comparison_exp
  result2_tag: String_comparison_exp
  result3: String_comparison_exp
  result3_tag: String_comparison_exp
  skip_flag: bpchar_comparison_exp
  source_id: float8_comparison_exp
  stage: String_comparison_exp
  stage_date: timestamp_comparison_exp
  stage_id: float8_comparison_exp
  stage_lock: bpchar_comparison_exp
  stage_user: String_comparison_exp
  status: float8_comparison_exp
  title: String_comparison_exp
  updatex: timestamp_comparison_exp
  user_coded: String_comparison_exp
  user_qaed: String_comparison_exp
  user_qced: String_comparison_exp
  workflow: workflow_workflow_bool_exp
  workflow_id: float8_comparison_exp
}

"""
unique or primary key constraints on table "workflow.documents"
"""
enum workflow_documents_constraint {
  """
  unique or primary key constraint
  """
  documents_pkey
}

"""
input type for incrementing integer column in table "workflow.documents"
"""
input workflow_documents_inc_input {
  ID: float8
  child_count: float8
  control_flag: float8
  fld_n1: float8
  fld_n2: float8
  fld_n3: float8
  fld_n4: float8
  fld_n5: float8
  fpage: float8
  lpage: float8
  pages: float8
  parent_id: float8
  redacted_pages: numeric
  release_id: numeric
  source_id: float8
  stage_id: float8
  status: float8
  workflow_id: float8
}

"""
input type for inserting data into table "workflow.documents"
"""
input workflow_documents_insert_input {
  COMMENTS: String
  ID: float8
  RESULT: String
  SCHEMA_NAME: String
  acc_no: String
  adhoc_card: workflow_adhoc_card_arr_rel_insert_input
  ads_udi: String
  alert: bpchar
  call_center: workflow_call_center_acc_no_arr_rel_insert_input
  child_count: float8
  children: workflow_documents_arr_rel_insert_input
  control_flag: float8
  ctr: String
  date_added: timestamp
  date_due: timestamp
  decision: workflow_workflow_decision_obj_rel_insert_input
  doc_comments: workflow_doc_comments_arr_rel_insert_input
  doc_sources: workflow_doc_sources_arr_rel_insert_input
  document_parent: workflow_documents_obj_rel_insert_input
  document_redactions: workflow_redacted_pages_arr_rel_insert_input
  edit_field: String
  edit_field2: String
  final_priv_log: workflow_final_priv_log_obj_rel_insert_input
  final_priv_log_recipient: workflow_final_priv_log_recipient_arr_rel_insert_input
  fld_d1: timestamp
  fld_d2: timestamp
  fld_d3: timestamp
  fld_d4: timestamp
  fld_d5: timestamp
  fld_n1: float8
  fld_n2: float8
  fld_n3: float8
  fld_n4: float8
  fld_n5: float8
  fld_s1: String
  fld_s2: String
  fld_s3: String
  fld_s4: String
  fld_s5: String
  fpage: float8
  history: workflow_history_arr_rel_insert_input
  keywords: workflow_highlight_words_arr_rel_insert_input
  lpage: float8
  other_workflows: workflow_documents_arr_rel_insert_input
  pages: float8
  parent: bpchar
  parent_id: float8
  prev_stage_user: String
  redacted_pages: numeric
  release_id: numeric
  release_info: String
  result2: String
  result2_tag: String
  result3: String
  result3_tag: String
  skip_flag: bpchar
  source_id: float8
  stage: String
  stage_date: timestamp
  stage_id: float8
  stage_lock: bpchar
  stage_user: String
  status: float8
  title: String
  updatex: timestamp
  user_coded: String
  user_qaed: String
  user_qced: String
  workflow: workflow_workflow_obj_rel_insert_input
  workflow_id: float8
}

"""
aggregate max on columns
"""
type workflow_documents_max_fields {
  COMMENTS: String
  ID: float8
  RESULT: String
  SCHEMA_NAME: String
  acc_no: String
  ads_udi: String
  child_count: float8
  control_flag: float8
  ctr: String
  date_added: timestamp
  date_due: timestamp
  edit_field: String
  edit_field2: String
  fld_d1: timestamp
  fld_d2: timestamp
  fld_d3: timestamp
  fld_d4: timestamp
  fld_d5: timestamp
  fld_n1: float8
  fld_n2: float8
  fld_n3: float8
  fld_n4: float8
  fld_n5: float8
  fld_s1: String
  fld_s2: String
  fld_s3: String
  fld_s4: String
  fld_s5: String
  fpage: float8
  lpage: float8
  pages: float8
  parent_id: float8
  prev_stage_user: String
  redacted_pages: numeric
  release_id: numeric
  release_info: String
  result2: String
  result2_tag: String
  result3: String
  result3_tag: String
  source_id: float8
  stage: String
  stage_date: timestamp
  stage_id: float8
  stage_user: String
  status: float8
  title: String
  updatex: timestamp
  user_coded: String
  user_qaed: String
  user_qced: String
  workflow_id: float8
}

"""
order by max() on columns of table "workflow.documents"
"""
input workflow_documents_max_order_by {
  COMMENTS: order_by
  ID: order_by
  RESULT: order_by
  SCHEMA_NAME: order_by
  acc_no: order_by
  ads_udi: order_by
  child_count: order_by
  control_flag: order_by
  ctr: order_by
  date_added: order_by
  date_due: order_by
  edit_field: order_by
  edit_field2: order_by
  fld_d1: order_by
  fld_d2: order_by
  fld_d3: order_by
  fld_d4: order_by
  fld_d5: order_by
  fld_n1: order_by
  fld_n2: order_by
  fld_n3: order_by
  fld_n4: order_by
  fld_n5: order_by
  fld_s1: order_by
  fld_s2: order_by
  fld_s3: order_by
  fld_s4: order_by
  fld_s5: order_by
  fpage: order_by
  lpage: order_by
  pages: order_by
  parent_id: order_by
  prev_stage_user: order_by
  redacted_pages: order_by
  release_id: order_by
  release_info: order_by
  result2: order_by
  result2_tag: order_by
  result3: order_by
  result3_tag: order_by
  source_id: order_by
  stage: order_by
  stage_date: order_by
  stage_id: order_by
  stage_user: order_by
  status: order_by
  title: order_by
  updatex: order_by
  user_coded: order_by
  user_qaed: order_by
  user_qced: order_by
  workflow_id: order_by
}

"""
aggregate min on columns
"""
type workflow_documents_min_fields {
  COMMENTS: String
  ID: float8
  RESULT: String
  SCHEMA_NAME: String
  acc_no: String
  ads_udi: String
  child_count: float8
  control_flag: float8
  ctr: String
  date_added: timestamp
  date_due: timestamp
  edit_field: String
  edit_field2: String
  fld_d1: timestamp
  fld_d2: timestamp
  fld_d3: timestamp
  fld_d4: timestamp
  fld_d5: timestamp
  fld_n1: float8
  fld_n2: float8
  fld_n3: float8
  fld_n4: float8
  fld_n5: float8
  fld_s1: String
  fld_s2: String
  fld_s3: String
  fld_s4: String
  fld_s5: String
  fpage: float8
  lpage: float8
  pages: float8
  parent_id: float8
  prev_stage_user: String
  redacted_pages: numeric
  release_id: numeric
  release_info: String
  result2: String
  result2_tag: String
  result3: String
  result3_tag: String
  source_id: float8
  stage: String
  stage_date: timestamp
  stage_id: float8
  stage_user: String
  status: float8
  title: String
  updatex: timestamp
  user_coded: String
  user_qaed: String
  user_qced: String
  workflow_id: float8
}

"""
order by min() on columns of table "workflow.documents"
"""
input workflow_documents_min_order_by {
  COMMENTS: order_by
  ID: order_by
  RESULT: order_by
  SCHEMA_NAME: order_by
  acc_no: order_by
  ads_udi: order_by
  child_count: order_by
  control_flag: order_by
  ctr: order_by
  date_added: order_by
  date_due: order_by
  edit_field: order_by
  edit_field2: order_by
  fld_d1: order_by
  fld_d2: order_by
  fld_d3: order_by
  fld_d4: order_by
  fld_d5: order_by
  fld_n1: order_by
  fld_n2: order_by
  fld_n3: order_by
  fld_n4: order_by
  fld_n5: order_by
  fld_s1: order_by
  fld_s2: order_by
  fld_s3: order_by
  fld_s4: order_by
  fld_s5: order_by
  fpage: order_by
  lpage: order_by
  pages: order_by
  parent_id: order_by
  prev_stage_user: order_by
  redacted_pages: order_by
  release_id: order_by
  release_info: order_by
  result2: order_by
  result2_tag: order_by
  result3: order_by
  result3_tag: order_by
  source_id: order_by
  stage: order_by
  stage_date: order_by
  stage_id: order_by
  stage_user: order_by
  status: order_by
  title: order_by
  updatex: order_by
  user_coded: order_by
  user_qaed: order_by
  user_qced: order_by
  workflow_id: order_by
}

"""
response of any mutation on the table "workflow.documents"
"""
type workflow_documents_mutation_response {
  """
  number of affected rows by the mutation
  """
  affected_rows: Int!

  """
  data of the affected rows by the mutation
  """
  returning: [workflow_documents!]!
}

"""
input type for inserting object relation for remote table "workflow.documents"
"""
input workflow_documents_obj_rel_insert_input {
  data: workflow_documents_insert_input!
  on_conflict: workflow_documents_on_conflict
}

"""
on conflict condition type for table "workflow.documents"
"""
input workflow_documents_on_conflict {
  constraint: workflow_documents_constraint!
  update_columns: [workflow_documents_update_column!]!
  where: workflow_documents_bool_exp
}

"""
ordering options when selecting data from "workflow.documents"
"""
input workflow_documents_order_by {
  COMMENTS: order_by
  ID: order_by
  RESULT: order_by
  SCHEMA_NAME: order_by
  acc_no: order_by
  adhoc_card_aggregate: workflow_adhoc_card_aggregate_order_by
  ads_udi: order_by
  alert: order_by
  call_center_aggregate: workflow_call_center_acc_no_aggregate_order_by
  child_count: order_by
  children_aggregate: workflow_documents_aggregate_order_by
  control_flag: order_by
  ctr: order_by
  date_added: order_by
  date_due: order_by
  decision: workflow_workflow_decision_order_by
  doc_comments_aggregate: workflow_doc_comments_aggregate_order_by
  doc_sources_aggregate: workflow_doc_sources_aggregate_order_by
  document_parent: workflow_documents_order_by
  document_redactions_aggregate: workflow_redacted_pages_aggregate_order_by
  edit_field: order_by
  edit_field2: order_by
  efiles_names_aggregate: efiles_doc_names_aggregate_order_by
  email_names_aggregate: email_doc_names_aggregate_order_by
  final_priv_log: workflow_final_priv_log_order_by
  final_priv_log_recipient_aggregate: workflow_final_priv_log_recipient_aggregate_order_by
  fld_d1: order_by
  fld_d2: order_by
  fld_d3: order_by
  fld_d4: order_by
  fld_d5: order_by
  fld_n1: order_by
  fld_n2: order_by
  fld_n3: order_by
  fld_n4: order_by
  fld_n5: order_by
  fld_s1: order_by
  fld_s2: order_by
  fld_s3: order_by
  fld_s4: order_by
  fld_s5: order_by
  fpage: order_by
  history_aggregate: workflow_history_aggregate_order_by
  keywords_aggregate: workflow_highlight_words_aggregate_order_by
  lpage: order_by
  names_aggregate: risdata_doc_names_aggregate_order_by
  other_workflows_aggregate: workflow_documents_aggregate_order_by
  pages: order_by
  paper_names_aggregate: paper_doc_names_aggregate_order_by
  parent: order_by
  parent_id: order_by
  prev_stage_user: order_by
  redacted_pages: order_by
  release_id: order_by
  release_info: order_by
  result2: order_by
  result2_tag: order_by
  result3: order_by
  result3_tag: order_by
  skip_flag: order_by
  source_id: order_by
  stage: order_by
  stage_date: order_by
  stage_id: order_by
  stage_lock: order_by
  stage_user: order_by
  status: order_by
  title: order_by
  updatex: order_by
  user_coded: order_by
  user_qaed: order_by
  user_qced: order_by
  workflow: workflow_workflow_order_by
  workflow_id: order_by
}

"""
primary key columns input for table: "workflow.documents"
"""
input workflow_documents_pk_columns_input {
  ID: float8!
}

"""
select columns of table "workflow.documents"
"""
enum workflow_documents_select_column {
  """
  column name
  """
  COMMENTS

  """
  column name
  """
  ID

  """
  column name
  """
  RESULT

  """
  column name
  """
  SCHEMA_NAME

  """
  column name
  """
  acc_no

  """
  column name
  """
  ads_udi

  """
  column name
  """
  alert

  """
  column name
  """
  child_count

  """
  column name
  """
  control_flag

  """
  column name
  """
  ctr

  """
  column name
  """
  date_added

  """
  column name
  """
  date_due

  """
  column name
  """
  edit_field

  """
  column name
  """
  edit_field2

  """
  column name
  """
  fld_d1

  """
  column name
  """
  fld_d2

  """
  column name
  """
  fld_d3

  """
  column name
  """
  fld_d4

  """
  column name
  """
  fld_d5

  """
  column name
  """
  fld_n1

  """
  column name
  """
  fld_n2

  """
  column name
  """
  fld_n3

  """
  column name
  """
  fld_n4

  """
  column name
  """
  fld_n5

  """
  column name
  """
  fld_s1

  """
  column name
  """
  fld_s2

  """
  column name
  """
  fld_s3

  """
  column name
  """
  fld_s4

  """
  column name
  """
  fld_s5

  """
  column name
  """
  fpage

  """
  column name
  """
  lpage

  """
  column name
  """
  pages

  """
  column name
  """
  parent

  """
  column name
  """
  parent_id

  """
  column name
  """
  prev_stage_user

  """
  column name
  """
  redacted_pages

  """
  column name
  """
  release_id

  """
  column name
  """
  release_info

  """
  column name
  """
  result2

  """
  column name
  """
  result2_tag

  """
  column name
  """
  result3

  """
  column name
  """
  result3_tag

  """
  column name
  """
  skip_flag

  """
  column name
  """
  source_id

  """
  column name
  """
  stage

  """
  column name
  """
  stage_date

  """
  column name
  """
  stage_id

  """
  column name
  """
  stage_lock

  """
  column name
  """
  stage_user

  """
  column name
  """
  status

  """
  column name
  """
  title

  """
  column name
  """
  updatex

  """
  column name
  """
  user_coded

  """
  column name
  """
  user_qaed

  """
  column name
  """
  user_qced

  """
  column name
  """
  workflow_id
}

"""
input type for updating data in table "workflow.documents"
"""
input workflow_documents_set_input {
  COMMENTS: String
  ID: float8
  RESULT: String
  SCHEMA_NAME: String
  acc_no: String
  ads_udi: String
  alert: bpchar
  child_count: float8
  control_flag: float8
  ctr: String
  date_added: timestamp
  date_due: timestamp
  edit_field: String
  edit_field2: String
  fld_d1: timestamp
  fld_d2: timestamp
  fld_d3: timestamp
  fld_d4: timestamp
  fld_d5: timestamp
  fld_n1: float8
  fld_n2: float8
  fld_n3: float8
  fld_n4: float8
  fld_n5: float8
  fld_s1: String
  fld_s2: String
  fld_s3: String
  fld_s4: String
  fld_s5: String
  fpage: float8
  lpage: float8
  pages: float8
  parent: bpchar
  parent_id: float8
  prev_stage_user: String
  redacted_pages: numeric
  release_id: numeric
  release_info: String
  result2: String
  result2_tag: String
  result3: String
  result3_tag: String
  skip_flag: bpchar
  source_id: float8
  stage: String
  stage_date: timestamp
  stage_id: float8
  stage_lock: bpchar
  stage_user: String
  status: float8
  title: String
  updatex: timestamp
  user_coded: String
  user_qaed: String
  user_qced: String
  workflow_id: float8
}

"""
aggregate stddev on columns
"""
type workflow_documents_stddev_fields {
  ID: Float
  child_count: Float
  control_flag: Float
  fld_n1: Float
  fld_n2: Float
  fld_n3: Float
  fld_n4: Float
  fld_n5: Float
  fpage: Float
  lpage: Float
  pages: Float
  parent_id: Float
  redacted_pages: Float
  release_id: Float
  source_id: Float
  stage_id: Float
  status: Float
  workflow_id: Float
}

"""
order by stddev() on columns of table "workflow.documents"
"""
input workflow_documents_stddev_order_by {
  ID: order_by
  child_count: order_by
  control_flag: order_by
  fld_n1: order_by
  fld_n2: order_by
  fld_n3: order_by
  fld_n4: order_by
  fld_n5: order_by
  fpage: order_by
  lpage: order_by
  pages: order_by
  parent_id: order_by
  redacted_pages: order_by
  release_id: order_by
  source_id: order_by
  stage_id: order_by
  status: order_by
  workflow_id: order_by
}

"""
aggregate stddev_pop on columns
"""
type workflow_documents_stddev_pop_fields {
  ID: Float
  child_count: Float
  control_flag: Float
  fld_n1: Float
  fld_n2: Float
  fld_n3: Float
  fld_n4: Float
  fld_n5: Float
  fpage: Float
  lpage: Float
  pages: Float
  parent_id: Float
  redacted_pages: Float
  release_id: Float
  source_id: Float
  stage_id: Float
  status: Float
  workflow_id: Float
}

"""
order by stddev_pop() on columns of table "workflow.documents"
"""
input workflow_documents_stddev_pop_order_by {
  ID: order_by
  child_count: order_by
  control_flag: order_by
  fld_n1: order_by
  fld_n2: order_by
  fld_n3: order_by
  fld_n4: order_by
  fld_n5: order_by
  fpage: order_by
  lpage: order_by
  pages: order_by
  parent_id: order_by
  redacted_pages: order_by
  release_id: order_by
  source_id: order_by
  stage_id: order_by
  status: order_by
  workflow_id: order_by
}

"""
aggregate stddev_samp on columns
"""
type workflow_documents_stddev_samp_fields {
  ID: Float
  child_count: Float
  control_flag: Float
  fld_n1: Float
  fld_n2: Float
  fld_n3: Float
  fld_n4: Float
  fld_n5: Float
  fpage: Float
  lpage: Float
  pages: Float
  parent_id: Float
  redacted_pages: Float
  release_id: Float
  source_id: Float
  stage_id: Float
  status: Float
  workflow_id: Float
}

"""
order by stddev_samp() on columns of table "workflow.documents"
"""
input workflow_documents_stddev_samp_order_by {
  ID: order_by
  child_count: order_by
  control_flag: order_by
  fld_n1: order_by
  fld_n2: order_by
  fld_n3: order_by
  fld_n4: order_by
  fld_n5: order_by
  fpage: order_by
  lpage: order_by
  pages: order_by
  parent_id: order_by
  redacted_pages: order_by
  release_id: order_by
  source_id: order_by
  stage_id: order_by
  status: order_by
  workflow_id: order_by
}

"""
aggregate sum on columns
"""
type workflow_documents_sum_fields {
  ID: float8
  child_count: float8
  control_flag: float8
  fld_n1: float8
  fld_n2: float8
  fld_n3: float8
  fld_n4: float8
  fld_n5: float8
  fpage: float8
  lpage: float8
  pages: float8
  parent_id: float8
  redacted_pages: numeric
  release_id: numeric
  source_id: float8
  stage_id: float8
  status: float8
  workflow_id: float8
}

"""
order by sum() on columns of table "workflow.documents"
"""
input workflow_documents_sum_order_by {
  ID: order_by
  child_count: order_by
  control_flag: order_by
  fld_n1: order_by
  fld_n2: order_by
  fld_n3: order_by
  fld_n4: order_by
  fld_n5: order_by
  fpage: order_by
  lpage: order_by
  pages: order_by
  parent_id: order_by
  redacted_pages: order_by
  release_id: order_by
  source_id: order_by
  stage_id: order_by
  status: order_by
  workflow_id: order_by
}

"""
update columns of table "workflow.documents"
"""
enum workflow_documents_update_column {
  """
  column name
  """
  COMMENTS

  """
  column name
  """
  ID

  """
  column name
  """
  RESULT

  """
  column name
  """
  SCHEMA_NAME

  """
  column name
  """
  acc_no

  """
  column name
  """
  ads_udi

  """
  column name
  """
  alert

  """
  column name
  """
  child_count

  """
  column name
  """
  control_flag

  """
  column name
  """
  ctr

  """
  column name
  """
  date_added

  """
  column name
  """
  date_due

  """
  column name
  """
  edit_field

  """
  column name
  """
  edit_field2

  """
  column name
  """
  fld_d1

  """
  column name
  """
  fld_d2

  """
  column name
  """
  fld_d3

  """
  column name
  """
  fld_d4

  """
  column name
  """
  fld_d5

  """
  column name
  """
  fld_n1

  """
  column name
  """
  fld_n2

  """
  column name
  """
  fld_n3

  """
  column name
  """
  fld_n4

  """
  column name
  """
  fld_n5

  """
  column name
  """
  fld_s1

  """
  column name
  """
  fld_s2

  """
  column name
  """
  fld_s3

  """
  column name
  """
  fld_s4

  """
  column name
  """
  fld_s5

  """
  column name
  """
  fpage

  """
  column name
  """
  lpage

  """
  column name
  """
  pages

  """
  column name
  """
  parent

  """
  column name
  """
  parent_id

  """
  column name
  """
  prev_stage_user

  """
  column name
  """
  redacted_pages

  """
  column name
  """
  release_id

  """
  column name
  """
  release_info

  """
  column name
  """
  result2

  """
  column name
  """
  result2_tag

  """
  column name
  """
  result3

  """
  column name
  """
  result3_tag

  """
  column name
  """
  skip_flag

  """
  column name
  """
  source_id

  """
  column name
  """
  stage

  """
  column name
  """
  stage_date

  """
  column name
  """
  stage_id

  """
  column name
  """
  stage_lock

  """
  column name
  """
  stage_user

  """
  column name
  """
  status

  """
  column name
  """
  title

  """
  column name
  """
  updatex

  """
  column name
  """
  user_coded

  """
  column name
  """
  user_qaed

  """
  column name
  """
  user_qced

  """
  column name
  """
  workflow_id
}

"""
aggregate var_pop on columns
"""
type workflow_documents_var_pop_fields {
  ID: Float
  child_count: Float
  control_flag: Float
  fld_n1: Float
  fld_n2: Float
  fld_n3: Float
  fld_n4: Float
  fld_n5: Float
  fpage: Float
  lpage: Float
  pages: Float
  parent_id: Float
  redacted_pages: Float
  release_id: Float
  source_id: Float
  stage_id: Float
  status: Float
  workflow_id: Float
}

"""
order by var_pop() on columns of table "workflow.documents"
"""
input workflow_documents_var_pop_order_by {
  ID: order_by
  child_count: order_by
  control_flag: order_by
  fld_n1: order_by
  fld_n2: order_by
  fld_n3: order_by
  fld_n4: order_by
  fld_n5: order_by
  fpage: order_by
  lpage: order_by
  pages: order_by
  parent_id: order_by
  redacted_pages: order_by
  release_id: order_by
  source_id: order_by
  stage_id: order_by
  status: order_by
  workflow_id: order_by
}

"""
aggregate var_samp on columns
"""
type workflow_documents_var_samp_fields {
  ID: Float
  child_count: Float
  control_flag: Float
  fld_n1: Float
  fld_n2: Float
  fld_n3: Float
  fld_n4: Float
  fld_n5: Float
  fpage: Float
  lpage: Float
  pages: Float
  parent_id: Float
  redacted_pages: Float
  release_id: Float
  source_id: Float
  stage_id: Float
  status: Float
  workflow_id: Float
}

"""
order by var_samp() on columns of table "workflow.documents"
"""
input workflow_documents_var_samp_order_by {
  ID: order_by
  child_count: order_by
  control_flag: order_by
  fld_n1: order_by
  fld_n2: order_by
  fld_n3: order_by
  fld_n4: order_by
  fld_n5: order_by
  fpage: order_by
  lpage: order_by
  pages: order_by
  parent_id: order_by
  redacted_pages: order_by
  release_id: order_by
  source_id: order_by
  stage_id: order_by
  status: order_by
  workflow_id: order_by
}

"""
aggregate variance on columns
"""
type workflow_documents_variance_fields {
  ID: Float
  child_count: Float
  control_flag: Float
  fld_n1: Float
  fld_n2: Float
  fld_n3: Float
  fld_n4: Float
  fld_n5: Float
  fpage: Float
  lpage: Float
  pages: Float
  parent_id: Float
  redacted_pages: Float
  release_id: Float
  source_id: Float
  stage_id: Float
  status: Float
  workflow_id: Float
}

"""
order by variance() on columns of table "workflow.documents"
"""
input workflow_documents_variance_order_by {
  ID: order_by
  child_count: order_by
  control_flag: order_by
  fld_n1: order_by
  fld_n2: order_by
  fld_n3: order_by
  fld_n4: order_by
  fld_n5: order_by
  fpage: order_by
  lpage: order_by
  pages: order_by
  parent_id: order_by
  redacted_pages: order_by
  release_id: order_by
  source_id: order_by
  stage_id: order_by
  status: order_by
  workflow_id: order_by
}

"""
columns and relationships of "workflow.final_priv_log"
"""
type workflow_final_priv_log {
  SCHEMA_NAME: String
  acc_no: String!
  ads_udi: String
  confidentiality: String
  doc_date: String
  doc_type: String
  dp_affirmation: String
  dp_decision: String
  dp_decision_date: String
  dp_explanation: String
  dp_noredaction: String
  dp_official: String
  dp_redactable_flag: bpchar
  lsn_acc_no: String
  other_privileges: String
  priv_types: String
  purpose: String
  relationship: String
  subject_matter: String
  title: String
}

"""
aggregated selection of "workflow.final_priv_log"
"""
type workflow_final_priv_log_aggregate {
  aggregate: workflow_final_priv_log_aggregate_fields
  nodes: [workflow_final_priv_log!]!
}

"""
aggregate fields of "workflow.final_priv_log"
"""
type workflow_final_priv_log_aggregate_fields {
  count(columns: [workflow_final_priv_log_select_column!], distinct: Boolean): Int
  max: workflow_final_priv_log_max_fields
  min: workflow_final_priv_log_min_fields
}

"""
order by aggregate values of table "workflow.final_priv_log"
"""
input workflow_final_priv_log_aggregate_order_by {
  count: order_by
  max: workflow_final_priv_log_max_order_by
  min: workflow_final_priv_log_min_order_by
}

"""
input type for inserting array relation for remote table "workflow.final_priv_log"
"""
input workflow_final_priv_log_arr_rel_insert_input {
  data: [workflow_final_priv_log_insert_input!]!
  on_conflict: workflow_final_priv_log_on_conflict
}

"""
columns and relationships of "workflow.final_priv_log_author"
"""
type workflow_final_priv_log_author {
  NAME: String
  acc_no: String
}

"""
aggregated selection of "workflow.final_priv_log_author"
"""
type workflow_final_priv_log_author_aggregate {
  aggregate: workflow_final_priv_log_author_aggregate_fields
  nodes: [workflow_final_priv_log_author!]!
}

"""
aggregate fields of "workflow.final_priv_log_author"
"""
type workflow_final_priv_log_author_aggregate_fields {
  count(columns: [workflow_final_priv_log_author_select_column!], distinct: Boolean): Int
  max: workflow_final_priv_log_author_max_fields
  min: workflow_final_priv_log_author_min_fields
}

"""
order by aggregate values of table "workflow.final_priv_log_author"
"""
input workflow_final_priv_log_author_aggregate_order_by {
  count: order_by
  max: workflow_final_priv_log_author_max_order_by
  min: workflow_final_priv_log_author_min_order_by
}

"""
input type for inserting array relation for remote table "workflow.final_priv_log_author"
"""
input workflow_final_priv_log_author_arr_rel_insert_input {
  data: [workflow_final_priv_log_author_insert_input!]!
}

"""
Boolean expression to filter rows from the table
"workflow.final_priv_log_author". All fields are combined with a logical 'AND'.
"""
input workflow_final_priv_log_author_bool_exp {
  NAME: String_comparison_exp
  _and: [workflow_final_priv_log_author_bool_exp]
  _not: workflow_final_priv_log_author_bool_exp
  _or: [workflow_final_priv_log_author_bool_exp]
  acc_no: String_comparison_exp
}

"""
input type for inserting data into table "workflow.final_priv_log_author"
"""
input workflow_final_priv_log_author_insert_input {
  NAME: String
  acc_no: String
}

"""
aggregate max on columns
"""
type workflow_final_priv_log_author_max_fields {
  NAME: String
  acc_no: String
}

"""
order by max() on columns of table "workflow.final_priv_log_author"
"""
input workflow_final_priv_log_author_max_order_by {
  NAME: order_by
  acc_no: order_by
}

"""
aggregate min on columns
"""
type workflow_final_priv_log_author_min_fields {
  NAME: String
  acc_no: String
}

"""
order by min() on columns of table "workflow.final_priv_log_author"
"""
input workflow_final_priv_log_author_min_order_by {
  NAME: order_by
  acc_no: order_by
}

"""
response of any mutation on the table "workflow.final_priv_log_author"
"""
type workflow_final_priv_log_author_mutation_response {
  """
  number of affected rows by the mutation
  """
  affected_rows: Int!

  """
  data of the affected rows by the mutation
  """
  returning: [workflow_final_priv_log_author!]!
}

"""
input type for inserting object relation for remote table "workflow.final_priv_log_author"
"""
input workflow_final_priv_log_author_obj_rel_insert_input {
  data: workflow_final_priv_log_author_insert_input!
}

"""
ordering options when selecting data from "workflow.final_priv_log_author"
"""
input workflow_final_priv_log_author_order_by {
  NAME: order_by
  acc_no: order_by
}

"""
select columns of table "workflow.final_priv_log_author"
"""
enum workflow_final_priv_log_author_select_column {
  """
  column name
  """
  NAME

  """
  column name
  """
  acc_no
}

"""
input type for updating data in table "workflow.final_priv_log_author"
"""
input workflow_final_priv_log_author_set_input {
  NAME: String
  acc_no: String
}

"""
Boolean expression to filter rows from the table "workflow.final_priv_log". All fields are combined with a logical 'AND'.
"""
input workflow_final_priv_log_bool_exp {
  SCHEMA_NAME: String_comparison_exp
  _and: [workflow_final_priv_log_bool_exp]
  _not: workflow_final_priv_log_bool_exp
  _or: [workflow_final_priv_log_bool_exp]
  acc_no: String_comparison_exp
  ads_udi: String_comparison_exp
  confidentiality: String_comparison_exp
  doc_date: String_comparison_exp
  doc_type: String_comparison_exp
  dp_affirmation: String_comparison_exp
  dp_decision: String_comparison_exp
  dp_decision_date: String_comparison_exp
  dp_explanation: String_comparison_exp
  dp_noredaction: String_comparison_exp
  dp_official: String_comparison_exp
  dp_redactable_flag: bpchar_comparison_exp
  lsn_acc_no: String_comparison_exp
  other_privileges: String_comparison_exp
  priv_types: String_comparison_exp
  purpose: String_comparison_exp
  relationship: String_comparison_exp
  subject_matter: String_comparison_exp
  title: String_comparison_exp
}

"""
unique or primary key constraints on table "workflow.final_priv_log"
"""
enum workflow_final_priv_log_constraint {
  """
  unique or primary key constraint
  """
  final_priv_log_pkey
}

"""
input type for inserting data into table "workflow.final_priv_log"
"""
input workflow_final_priv_log_insert_input {
  SCHEMA_NAME: String
  acc_no: String
  ads_udi: String
  confidentiality: String
  doc_date: String
  doc_type: String
  dp_affirmation: String
  dp_decision: String
  dp_decision_date: String
  dp_explanation: String
  dp_noredaction: String
  dp_official: String
  dp_redactable_flag: bpchar
  lsn_acc_no: String
  other_privileges: String
  priv_types: String
  purpose: String
  relationship: String
  subject_matter: String
  title: String
}

"""
aggregate max on columns
"""
type workflow_final_priv_log_max_fields {
  SCHEMA_NAME: String
  acc_no: String
  ads_udi: String
  confidentiality: String
  doc_date: String
  doc_type: String
  dp_affirmation: String
  dp_decision: String
  dp_decision_date: String
  dp_explanation: String
  dp_noredaction: String
  dp_official: String
  lsn_acc_no: String
  other_privileges: String
  priv_types: String
  purpose: String
  relationship: String
  subject_matter: String
  title: String
}

"""
order by max() on columns of table "workflow.final_priv_log"
"""
input workflow_final_priv_log_max_order_by {
  SCHEMA_NAME: order_by
  acc_no: order_by
  ads_udi: order_by
  confidentiality: order_by
  doc_date: order_by
  doc_type: order_by
  dp_affirmation: order_by
  dp_decision: order_by
  dp_decision_date: order_by
  dp_explanation: order_by
  dp_noredaction: order_by
  dp_official: order_by
  lsn_acc_no: order_by
  other_privileges: order_by
  priv_types: order_by
  purpose: order_by
  relationship: order_by
  subject_matter: order_by
  title: order_by
}

"""
aggregate min on columns
"""
type workflow_final_priv_log_min_fields {
  SCHEMA_NAME: String
  acc_no: String
  ads_udi: String
  confidentiality: String
  doc_date: String
  doc_type: String
  dp_affirmation: String
  dp_decision: String
  dp_decision_date: String
  dp_explanation: String
  dp_noredaction: String
  dp_official: String
  lsn_acc_no: String
  other_privileges: String
  priv_types: String
  purpose: String
  relationship: String
  subject_matter: String
  title: String
}

"""
order by min() on columns of table "workflow.final_priv_log"
"""
input workflow_final_priv_log_min_order_by {
  SCHEMA_NAME: order_by
  acc_no: order_by
  ads_udi: order_by
  confidentiality: order_by
  doc_date: order_by
  doc_type: order_by
  dp_affirmation: order_by
  dp_decision: order_by
  dp_decision_date: order_by
  dp_explanation: order_by
  dp_noredaction: order_by
  dp_official: order_by
  lsn_acc_no: order_by
  other_privileges: order_by
  priv_types: order_by
  purpose: order_by
  relationship: order_by
  subject_matter: order_by
  title: order_by
}

"""
response of any mutation on the table "workflow.final_priv_log"
"""
type workflow_final_priv_log_mutation_response {
  """
  number of affected rows by the mutation
  """
  affected_rows: Int!

  """
  data of the affected rows by the mutation
  """
  returning: [workflow_final_priv_log!]!
}

"""
input type for inserting object relation for remote table "workflow.final_priv_log"
"""
input workflow_final_priv_log_obj_rel_insert_input {
  data: workflow_final_priv_log_insert_input!
  on_conflict: workflow_final_priv_log_on_conflict
}

"""
on conflict condition type for table "workflow.final_priv_log"
"""
input workflow_final_priv_log_on_conflict {
  constraint: workflow_final_priv_log_constraint!
  update_columns: [workflow_final_priv_log_update_column!]!
  where: workflow_final_priv_log_bool_exp
}

"""
ordering options when selecting data from "workflow.final_priv_log"
"""
input workflow_final_priv_log_order_by {
  SCHEMA_NAME: order_by
  acc_no: order_by
  ads_udi: order_by
  confidentiality: order_by
  doc_date: order_by
  doc_type: order_by
  dp_affirmation: order_by
  dp_decision: order_by
  dp_decision_date: order_by
  dp_explanation: order_by
  dp_noredaction: order_by
  dp_official: order_by
  dp_redactable_flag: order_by
  lsn_acc_no: order_by
  other_privileges: order_by
  priv_types: order_by
  purpose: order_by
  relationship: order_by
  subject_matter: order_by
  title: order_by
}

"""
primary key columns input for table: "workflow.final_priv_log"
"""
input workflow_final_priv_log_pk_columns_input {
  acc_no: String!
}

"""
columns and relationships of "workflow.final_priv_log_recipient"
"""
type workflow_final_priv_log_recipient {
  NAME: String
  acc_no: String
}

"""
aggregated selection of "workflow.final_priv_log_recipient"
"""
type workflow_final_priv_log_recipient_aggregate {
  aggregate: workflow_final_priv_log_recipient_aggregate_fields
  nodes: [workflow_final_priv_log_recipient!]!
}

"""
aggregate fields of "workflow.final_priv_log_recipient"
"""
type workflow_final_priv_log_recipient_aggregate_fields {
  count(columns: [workflow_final_priv_log_recipient_select_column!], distinct: Boolean): Int
  max: workflow_final_priv_log_recipient_max_fields
  min: workflow_final_priv_log_recipient_min_fields
}

"""
order by aggregate values of table "workflow.final_priv_log_recipient"
"""
input workflow_final_priv_log_recipient_aggregate_order_by {
  count: order_by
  max: workflow_final_priv_log_recipient_max_order_by
  min: workflow_final_priv_log_recipient_min_order_by
}

"""
input type for inserting array relation for remote table "workflow.final_priv_log_recipient"
"""
input workflow_final_priv_log_recipient_arr_rel_insert_input {
  data: [workflow_final_priv_log_recipient_insert_input!]!
}

"""
Boolean expression to filter rows from the table
"workflow.final_priv_log_recipient". All fields are combined with a logical 'AND'.
"""
input workflow_final_priv_log_recipient_bool_exp {
  NAME: String_comparison_exp
  _and: [workflow_final_priv_log_recipient_bool_exp]
  _not: workflow_final_priv_log_recipient_bool_exp
  _or: [workflow_final_priv_log_recipient_bool_exp]
  acc_no: String_comparison_exp
}

"""
input type for inserting data into table "workflow.final_priv_log_recipient"
"""
input workflow_final_priv_log_recipient_insert_input {
  NAME: String
  acc_no: String
}

"""
aggregate max on columns
"""
type workflow_final_priv_log_recipient_max_fields {
  NAME: String
  acc_no: String
}

"""
order by max() on columns of table "workflow.final_priv_log_recipient"
"""
input workflow_final_priv_log_recipient_max_order_by {
  NAME: order_by
  acc_no: order_by
}

"""
aggregate min on columns
"""
type workflow_final_priv_log_recipient_min_fields {
  NAME: String
  acc_no: String
}

"""
order by min() on columns of table "workflow.final_priv_log_recipient"
"""
input workflow_final_priv_log_recipient_min_order_by {
  NAME: order_by
  acc_no: order_by
}

"""
response of any mutation on the table "workflow.final_priv_log_recipient"
"""
type workflow_final_priv_log_recipient_mutation_response {
  """
  number of affected rows by the mutation
  """
  affected_rows: Int!

  """
  data of the affected rows by the mutation
  """
  returning: [workflow_final_priv_log_recipient!]!
}

"""
input type for inserting object relation for remote table "workflow.final_priv_log_recipient"
"""
input workflow_final_priv_log_recipient_obj_rel_insert_input {
  data: workflow_final_priv_log_recipient_insert_input!
}

"""
ordering options when selecting data from "workflow.final_priv_log_recipient"
"""
input workflow_final_priv_log_recipient_order_by {
  NAME: order_by
  acc_no: order_by
}

"""
select columns of table "workflow.final_priv_log_recipient"
"""
enum workflow_final_priv_log_recipient_select_column {
  """
  column name
  """
  NAME

  """
  column name
  """
  acc_no
}

"""
input type for updating data in table "workflow.final_priv_log_recipient"
"""
input workflow_final_priv_log_recipient_set_input {
  NAME: String
  acc_no: String
}

"""
select columns of table "workflow.final_priv_log"
"""
enum workflow_final_priv_log_select_column {
  """
  column name
  """
  SCHEMA_NAME

  """
  column name
  """
  acc_no

  """
  column name
  """
  ads_udi

  """
  column name
  """
  confidentiality

  """
  column name
  """
  doc_date

  """
  column name
  """
  doc_type

  """
  column name
  """
  dp_affirmation

  """
  column name
  """
  dp_decision

  """
  column name
  """
  dp_decision_date

  """
  column name
  """
  dp_explanation

  """
  column name
  """
  dp_noredaction

  """
  column name
  """
  dp_official

  """
  column name
  """
  dp_redactable_flag

  """
  column name
  """
  lsn_acc_no

  """
  column name
  """
  other_privileges

  """
  column name
  """
  priv_types

  """
  column name
  """
  purpose

  """
  column name
  """
  relationship

  """
  column name
  """
  subject_matter

  """
  column name
  """
  title
}

"""
input type for updating data in table "workflow.final_priv_log"
"""
input workflow_final_priv_log_set_input {
  SCHEMA_NAME: String
  acc_no: String
  ads_udi: String
  confidentiality: String
  doc_date: String
  doc_type: String
  dp_affirmation: String
  dp_decision: String
  dp_decision_date: String
  dp_explanation: String
  dp_noredaction: String
  dp_official: String
  dp_redactable_flag: bpchar
  lsn_acc_no: String
  other_privileges: String
  priv_types: String
  purpose: String
  relationship: String
  subject_matter: String
  title: String
}

"""
update columns of table "workflow.final_priv_log"
"""
enum workflow_final_priv_log_update_column {
  """
  column name
  """
  SCHEMA_NAME

  """
  column name
  """
  acc_no

  """
  column name
  """
  ads_udi

  """
  column name
  """
  confidentiality

  """
  column name
  """
  doc_date

  """
  column name
  """
  doc_type

  """
  column name
  """
  dp_affirmation

  """
  column name
  """
  dp_decision

  """
  column name
  """
  dp_decision_date

  """
  column name
  """
  dp_explanation

  """
  column name
  """
  dp_noredaction

  """
  column name
  """
  dp_official

  """
  column name
  """
  dp_redactable_flag

  """
  column name
  """
  lsn_acc_no

  """
  column name
  """
  other_privileges

  """
  column name
  """
  priv_types

  """
  column name
  """
  purpose

  """
  column name
  """
  relationship

  """
  column name
  """
  subject_matter

  """
  column name
  """
  title
}

"""
columns and relationships of "workflow.highlight_words"
"""
type workflow_highlight_words {
  color: float8
  highlight_word_id: Int!
  skip_next: bpchar
  strength: float8
  whole_word_only: bpchar
  word: String
  workflow_id: float8
}

"""
aggregated selection of "workflow.highlight_words"
"""
type workflow_highlight_words_aggregate {
  aggregate: workflow_highlight_words_aggregate_fields
  nodes: [workflow_highlight_words!]!
}

"""
aggregate fields of "workflow.highlight_words"
"""
type workflow_highlight_words_aggregate_fields {
  avg: workflow_highlight_words_avg_fields
  count(columns: [workflow_highlight_words_select_column!], distinct: Boolean): Int
  max: workflow_highlight_words_max_fields
  min: workflow_highlight_words_min_fields
  stddev: workflow_highlight_words_stddev_fields
  stddev_pop: workflow_highlight_words_stddev_pop_fields
  stddev_samp: workflow_highlight_words_stddev_samp_fields
  sum: workflow_highlight_words_sum_fields
  var_pop: workflow_highlight_words_var_pop_fields
  var_samp: workflow_highlight_words_var_samp_fields
  variance: workflow_highlight_words_variance_fields
}

"""
order by aggregate values of table "workflow.highlight_words"
"""
input workflow_highlight_words_aggregate_order_by {
  avg: workflow_highlight_words_avg_order_by
  count: order_by
  max: workflow_highlight_words_max_order_by
  min: workflow_highlight_words_min_order_by
  stddev: workflow_highlight_words_stddev_order_by
  stddev_pop: workflow_highlight_words_stddev_pop_order_by
  stddev_samp: workflow_highlight_words_stddev_samp_order_by
  sum: workflow_highlight_words_sum_order_by
  var_pop: workflow_highlight_words_var_pop_order_by
  var_samp: workflow_highlight_words_var_samp_order_by
  variance: workflow_highlight_words_variance_order_by
}

"""
input type for inserting array relation for remote table "workflow.highlight_words"
"""
input workflow_highlight_words_arr_rel_insert_input {
  data: [workflow_highlight_words_insert_input!]!
  on_conflict: workflow_highlight_words_on_conflict
}

"""
aggregate avg on columns
"""
type workflow_highlight_words_avg_fields {
  color: Float
  highlight_word_id: Float
  strength: Float
  workflow_id: Float
}

"""
order by avg() on columns of table "workflow.highlight_words"
"""
input workflow_highlight_words_avg_order_by {
  color: order_by
  highlight_word_id: order_by
  strength: order_by
  workflow_id: order_by
}

"""
Boolean expression to filter rows from the table "workflow.highlight_words". All fields are combined with a logical 'AND'.
"""
input workflow_highlight_words_bool_exp {
  _and: [workflow_highlight_words_bool_exp]
  _not: workflow_highlight_words_bool_exp
  _or: [workflow_highlight_words_bool_exp]
  color: float8_comparison_exp
  highlight_word_id: Int_comparison_exp
  skip_next: bpchar_comparison_exp
  strength: float8_comparison_exp
  whole_word_only: bpchar_comparison_exp
  word: String_comparison_exp
  workflow_id: float8_comparison_exp
}

"""
unique or primary key constraints on table "workflow.highlight_words"
"""
enum workflow_highlight_words_constraint {
  """
  unique or primary key constraint
  """
  pk_worflow_highlight_word
}

"""
input type for incrementing integer column in table "workflow.highlight_words"
"""
input workflow_highlight_words_inc_input {
  color: float8
  highlight_word_id: Int
  strength: float8
  workflow_id: float8
}

"""
input type for inserting data into table "workflow.highlight_words"
"""
input workflow_highlight_words_insert_input {
  color: float8
  highlight_word_id: Int
  skip_next: bpchar
  strength: float8
  whole_word_only: bpchar
  word: String
  workflow_id: float8
}

"""
aggregate max on columns
"""
type workflow_highlight_words_max_fields {
  color: float8
  highlight_word_id: Int
  strength: float8
  word: String
  workflow_id: float8
}

"""
order by max() on columns of table "workflow.highlight_words"
"""
input workflow_highlight_words_max_order_by {
  color: order_by
  highlight_word_id: order_by
  strength: order_by
  word: order_by
  workflow_id: order_by
}

"""
aggregate min on columns
"""
type workflow_highlight_words_min_fields {
  color: float8
  highlight_word_id: Int
  strength: float8
  word: String
  workflow_id: float8
}

"""
order by min() on columns of table "workflow.highlight_words"
"""
input workflow_highlight_words_min_order_by {
  color: order_by
  highlight_word_id: order_by
  strength: order_by
  word: order_by
  workflow_id: order_by
}

"""
response of any mutation on the table "workflow.highlight_words"
"""
type workflow_highlight_words_mutation_response {
  """
  number of affected rows by the mutation
  """
  affected_rows: Int!

  """
  data of the affected rows by the mutation
  """
  returning: [workflow_highlight_words!]!
}

"""
input type for inserting object relation for remote table "workflow.highlight_words"
"""
input workflow_highlight_words_obj_rel_insert_input {
  data: workflow_highlight_words_insert_input!
  on_conflict: workflow_highlight_words_on_conflict
}

"""
on conflict condition type for table "workflow.highlight_words"
"""
input workflow_highlight_words_on_conflict {
  constraint: workflow_highlight_words_constraint!
  update_columns: [workflow_highlight_words_update_column!]!
  where: workflow_highlight_words_bool_exp
}

"""
ordering options when selecting data from "workflow.highlight_words"
"""
input workflow_highlight_words_order_by {
  color: order_by
  highlight_word_id: order_by
  skip_next: order_by
  strength: order_by
  whole_word_only: order_by
  word: order_by
  workflow_id: order_by
}

"""
primary key columns input for table: "workflow.highlight_words"
"""
input workflow_highlight_words_pk_columns_input {
  highlight_word_id: Int!
}

"""
select columns of table "workflow.highlight_words"
"""
enum workflow_highlight_words_select_column {
  """
  column name
  """
  color

  """
  column name
  """
  highlight_word_id

  """
  column name
  """
  skip_next

  """
  column name
  """
  strength

  """
  column name
  """
  whole_word_only

  """
  column name
  """
  word

  """
  column name
  """
  workflow_id
}

"""
input type for updating data in table "workflow.highlight_words"
"""
input workflow_highlight_words_set_input {
  color: float8
  highlight_word_id: Int
  skip_next: bpchar
  strength: float8
  whole_word_only: bpchar
  word: String
  workflow_id: float8
}

"""
aggregate stddev on columns
"""
type workflow_highlight_words_stddev_fields {
  color: Float
  highlight_word_id: Float
  strength: Float
  workflow_id: Float
}

"""
order by stddev() on columns of table "workflow.highlight_words"
"""
input workflow_highlight_words_stddev_order_by {
  color: order_by
  highlight_word_id: order_by
  strength: order_by
  workflow_id: order_by
}

"""
aggregate stddev_pop on columns
"""
type workflow_highlight_words_stddev_pop_fields {
  color: Float
  highlight_word_id: Float
  strength: Float
  workflow_id: Float
}

"""
order by stddev_pop() on columns of table "workflow.highlight_words"
"""
input workflow_highlight_words_stddev_pop_order_by {
  color: order_by
  highlight_word_id: order_by
  strength: order_by
  workflow_id: order_by
}

"""
aggregate stddev_samp on columns
"""
type workflow_highlight_words_stddev_samp_fields {
  color: Float
  highlight_word_id: Float
  strength: Float
  workflow_id: Float
}

"""
order by stddev_samp() on columns of table "workflow.highlight_words"
"""
input workflow_highlight_words_stddev_samp_order_by {
  color: order_by
  highlight_word_id: order_by
  strength: order_by
  workflow_id: order_by
}

"""
aggregate sum on columns
"""
type workflow_highlight_words_sum_fields {
  color: float8
  highlight_word_id: Int
  strength: float8
  workflow_id: float8
}

"""
order by sum() on columns of table "workflow.highlight_words"
"""
input workflow_highlight_words_sum_order_by {
  color: order_by
  highlight_word_id: order_by
  strength: order_by
  workflow_id: order_by
}

"""
update columns of table "workflow.highlight_words"
"""
enum workflow_highlight_words_update_column {
  """
  column name
  """
  color

  """
  column name
  """
  highlight_word_id

  """
  column name
  """
  skip_next

  """
  column name
  """
  strength

  """
  column name
  """
  whole_word_only

  """
  column name
  """
  word

  """
  column name
  """
  workflow_id
}

"""
aggregate var_pop on columns
"""
type workflow_highlight_words_var_pop_fields {
  color: Float
  highlight_word_id: Float
  strength: Float
  workflow_id: Float
}

"""
order by var_pop() on columns of table "workflow.highlight_words"
"""
input workflow_highlight_words_var_pop_order_by {
  color: order_by
  highlight_word_id: order_by
  strength: order_by
  workflow_id: order_by
}

"""
aggregate var_samp on columns
"""
type workflow_highlight_words_var_samp_fields {
  color: Float
  highlight_word_id: Float
  strength: Float
  workflow_id: Float
}

"""
order by var_samp() on columns of table "workflow.highlight_words"
"""
input workflow_highlight_words_var_samp_order_by {
  color: order_by
  highlight_word_id: order_by
  strength: order_by
  workflow_id: order_by
}

"""
aggregate variance on columns
"""
type workflow_highlight_words_variance_fields {
  color: Float
  highlight_word_id: Float
  strength: Float
  workflow_id: Float
}

"""
order by variance() on columns of table "workflow.highlight_words"
"""
input workflow_highlight_words_variance_order_by {
  color: order_by
  highlight_word_id: order_by
  strength: order_by
  workflow_id: order_by
}

"""
columns and relationships of "workflow.history"
"""
type workflow_history {
  COMMENTS: String
  datex: timestamp
  doc_id: float8
  exe_version: String
  id: Int!
  stage: String
  time_in_seconds: float8
  typex: String
  user_id: String
}

"""
aggregated selection of "workflow.history"
"""
type workflow_history_aggregate {
  aggregate: workflow_history_aggregate_fields
  nodes: [workflow_history!]!
}

"""
aggregate fields of "workflow.history"
"""
type workflow_history_aggregate_fields {
  avg: workflow_history_avg_fields
  count(columns: [workflow_history_select_column!], distinct: Boolean): Int
  max: workflow_history_max_fields
  min: workflow_history_min_fields
  stddev: workflow_history_stddev_fields
  stddev_pop: workflow_history_stddev_pop_fields
  stddev_samp: workflow_history_stddev_samp_fields
  sum: workflow_history_sum_fields
  var_pop: workflow_history_var_pop_fields
  var_samp: workflow_history_var_samp_fields
  variance: workflow_history_variance_fields
}

"""
order by aggregate values of table "workflow.history"
"""
input workflow_history_aggregate_order_by {
  avg: workflow_history_avg_order_by
  count: order_by
  max: workflow_history_max_order_by
  min: workflow_history_min_order_by
  stddev: workflow_history_stddev_order_by
  stddev_pop: workflow_history_stddev_pop_order_by
  stddev_samp: workflow_history_stddev_samp_order_by
  sum: workflow_history_sum_order_by
  var_pop: workflow_history_var_pop_order_by
  var_samp: workflow_history_var_samp_order_by
  variance: workflow_history_variance_order_by
}

"""
input type for inserting array relation for remote table "workflow.history"
"""
input workflow_history_arr_rel_insert_input {
  data: [workflow_history_insert_input!]!
  on_conflict: workflow_history_on_conflict
}

"""
aggregate avg on columns
"""
type workflow_history_avg_fields {
  doc_id: Float
  id: Float
  time_in_seconds: Float
}

"""
order by avg() on columns of table "workflow.history"
"""
input workflow_history_avg_order_by {
  doc_id: order_by
  id: order_by
  time_in_seconds: order_by
}

"""
Boolean expression to filter rows from the table "workflow.history". All fields are combined with a logical 'AND'.
"""
input workflow_history_bool_exp {
  COMMENTS: String_comparison_exp
  _and: [workflow_history_bool_exp]
  _not: workflow_history_bool_exp
  _or: [workflow_history_bool_exp]
  datex: timestamp_comparison_exp
  doc_id: float8_comparison_exp
  exe_version: String_comparison_exp
  id: Int_comparison_exp
  stage: String_comparison_exp
  time_in_seconds: float8_comparison_exp
  typex: String_comparison_exp
  user_id: String_comparison_exp
}

"""
unique or primary key constraints on table "workflow.history"
"""
enum workflow_history_constraint {
  """
  unique or primary key constraint
  """
  history_pk
}

"""
input type for incrementing integer column in table "workflow.history"
"""
input workflow_history_inc_input {
  doc_id: float8
  id: Int
  time_in_seconds: float8
}

"""
input type for inserting data into table "workflow.history"
"""
input workflow_history_insert_input {
  COMMENTS: String
  datex: timestamp
  doc_id: float8
  exe_version: String
  id: Int
  stage: String
  time_in_seconds: float8
  typex: String
  user_id: String
}

"""
aggregate max on columns
"""
type workflow_history_max_fields {
  COMMENTS: String
  datex: timestamp
  doc_id: float8
  exe_version: String
  id: Int
  stage: String
  time_in_seconds: float8
  typex: String
  user_id: String
}

"""
order by max() on columns of table "workflow.history"
"""
input workflow_history_max_order_by {
  COMMENTS: order_by
  datex: order_by
  doc_id: order_by
  exe_version: order_by
  id: order_by
  stage: order_by
  time_in_seconds: order_by
  typex: order_by
  user_id: order_by
}

"""
aggregate min on columns
"""
type workflow_history_min_fields {
  COMMENTS: String
  datex: timestamp
  doc_id: float8
  exe_version: String
  id: Int
  stage: String
  time_in_seconds: float8
  typex: String
  user_id: String
}

"""
order by min() on columns of table "workflow.history"
"""
input workflow_history_min_order_by {
  COMMENTS: order_by
  datex: order_by
  doc_id: order_by
  exe_version: order_by
  id: order_by
  stage: order_by
  time_in_seconds: order_by
  typex: order_by
  user_id: order_by
}

"""
response of any mutation on the table "workflow.history"
"""
type workflow_history_mutation_response {
  """
  number of affected rows by the mutation
  """
  affected_rows: Int!

  """
  data of the affected rows by the mutation
  """
  returning: [workflow_history!]!
}

"""
input type for inserting object relation for remote table "workflow.history"
"""
input workflow_history_obj_rel_insert_input {
  data: workflow_history_insert_input!
  on_conflict: workflow_history_on_conflict
}

"""
on conflict condition type for table "workflow.history"
"""
input workflow_history_on_conflict {
  constraint: workflow_history_constraint!
  update_columns: [workflow_history_update_column!]!
  where: workflow_history_bool_exp
}

"""
ordering options when selecting data from "workflow.history"
"""
input workflow_history_order_by {
  COMMENTS: order_by
  datex: order_by
  doc_id: order_by
  exe_version: order_by
  id: order_by
  stage: order_by
  time_in_seconds: order_by
  typex: order_by
  user_id: order_by
}

"""
primary key columns input for table: "workflow.history"
"""
input workflow_history_pk_columns_input {
  id: Int!
}

"""
select columns of table "workflow.history"
"""
enum workflow_history_select_column {
  """
  column name
  """
  COMMENTS

  """
  column name
  """
  datex

  """
  column name
  """
  doc_id

  """
  column name
  """
  exe_version

  """
  column name
  """
  id

  """
  column name
  """
  stage

  """
  column name
  """
  time_in_seconds

  """
  column name
  """
  typex

  """
  column name
  """
  user_id
}

"""
input type for updating data in table "workflow.history"
"""
input workflow_history_set_input {
  COMMENTS: String
  datex: timestamp
  doc_id: float8
  exe_version: String
  id: Int
  stage: String
  time_in_seconds: float8
  typex: String
  user_id: String
}

"""
aggregate stddev on columns
"""
type workflow_history_stddev_fields {
  doc_id: Float
  id: Float
  time_in_seconds: Float
}

"""
order by stddev() on columns of table "workflow.history"
"""
input workflow_history_stddev_order_by {
  doc_id: order_by
  id: order_by
  time_in_seconds: order_by
}

"""
aggregate stddev_pop on columns
"""
type workflow_history_stddev_pop_fields {
  doc_id: Float
  id: Float
  time_in_seconds: Float
}

"""
order by stddev_pop() on columns of table "workflow.history"
"""
input workflow_history_stddev_pop_order_by {
  doc_id: order_by
  id: order_by
  time_in_seconds: order_by
}

"""
aggregate stddev_samp on columns
"""
type workflow_history_stddev_samp_fields {
  doc_id: Float
  id: Float
  time_in_seconds: Float
}

"""
order by stddev_samp() on columns of table "workflow.history"
"""
input workflow_history_stddev_samp_order_by {
  doc_id: order_by
  id: order_by
  time_in_seconds: order_by
}

"""
aggregate sum on columns
"""
type workflow_history_sum_fields {
  doc_id: float8
  id: Int
  time_in_seconds: float8
}

"""
order by sum() on columns of table "workflow.history"
"""
input workflow_history_sum_order_by {
  doc_id: order_by
  id: order_by
  time_in_seconds: order_by
}

"""
update columns of table "workflow.history"
"""
enum workflow_history_update_column {
  """
  column name
  """
  COMMENTS

  """
  column name
  """
  datex

  """
  column name
  """
  doc_id

  """
  column name
  """
  exe_version

  """
  column name
  """
  id

  """
  column name
  """
  stage

  """
  column name
  """
  time_in_seconds

  """
  column name
  """
  typex

  """
  column name
  """
  user_id
}

"""
aggregate var_pop on columns
"""
type workflow_history_var_pop_fields {
  doc_id: Float
  id: Float
  time_in_seconds: Float
}

"""
order by var_pop() on columns of table "workflow.history"
"""
input workflow_history_var_pop_order_by {
  doc_id: order_by
  id: order_by
  time_in_seconds: order_by
}

"""
aggregate var_samp on columns
"""
type workflow_history_var_samp_fields {
  doc_id: Float
  id: Float
  time_in_seconds: Float
}

"""
order by var_samp() on columns of table "workflow.history"
"""
input workflow_history_var_samp_order_by {
  doc_id: order_by
  id: order_by
  time_in_seconds: order_by
}

"""
aggregate variance on columns
"""
type workflow_history_variance_fields {
  doc_id: Float
  id: Float
  time_in_seconds: Float
}

"""
order by variance() on columns of table "workflow.history"
"""
input workflow_history_variance_order_by {
  doc_id: order_by
  id: order_by
  time_in_seconds: order_by
}

"""
columns and relationships of "workflow.lookups"
"""
type workflow_lookups {
  VALUE: String
  code: float8
  display: String
}

"""
aggregated selection of "workflow.lookups"
"""
type workflow_lookups_aggregate {
  aggregate: workflow_lookups_aggregate_fields
  nodes: [workflow_lookups!]!
}

"""
aggregate fields of "workflow.lookups"
"""
type workflow_lookups_aggregate_fields {
  avg: workflow_lookups_avg_fields
  count(columns: [workflow_lookups_select_column!], distinct: Boolean): Int
  max: workflow_lookups_max_fields
  min: workflow_lookups_min_fields
  stddev: workflow_lookups_stddev_fields
  stddev_pop: workflow_lookups_stddev_pop_fields
  stddev_samp: workflow_lookups_stddev_samp_fields
  sum: workflow_lookups_sum_fields
  var_pop: workflow_lookups_var_pop_fields
  var_samp: workflow_lookups_var_samp_fields
  variance: workflow_lookups_variance_fields
}

"""
order by aggregate values of table "workflow.lookups"
"""
input workflow_lookups_aggregate_order_by {
  avg: workflow_lookups_avg_order_by
  count: order_by
  max: workflow_lookups_max_order_by
  min: workflow_lookups_min_order_by
  stddev: workflow_lookups_stddev_order_by
  stddev_pop: workflow_lookups_stddev_pop_order_by
  stddev_samp: workflow_lookups_stddev_samp_order_by
  sum: workflow_lookups_sum_order_by
  var_pop: workflow_lookups_var_pop_order_by
  var_samp: workflow_lookups_var_samp_order_by
  variance: workflow_lookups_variance_order_by
}

"""
input type for inserting array relation for remote table "workflow.lookups"
"""
input workflow_lookups_arr_rel_insert_input {
  data: [workflow_lookups_insert_input!]!
}

"""
aggregate avg on columns
"""
type workflow_lookups_avg_fields {
  code: Float
}

"""
order by avg() on columns of table "workflow.lookups"
"""
input workflow_lookups_avg_order_by {
  code: order_by
}

"""
Boolean expression to filter rows from the table "workflow.lookups". All fields are combined with a logical 'AND'.
"""
input workflow_lookups_bool_exp {
  VALUE: String_comparison_exp
  _and: [workflow_lookups_bool_exp]
  _not: workflow_lookups_bool_exp
  _or: [workflow_lookups_bool_exp]
  code: float8_comparison_exp
  display: String_comparison_exp
}

"""
input type for incrementing integer column in table "workflow.lookups"
"""
input workflow_lookups_inc_input {
  code: float8
}

"""
input type for inserting data into table "workflow.lookups"
"""
input workflow_lookups_insert_input {
  VALUE: String
  code: float8
  display: String
}

"""
aggregate max on columns
"""
type workflow_lookups_max_fields {
  VALUE: String
  code: float8
  display: String
}

"""
order by max() on columns of table "workflow.lookups"
"""
input workflow_lookups_max_order_by {
  VALUE: order_by
  code: order_by
  display: order_by
}

"""
aggregate min on columns
"""
type workflow_lookups_min_fields {
  VALUE: String
  code: float8
  display: String
}

"""
order by min() on columns of table "workflow.lookups"
"""
input workflow_lookups_min_order_by {
  VALUE: order_by
  code: order_by
  display: order_by
}

"""
response of any mutation on the table "workflow.lookups"
"""
type workflow_lookups_mutation_response {
  """
  number of affected rows by the mutation
  """
  affected_rows: Int!

  """
  data of the affected rows by the mutation
  """
  returning: [workflow_lookups!]!
}

"""
input type for inserting object relation for remote table "workflow.lookups"
"""
input workflow_lookups_obj_rel_insert_input {
  data: workflow_lookups_insert_input!
}

"""
ordering options when selecting data from "workflow.lookups"
"""
input workflow_lookups_order_by {
  VALUE: order_by
  code: order_by
  display: order_by
}

"""
select columns of table "workflow.lookups"
"""
enum workflow_lookups_select_column {
  """
  column name
  """
  VALUE

  """
  column name
  """
  code

  """
  column name
  """
  display
}

"""
input type for updating data in table "workflow.lookups"
"""
input workflow_lookups_set_input {
  VALUE: String
  code: float8
  display: String
}

"""
aggregate stddev on columns
"""
type workflow_lookups_stddev_fields {
  code: Float
}

"""
order by stddev() on columns of table "workflow.lookups"
"""
input workflow_lookups_stddev_order_by {
  code: order_by
}

"""
aggregate stddev_pop on columns
"""
type workflow_lookups_stddev_pop_fields {
  code: Float
}

"""
order by stddev_pop() on columns of table "workflow.lookups"
"""
input workflow_lookups_stddev_pop_order_by {
  code: order_by
}

"""
aggregate stddev_samp on columns
"""
type workflow_lookups_stddev_samp_fields {
  code: Float
}

"""
order by stddev_samp() on columns of table "workflow.lookups"
"""
input workflow_lookups_stddev_samp_order_by {
  code: order_by
}

"""
aggregate sum on columns
"""
type workflow_lookups_sum_fields {
  code: float8
}

"""
order by sum() on columns of table "workflow.lookups"
"""
input workflow_lookups_sum_order_by {
  code: order_by
}

"""
aggregate var_pop on columns
"""
type workflow_lookups_var_pop_fields {
  code: Float
}

"""
order by var_pop() on columns of table "workflow.lookups"
"""
input workflow_lookups_var_pop_order_by {
  code: order_by
}

"""
aggregate var_samp on columns
"""
type workflow_lookups_var_samp_fields {
  code: Float
}

"""
order by var_samp() on columns of table "workflow.lookups"
"""
input workflow_lookups_var_samp_order_by {
  code: order_by
}

"""
aggregate variance on columns
"""
type workflow_lookups_variance_fields {
  code: Float
}

"""
order by variance() on columns of table "workflow.lookups"
"""
input workflow_lookups_variance_order_by {
  code: order_by
}

"""
columns and relationships of "workflow.name_org_type"
"""
type workflow_name_org_type {
  SCHEMA_NAME: String!
  created_date: timestamp
  created_user: String
  doc_id: float8
  name_id: float8!
  name_type: String!
  org_id: float8!
}

"""
aggregated selection of "workflow.name_org_type"
"""
type workflow_name_org_type_aggregate {
  aggregate: workflow_name_org_type_aggregate_fields
  nodes: [workflow_name_org_type!]!
}

"""
aggregate fields of "workflow.name_org_type"
"""
type workflow_name_org_type_aggregate_fields {
  avg: workflow_name_org_type_avg_fields
  count(columns: [workflow_name_org_type_select_column!], distinct: Boolean): Int
  max: workflow_name_org_type_max_fields
  min: workflow_name_org_type_min_fields
  stddev: workflow_name_org_type_stddev_fields
  stddev_pop: workflow_name_org_type_stddev_pop_fields
  stddev_samp: workflow_name_org_type_stddev_samp_fields
  sum: workflow_name_org_type_sum_fields
  var_pop: workflow_name_org_type_var_pop_fields
  var_samp: workflow_name_org_type_var_samp_fields
  variance: workflow_name_org_type_variance_fields
}

"""
order by aggregate values of table "workflow.name_org_type"
"""
input workflow_name_org_type_aggregate_order_by {
  avg: workflow_name_org_type_avg_order_by
  count: order_by
  max: workflow_name_org_type_max_order_by
  min: workflow_name_org_type_min_order_by
  stddev: workflow_name_org_type_stddev_order_by
  stddev_pop: workflow_name_org_type_stddev_pop_order_by
  stddev_samp: workflow_name_org_type_stddev_samp_order_by
  sum: workflow_name_org_type_sum_order_by
  var_pop: workflow_name_org_type_var_pop_order_by
  var_samp: workflow_name_org_type_var_samp_order_by
  variance: workflow_name_org_type_variance_order_by
}

"""
input type for inserting array relation for remote table "workflow.name_org_type"
"""
input workflow_name_org_type_arr_rel_insert_input {
  data: [workflow_name_org_type_insert_input!]!
}

"""
aggregate avg on columns
"""
type workflow_name_org_type_avg_fields {
  doc_id: Float
  name_id: Float
  org_id: Float
}

"""
order by avg() on columns of table "workflow.name_org_type"
"""
input workflow_name_org_type_avg_order_by {
  doc_id: order_by
  name_id: order_by
  org_id: order_by
}

"""
Boolean expression to filter rows from the table "workflow.name_org_type". All fields are combined with a logical 'AND'.
"""
input workflow_name_org_type_bool_exp {
  SCHEMA_NAME: String_comparison_exp
  _and: [workflow_name_org_type_bool_exp]
  _not: workflow_name_org_type_bool_exp
  _or: [workflow_name_org_type_bool_exp]
  created_date: timestamp_comparison_exp
  created_user: String_comparison_exp
  doc_id: float8_comparison_exp
  name_id: float8_comparison_exp
  name_type: String_comparison_exp
  org_id: float8_comparison_exp
}

"""
input type for incrementing integer column in table "workflow.name_org_type"
"""
input workflow_name_org_type_inc_input {
  doc_id: float8
  name_id: float8
  org_id: float8
}

"""
input type for inserting data into table "workflow.name_org_type"
"""
input workflow_name_org_type_insert_input {
  SCHEMA_NAME: String
  created_date: timestamp
  created_user: String
  doc_id: float8
  name_id: float8
  name_type: String
  org_id: float8
}

"""
aggregate max on columns
"""
type workflow_name_org_type_max_fields {
  SCHEMA_NAME: String
  created_date: timestamp
  created_user: String
  doc_id: float8
  name_id: float8
  name_type: String
  org_id: float8
}

"""
order by max() on columns of table "workflow.name_org_type"
"""
input workflow_name_org_type_max_order_by {
  SCHEMA_NAME: order_by
  created_date: order_by
  created_user: order_by
  doc_id: order_by
  name_id: order_by
  name_type: order_by
  org_id: order_by
}

"""
aggregate min on columns
"""
type workflow_name_org_type_min_fields {
  SCHEMA_NAME: String
  created_date: timestamp
  created_user: String
  doc_id: float8
  name_id: float8
  name_type: String
  org_id: float8
}

"""
order by min() on columns of table "workflow.name_org_type"
"""
input workflow_name_org_type_min_order_by {
  SCHEMA_NAME: order_by
  created_date: order_by
  created_user: order_by
  doc_id: order_by
  name_id: order_by
  name_type: order_by
  org_id: order_by
}

"""
response of any mutation on the table "workflow.name_org_type"
"""
type workflow_name_org_type_mutation_response {
  """
  number of affected rows by the mutation
  """
  affected_rows: Int!

  """
  data of the affected rows by the mutation
  """
  returning: [workflow_name_org_type!]!
}

"""
input type for inserting object relation for remote table "workflow.name_org_type"
"""
input workflow_name_org_type_obj_rel_insert_input {
  data: workflow_name_org_type_insert_input!
}

"""
ordering options when selecting data from "workflow.name_org_type"
"""
input workflow_name_org_type_order_by {
  SCHEMA_NAME: order_by
  created_date: order_by
  created_user: order_by
  doc_id: order_by
  name_id: order_by
  name_type: order_by
  org_id: order_by
}

"""
select columns of table "workflow.name_org_type"
"""
enum workflow_name_org_type_select_column {
  """
  column name
  """
  SCHEMA_NAME

  """
  column name
  """
  created_date

  """
  column name
  """
  created_user

  """
  column name
  """
  doc_id

  """
  column name
  """
  name_id

  """
  column name
  """
  name_type

  """
  column name
  """
  org_id
}

"""
input type for updating data in table "workflow.name_org_type"
"""
input workflow_name_org_type_set_input {
  SCHEMA_NAME: String
  created_date: timestamp
  created_user: String
  doc_id: float8
  name_id: float8
  name_type: String
  org_id: float8
}

"""
aggregate stddev on columns
"""
type workflow_name_org_type_stddev_fields {
  doc_id: Float
  name_id: Float
  org_id: Float
}

"""
order by stddev() on columns of table "workflow.name_org_type"
"""
input workflow_name_org_type_stddev_order_by {
  doc_id: order_by
  name_id: order_by
  org_id: order_by
}

"""
aggregate stddev_pop on columns
"""
type workflow_name_org_type_stddev_pop_fields {
  doc_id: Float
  name_id: Float
  org_id: Float
}

"""
order by stddev_pop() on columns of table "workflow.name_org_type"
"""
input workflow_name_org_type_stddev_pop_order_by {
  doc_id: order_by
  name_id: order_by
  org_id: order_by
}

"""
aggregate stddev_samp on columns
"""
type workflow_name_org_type_stddev_samp_fields {
  doc_id: Float
  name_id: Float
  org_id: Float
}

"""
order by stddev_samp() on columns of table "workflow.name_org_type"
"""
input workflow_name_org_type_stddev_samp_order_by {
  doc_id: order_by
  name_id: order_by
  org_id: order_by
}

"""
aggregate sum on columns
"""
type workflow_name_org_type_sum_fields {
  doc_id: float8
  name_id: float8
  org_id: float8
}

"""
order by sum() on columns of table "workflow.name_org_type"
"""
input workflow_name_org_type_sum_order_by {
  doc_id: order_by
  name_id: order_by
  org_id: order_by
}

"""
aggregate var_pop on columns
"""
type workflow_name_org_type_var_pop_fields {
  doc_id: Float
  name_id: Float
  org_id: Float
}

"""
order by var_pop() on columns of table "workflow.name_org_type"
"""
input workflow_name_org_type_var_pop_order_by {
  doc_id: order_by
  name_id: order_by
  org_id: order_by
}

"""
aggregate var_samp on columns
"""
type workflow_name_org_type_var_samp_fields {
  doc_id: Float
  name_id: Float
  org_id: Float
}

"""
order by var_samp() on columns of table "workflow.name_org_type"
"""
input workflow_name_org_type_var_samp_order_by {
  doc_id: order_by
  name_id: order_by
  org_id: order_by
}

"""
aggregate variance on columns
"""
type workflow_name_org_type_variance_fields {
  doc_id: Float
  name_id: Float
  org_id: Float
}

"""
order by variance() on columns of table "workflow.name_org_type"
"""
input workflow_name_org_type_variance_order_by {
  doc_id: order_by
  name_id: order_by
  org_id: order_by
}

"""
columns and relationships of "workflow.name_type_lookup"
"""
type workflow_name_type_lookup {
  name_type: String!
  name_type_lookup: String!
}

"""
aggregated selection of "workflow.name_type_lookup"
"""
type workflow_name_type_lookup_aggregate {
  aggregate: workflow_name_type_lookup_aggregate_fields
  nodes: [workflow_name_type_lookup!]!
}

"""
aggregate fields of "workflow.name_type_lookup"
"""
type workflow_name_type_lookup_aggregate_fields {
  count(columns: [workflow_name_type_lookup_select_column!], distinct: Boolean): Int
  max: workflow_name_type_lookup_max_fields
  min: workflow_name_type_lookup_min_fields
}

"""
order by aggregate values of table "workflow.name_type_lookup"
"""
input workflow_name_type_lookup_aggregate_order_by {
  count: order_by
  max: workflow_name_type_lookup_max_order_by
  min: workflow_name_type_lookup_min_order_by
}

"""
input type for inserting array relation for remote table "workflow.name_type_lookup"
"""
input workflow_name_type_lookup_arr_rel_insert_input {
  data: [workflow_name_type_lookup_insert_input!]!
}

"""
Boolean expression to filter rows from the table "workflow.name_type_lookup". All fields are combined with a logical 'AND'.
"""
input workflow_name_type_lookup_bool_exp {
  _and: [workflow_name_type_lookup_bool_exp]
  _not: workflow_name_type_lookup_bool_exp
  _or: [workflow_name_type_lookup_bool_exp]
  name_type: String_comparison_exp
  name_type_lookup: String_comparison_exp
}

"""
input type for inserting data into table "workflow.name_type_lookup"
"""
input workflow_name_type_lookup_insert_input {
  name_type: String
  name_type_lookup: String
}

"""
aggregate max on columns
"""
type workflow_name_type_lookup_max_fields {
  name_type: String
  name_type_lookup: String
}

"""
order by max() on columns of table "workflow.name_type_lookup"
"""
input workflow_name_type_lookup_max_order_by {
  name_type: order_by
  name_type_lookup: order_by
}

"""
aggregate min on columns
"""
type workflow_name_type_lookup_min_fields {
  name_type: String
  name_type_lookup: String
}

"""
order by min() on columns of table "workflow.name_type_lookup"
"""
input workflow_name_type_lookup_min_order_by {
  name_type: order_by
  name_type_lookup: order_by
}

"""
response of any mutation on the table "workflow.name_type_lookup"
"""
type workflow_name_type_lookup_mutation_response {
  """
  number of affected rows by the mutation
  """
  affected_rows: Int!

  """
  data of the affected rows by the mutation
  """
  returning: [workflow_name_type_lookup!]!
}

"""
input type for inserting object relation for remote table "workflow.name_type_lookup"
"""
input workflow_name_type_lookup_obj_rel_insert_input {
  data: workflow_name_type_lookup_insert_input!
}

"""
ordering options when selecting data from "workflow.name_type_lookup"
"""
input workflow_name_type_lookup_order_by {
  name_type: order_by
  name_type_lookup: order_by
}

"""
select columns of table "workflow.name_type_lookup"
"""
enum workflow_name_type_lookup_select_column {
  """
  column name
  """
  name_type

  """
  column name
  """
  name_type_lookup
}

"""
input type for updating data in table "workflow.name_type_lookup"
"""
input workflow_name_type_lookup_set_input {
  name_type: String
  name_type_lookup: String
}

"""
columns and relationships of "workflow.priv_log_detail"
"""
type workflow_priv_log_detail {
  field_id: float8!
  field_value: String
  priv_log_detail_id: float8!
  priv_log_entry_id: float8!
}

"""
aggregated selection of "workflow.priv_log_detail"
"""
type workflow_priv_log_detail_aggregate {
  aggregate: workflow_priv_log_detail_aggregate_fields
  nodes: [workflow_priv_log_detail!]!
}

"""
aggregate fields of "workflow.priv_log_detail"
"""
type workflow_priv_log_detail_aggregate_fields {
  avg: workflow_priv_log_detail_avg_fields
  count(columns: [workflow_priv_log_detail_select_column!], distinct: Boolean): Int
  max: workflow_priv_log_detail_max_fields
  min: workflow_priv_log_detail_min_fields
  stddev: workflow_priv_log_detail_stddev_fields
  stddev_pop: workflow_priv_log_detail_stddev_pop_fields
  stddev_samp: workflow_priv_log_detail_stddev_samp_fields
  sum: workflow_priv_log_detail_sum_fields
  var_pop: workflow_priv_log_detail_var_pop_fields
  var_samp: workflow_priv_log_detail_var_samp_fields
  variance: workflow_priv_log_detail_variance_fields
}

"""
order by aggregate values of table "workflow.priv_log_detail"
"""
input workflow_priv_log_detail_aggregate_order_by {
  avg: workflow_priv_log_detail_avg_order_by
  count: order_by
  max: workflow_priv_log_detail_max_order_by
  min: workflow_priv_log_detail_min_order_by
  stddev: workflow_priv_log_detail_stddev_order_by
  stddev_pop: workflow_priv_log_detail_stddev_pop_order_by
  stddev_samp: workflow_priv_log_detail_stddev_samp_order_by
  sum: workflow_priv_log_detail_sum_order_by
  var_pop: workflow_priv_log_detail_var_pop_order_by
  var_samp: workflow_priv_log_detail_var_samp_order_by
  variance: workflow_priv_log_detail_variance_order_by
}

"""
input type for inserting array relation for remote table "workflow.priv_log_detail"
"""
input workflow_priv_log_detail_arr_rel_insert_input {
  data: [workflow_priv_log_detail_insert_input!]!
  on_conflict: workflow_priv_log_detail_on_conflict
}

"""
aggregate avg on columns
"""
type workflow_priv_log_detail_avg_fields {
  field_id: Float
  priv_log_detail_id: Float
  priv_log_entry_id: Float
}

"""
order by avg() on columns of table "workflow.priv_log_detail"
"""
input workflow_priv_log_detail_avg_order_by {
  field_id: order_by
  priv_log_detail_id: order_by
  priv_log_entry_id: order_by
}

"""
Boolean expression to filter rows from the table "workflow.priv_log_detail". All fields are combined with a logical 'AND'.
"""
input workflow_priv_log_detail_bool_exp {
  _and: [workflow_priv_log_detail_bool_exp]
  _not: workflow_priv_log_detail_bool_exp
  _or: [workflow_priv_log_detail_bool_exp]
  field_id: float8_comparison_exp
  field_value: String_comparison_exp
  priv_log_detail_id: float8_comparison_exp
  priv_log_entry_id: float8_comparison_exp
}

"""
unique or primary key constraints on table "workflow.priv_log_detail"
"""
enum workflow_priv_log_detail_constraint {
  """
  unique or primary key constraint
  """
  priv_log_detail_pkey
}

"""
input type for incrementing integer column in table "workflow.priv_log_detail"
"""
input workflow_priv_log_detail_inc_input {
  field_id: float8
  priv_log_detail_id: float8
  priv_log_entry_id: float8
}

"""
input type for inserting data into table "workflow.priv_log_detail"
"""
input workflow_priv_log_detail_insert_input {
  field_id: float8
  field_value: String
  priv_log_detail_id: float8
  priv_log_entry_id: float8
}

"""
aggregate max on columns
"""
type workflow_priv_log_detail_max_fields {
  field_id: float8
  field_value: String
  priv_log_detail_id: float8
  priv_log_entry_id: float8
}

"""
order by max() on columns of table "workflow.priv_log_detail"
"""
input workflow_priv_log_detail_max_order_by {
  field_id: order_by
  field_value: order_by
  priv_log_detail_id: order_by
  priv_log_entry_id: order_by
}

"""
aggregate min on columns
"""
type workflow_priv_log_detail_min_fields {
  field_id: float8
  field_value: String
  priv_log_detail_id: float8
  priv_log_entry_id: float8
}

"""
order by min() on columns of table "workflow.priv_log_detail"
"""
input workflow_priv_log_detail_min_order_by {
  field_id: order_by
  field_value: order_by
  priv_log_detail_id: order_by
  priv_log_entry_id: order_by
}

"""
response of any mutation on the table "workflow.priv_log_detail"
"""
type workflow_priv_log_detail_mutation_response {
  """
  number of affected rows by the mutation
  """
  affected_rows: Int!

  """
  data of the affected rows by the mutation
  """
  returning: [workflow_priv_log_detail!]!
}

"""
input type for inserting object relation for remote table "workflow.priv_log_detail"
"""
input workflow_priv_log_detail_obj_rel_insert_input {
  data: workflow_priv_log_detail_insert_input!
  on_conflict: workflow_priv_log_detail_on_conflict
}

"""
on conflict condition type for table "workflow.priv_log_detail"
"""
input workflow_priv_log_detail_on_conflict {
  constraint: workflow_priv_log_detail_constraint!
  update_columns: [workflow_priv_log_detail_update_column!]!
  where: workflow_priv_log_detail_bool_exp
}

"""
ordering options when selecting data from "workflow.priv_log_detail"
"""
input workflow_priv_log_detail_order_by {
  field_id: order_by
  field_value: order_by
  priv_log_detail_id: order_by
  priv_log_entry_id: order_by
}

"""
primary key columns input for table: "workflow.priv_log_detail"
"""
input workflow_priv_log_detail_pk_columns_input {
  priv_log_detail_id: float8!
}

"""
select columns of table "workflow.priv_log_detail"
"""
enum workflow_priv_log_detail_select_column {
  """
  column name
  """
  field_id

  """
  column name
  """
  field_value

  """
  column name
  """
  priv_log_detail_id

  """
  column name
  """
  priv_log_entry_id
}

"""
input type for updating data in table "workflow.priv_log_detail"
"""
input workflow_priv_log_detail_set_input {
  field_id: float8
  field_value: String
  priv_log_detail_id: float8
  priv_log_entry_id: float8
}

"""
aggregate stddev on columns
"""
type workflow_priv_log_detail_stddev_fields {
  field_id: Float
  priv_log_detail_id: Float
  priv_log_entry_id: Float
}

"""
order by stddev() on columns of table "workflow.priv_log_detail"
"""
input workflow_priv_log_detail_stddev_order_by {
  field_id: order_by
  priv_log_detail_id: order_by
  priv_log_entry_id: order_by
}

"""
aggregate stddev_pop on columns
"""
type workflow_priv_log_detail_stddev_pop_fields {
  field_id: Float
  priv_log_detail_id: Float
  priv_log_entry_id: Float
}

"""
order by stddev_pop() on columns of table "workflow.priv_log_detail"
"""
input workflow_priv_log_detail_stddev_pop_order_by {
  field_id: order_by
  priv_log_detail_id: order_by
  priv_log_entry_id: order_by
}

"""
aggregate stddev_samp on columns
"""
type workflow_priv_log_detail_stddev_samp_fields {
  field_id: Float
  priv_log_detail_id: Float
  priv_log_entry_id: Float
}

"""
order by stddev_samp() on columns of table "workflow.priv_log_detail"
"""
input workflow_priv_log_detail_stddev_samp_order_by {
  field_id: order_by
  priv_log_detail_id: order_by
  priv_log_entry_id: order_by
}

"""
aggregate sum on columns
"""
type workflow_priv_log_detail_sum_fields {
  field_id: float8
  priv_log_detail_id: float8
  priv_log_entry_id: float8
}

"""
order by sum() on columns of table "workflow.priv_log_detail"
"""
input workflow_priv_log_detail_sum_order_by {
  field_id: order_by
  priv_log_detail_id: order_by
  priv_log_entry_id: order_by
}

"""
update columns of table "workflow.priv_log_detail"
"""
enum workflow_priv_log_detail_update_column {
  """
  column name
  """
  field_id

  """
  column name
  """
  field_value

  """
  column name
  """
  priv_log_detail_id

  """
  column name
  """
  priv_log_entry_id
}

"""
aggregate var_pop on columns
"""
type workflow_priv_log_detail_var_pop_fields {
  field_id: Float
  priv_log_detail_id: Float
  priv_log_entry_id: Float
}

"""
order by var_pop() on columns of table "workflow.priv_log_detail"
"""
input workflow_priv_log_detail_var_pop_order_by {
  field_id: order_by
  priv_log_detail_id: order_by
  priv_log_entry_id: order_by
}

"""
aggregate var_samp on columns
"""
type workflow_priv_log_detail_var_samp_fields {
  field_id: Float
  priv_log_detail_id: Float
  priv_log_entry_id: Float
}

"""
order by var_samp() on columns of table "workflow.priv_log_detail"
"""
input workflow_priv_log_detail_var_samp_order_by {
  field_id: order_by
  priv_log_detail_id: order_by
  priv_log_entry_id: order_by
}

"""
aggregate variance on columns
"""
type workflow_priv_log_detail_variance_fields {
  field_id: Float
  priv_log_detail_id: Float
  priv_log_entry_id: Float
}

"""
order by variance() on columns of table "workflow.priv_log_detail"
"""
input workflow_priv_log_detail_variance_order_by {
  field_id: order_by
  priv_log_detail_id: order_by
  priv_log_entry_id: order_by
}

"""
columns and relationships of "workflow.priv_log_entry"
"""
type workflow_priv_log_entry {
  author_recip_relation: String
  circulated_draft_affirm: String
  claim_support: String
  confidentiality_statement: String
  decision_information: String
  deliberative_explaination: String
  determining_official: String
  doc_date: String
  lsn_acc_num: String
  non_deliberative_stmt: String
  participant_acc_num: String
  priv_log_entry_id: float8!
  priv_log_header_id: float8!
  subject_matter_description: String
  title: String
}

"""
aggregated selection of "workflow.priv_log_entry"
"""
type workflow_priv_log_entry_aggregate {
  aggregate: workflow_priv_log_entry_aggregate_fields
  nodes: [workflow_priv_log_entry!]!
}

"""
aggregate fields of "workflow.priv_log_entry"
"""
type workflow_priv_log_entry_aggregate_fields {
  avg: workflow_priv_log_entry_avg_fields
  count(columns: [workflow_priv_log_entry_select_column!], distinct: Boolean): Int
  max: workflow_priv_log_entry_max_fields
  min: workflow_priv_log_entry_min_fields
  stddev: workflow_priv_log_entry_stddev_fields
  stddev_pop: workflow_priv_log_entry_stddev_pop_fields
  stddev_samp: workflow_priv_log_entry_stddev_samp_fields
  sum: workflow_priv_log_entry_sum_fields
  var_pop: workflow_priv_log_entry_var_pop_fields
  var_samp: workflow_priv_log_entry_var_samp_fields
  variance: workflow_priv_log_entry_variance_fields
}

"""
order by aggregate values of table "workflow.priv_log_entry"
"""
input workflow_priv_log_entry_aggregate_order_by {
  avg: workflow_priv_log_entry_avg_order_by
  count: order_by
  max: workflow_priv_log_entry_max_order_by
  min: workflow_priv_log_entry_min_order_by
  stddev: workflow_priv_log_entry_stddev_order_by
  stddev_pop: workflow_priv_log_entry_stddev_pop_order_by
  stddev_samp: workflow_priv_log_entry_stddev_samp_order_by
  sum: workflow_priv_log_entry_sum_order_by
  var_pop: workflow_priv_log_entry_var_pop_order_by
  var_samp: workflow_priv_log_entry_var_samp_order_by
  variance: workflow_priv_log_entry_variance_order_by
}

"""
input type for inserting array relation for remote table "workflow.priv_log_entry"
"""
input workflow_priv_log_entry_arr_rel_insert_input {
  data: [workflow_priv_log_entry_insert_input!]!
  on_conflict: workflow_priv_log_entry_on_conflict
}

"""
aggregate avg on columns
"""
type workflow_priv_log_entry_avg_fields {
  priv_log_entry_id: Float
  priv_log_header_id: Float
}

"""
order by avg() on columns of table "workflow.priv_log_entry"
"""
input workflow_priv_log_entry_avg_order_by {
  priv_log_entry_id: order_by
  priv_log_header_id: order_by
}

"""
Boolean expression to filter rows from the table "workflow.priv_log_entry". All fields are combined with a logical 'AND'.
"""
input workflow_priv_log_entry_bool_exp {
  _and: [workflow_priv_log_entry_bool_exp]
  _not: workflow_priv_log_entry_bool_exp
  _or: [workflow_priv_log_entry_bool_exp]
  author_recip_relation: String_comparison_exp
  circulated_draft_affirm: String_comparison_exp
  claim_support: String_comparison_exp
  confidentiality_statement: String_comparison_exp
  decision_information: String_comparison_exp
  deliberative_explaination: String_comparison_exp
  determining_official: String_comparison_exp
  doc_date: String_comparison_exp
  lsn_acc_num: String_comparison_exp
  non_deliberative_stmt: String_comparison_exp
  participant_acc_num: String_comparison_exp
  priv_log_entry_id: float8_comparison_exp
  priv_log_header_id: float8_comparison_exp
  subject_matter_description: String_comparison_exp
  title: String_comparison_exp
}

"""
unique or primary key constraints on table "workflow.priv_log_entry"
"""
enum workflow_priv_log_entry_constraint {
  """
  unique or primary key constraint
  """
  priv_log_entry_pkey
}

"""
input type for incrementing integer column in table "workflow.priv_log_entry"
"""
input workflow_priv_log_entry_inc_input {
  priv_log_entry_id: float8
  priv_log_header_id: float8
}

"""
input type for inserting data into table "workflow.priv_log_entry"
"""
input workflow_priv_log_entry_insert_input {
  author_recip_relation: String
  circulated_draft_affirm: String
  claim_support: String
  confidentiality_statement: String
  decision_information: String
  deliberative_explaination: String
  determining_official: String
  doc_date: String
  lsn_acc_num: String
  non_deliberative_stmt: String
  participant_acc_num: String
  priv_log_entry_id: float8
  priv_log_header_id: float8
  subject_matter_description: String
  title: String
}

"""
aggregate max on columns
"""
type workflow_priv_log_entry_max_fields {
  author_recip_relation: String
  circulated_draft_affirm: String
  claim_support: String
  confidentiality_statement: String
  decision_information: String
  deliberative_explaination: String
  determining_official: String
  doc_date: String
  lsn_acc_num: String
  non_deliberative_stmt: String
  participant_acc_num: String
  priv_log_entry_id: float8
  priv_log_header_id: float8
  subject_matter_description: String
  title: String
}

"""
order by max() on columns of table "workflow.priv_log_entry"
"""
input workflow_priv_log_entry_max_order_by {
  author_recip_relation: order_by
  circulated_draft_affirm: order_by
  claim_support: order_by
  confidentiality_statement: order_by
  decision_information: order_by
  deliberative_explaination: order_by
  determining_official: order_by
  doc_date: order_by
  lsn_acc_num: order_by
  non_deliberative_stmt: order_by
  participant_acc_num: order_by
  priv_log_entry_id: order_by
  priv_log_header_id: order_by
  subject_matter_description: order_by
  title: order_by
}

"""
aggregate min on columns
"""
type workflow_priv_log_entry_min_fields {
  author_recip_relation: String
  circulated_draft_affirm: String
  claim_support: String
  confidentiality_statement: String
  decision_information: String
  deliberative_explaination: String
  determining_official: String
  doc_date: String
  lsn_acc_num: String
  non_deliberative_stmt: String
  participant_acc_num: String
  priv_log_entry_id: float8
  priv_log_header_id: float8
  subject_matter_description: String
  title: String
}

"""
order by min() on columns of table "workflow.priv_log_entry"
"""
input workflow_priv_log_entry_min_order_by {
  author_recip_relation: order_by
  circulated_draft_affirm: order_by
  claim_support: order_by
  confidentiality_statement: order_by
  decision_information: order_by
  deliberative_explaination: order_by
  determining_official: order_by
  doc_date: order_by
  lsn_acc_num: order_by
  non_deliberative_stmt: order_by
  participant_acc_num: order_by
  priv_log_entry_id: order_by
  priv_log_header_id: order_by
  subject_matter_description: order_by
  title: order_by
}

"""
response of any mutation on the table "workflow.priv_log_entry"
"""
type workflow_priv_log_entry_mutation_response {
  """
  number of affected rows by the mutation
  """
  affected_rows: Int!

  """
  data of the affected rows by the mutation
  """
  returning: [workflow_priv_log_entry!]!
}

"""
input type for inserting object relation for remote table "workflow.priv_log_entry"
"""
input workflow_priv_log_entry_obj_rel_insert_input {
  data: workflow_priv_log_entry_insert_input!
  on_conflict: workflow_priv_log_entry_on_conflict
}

"""
on conflict condition type for table "workflow.priv_log_entry"
"""
input workflow_priv_log_entry_on_conflict {
  constraint: workflow_priv_log_entry_constraint!
  update_columns: [workflow_priv_log_entry_update_column!]!
  where: workflow_priv_log_entry_bool_exp
}

"""
ordering options when selecting data from "workflow.priv_log_entry"
"""
input workflow_priv_log_entry_order_by {
  author_recip_relation: order_by
  circulated_draft_affirm: order_by
  claim_support: order_by
  confidentiality_statement: order_by
  decision_information: order_by
  deliberative_explaination: order_by
  determining_official: order_by
  doc_date: order_by
  lsn_acc_num: order_by
  non_deliberative_stmt: order_by
  participant_acc_num: order_by
  priv_log_entry_id: order_by
  priv_log_header_id: order_by
  subject_matter_description: order_by
  title: order_by
}

"""
primary key columns input for table: "workflow.priv_log_entry"
"""
input workflow_priv_log_entry_pk_columns_input {
  priv_log_entry_id: float8!
}

"""
select columns of table "workflow.priv_log_entry"
"""
enum workflow_priv_log_entry_select_column {
  """
  column name
  """
  author_recip_relation

  """
  column name
  """
  circulated_draft_affirm

  """
  column name
  """
  claim_support

  """
  column name
  """
  confidentiality_statement

  """
  column name
  """
  decision_information

  """
  column name
  """
  deliberative_explaination

  """
  column name
  """
  determining_official

  """
  column name
  """
  doc_date

  """
  column name
  """
  lsn_acc_num

  """
  column name
  """
  non_deliberative_stmt

  """
  column name
  """
  participant_acc_num

  """
  column name
  """
  priv_log_entry_id

  """
  column name
  """
  priv_log_header_id

  """
  column name
  """
  subject_matter_description

  """
  column name
  """
  title
}

"""
input type for updating data in table "workflow.priv_log_entry"
"""
input workflow_priv_log_entry_set_input {
  author_recip_relation: String
  circulated_draft_affirm: String
  claim_support: String
  confidentiality_statement: String
  decision_information: String
  deliberative_explaination: String
  determining_official: String
  doc_date: String
  lsn_acc_num: String
  non_deliberative_stmt: String
  participant_acc_num: String
  priv_log_entry_id: float8
  priv_log_header_id: float8
  subject_matter_description: String
  title: String
}

"""
aggregate stddev on columns
"""
type workflow_priv_log_entry_stddev_fields {
  priv_log_entry_id: Float
  priv_log_header_id: Float
}

"""
order by stddev() on columns of table "workflow.priv_log_entry"
"""
input workflow_priv_log_entry_stddev_order_by {
  priv_log_entry_id: order_by
  priv_log_header_id: order_by
}

"""
aggregate stddev_pop on columns
"""
type workflow_priv_log_entry_stddev_pop_fields {
  priv_log_entry_id: Float
  priv_log_header_id: Float
}

"""
order by stddev_pop() on columns of table "workflow.priv_log_entry"
"""
input workflow_priv_log_entry_stddev_pop_order_by {
  priv_log_entry_id: order_by
  priv_log_header_id: order_by
}

"""
aggregate stddev_samp on columns
"""
type workflow_priv_log_entry_stddev_samp_fields {
  priv_log_entry_id: Float
  priv_log_header_id: Float
}

"""
order by stddev_samp() on columns of table "workflow.priv_log_entry"
"""
input workflow_priv_log_entry_stddev_samp_order_by {
  priv_log_entry_id: order_by
  priv_log_header_id: order_by
}

"""
aggregate sum on columns
"""
type workflow_priv_log_entry_sum_fields {
  priv_log_entry_id: float8
  priv_log_header_id: float8
}

"""
order by sum() on columns of table "workflow.priv_log_entry"
"""
input workflow_priv_log_entry_sum_order_by {
  priv_log_entry_id: order_by
  priv_log_header_id: order_by
}

"""
update columns of table "workflow.priv_log_entry"
"""
enum workflow_priv_log_entry_update_column {
  """
  column name
  """
  author_recip_relation

  """
  column name
  """
  circulated_draft_affirm

  """
  column name
  """
  claim_support

  """
  column name
  """
  confidentiality_statement

  """
  column name
  """
  decision_information

  """
  column name
  """
  deliberative_explaination

  """
  column name
  """
  determining_official

  """
  column name
  """
  doc_date

  """
  column name
  """
  lsn_acc_num

  """
  column name
  """
  non_deliberative_stmt

  """
  column name
  """
  participant_acc_num

  """
  column name
  """
  priv_log_entry_id

  """
  column name
  """
  priv_log_header_id

  """
  column name
  """
  subject_matter_description

  """
  column name
  """
  title
}

"""
aggregate var_pop on columns
"""
type workflow_priv_log_entry_var_pop_fields {
  priv_log_entry_id: Float
  priv_log_header_id: Float
}

"""
order by var_pop() on columns of table "workflow.priv_log_entry"
"""
input workflow_priv_log_entry_var_pop_order_by {
  priv_log_entry_id: order_by
  priv_log_header_id: order_by
}

"""
aggregate var_samp on columns
"""
type workflow_priv_log_entry_var_samp_fields {
  priv_log_entry_id: Float
  priv_log_header_id: Float
}

"""
order by var_samp() on columns of table "workflow.priv_log_entry"
"""
input workflow_priv_log_entry_var_samp_order_by {
  priv_log_entry_id: order_by
  priv_log_header_id: order_by
}

"""
aggregate variance on columns
"""
type workflow_priv_log_entry_variance_fields {
  priv_log_entry_id: Float
  priv_log_header_id: Float
}

"""
order by variance() on columns of table "workflow.priv_log_entry"
"""
input workflow_priv_log_entry_variance_order_by {
  priv_log_entry_id: order_by
  priv_log_header_id: order_by
}

"""
columns and relationships of "workflow.privacy_docs"
"""
type workflow_privacy_docs {
  SCHEMA_NAME: String!
  ads_udi: String!
  doc_cond: String
  p_acc_no: String
  priv_type: String
  status: String
}

"""
aggregated selection of "workflow.privacy_docs"
"""
type workflow_privacy_docs_aggregate {
  aggregate: workflow_privacy_docs_aggregate_fields
  nodes: [workflow_privacy_docs!]!
}

"""
aggregate fields of "workflow.privacy_docs"
"""
type workflow_privacy_docs_aggregate_fields {
  count(columns: [workflow_privacy_docs_select_column!], distinct: Boolean): Int
  max: workflow_privacy_docs_max_fields
  min: workflow_privacy_docs_min_fields
}

"""
order by aggregate values of table "workflow.privacy_docs"
"""
input workflow_privacy_docs_aggregate_order_by {
  count: order_by
  max: workflow_privacy_docs_max_order_by
  min: workflow_privacy_docs_min_order_by
}

"""
input type for inserting array relation for remote table "workflow.privacy_docs"
"""
input workflow_privacy_docs_arr_rel_insert_input {
  data: [workflow_privacy_docs_insert_input!]!
}

"""
Boolean expression to filter rows from the table "workflow.privacy_docs". All fields are combined with a logical 'AND'.
"""
input workflow_privacy_docs_bool_exp {
  SCHEMA_NAME: String_comparison_exp
  _and: [workflow_privacy_docs_bool_exp]
  _not: workflow_privacy_docs_bool_exp
  _or: [workflow_privacy_docs_bool_exp]
  ads_udi: String_comparison_exp
  doc_cond: String_comparison_exp
  p_acc_no: String_comparison_exp
  priv_type: String_comparison_exp
  status: String_comparison_exp
}

"""
input type for inserting data into table "workflow.privacy_docs"
"""
input workflow_privacy_docs_insert_input {
  SCHEMA_NAME: String
  ads_udi: String
  doc_cond: String
  p_acc_no: String
  priv_type: String
  status: String
}

"""
aggregate max on columns
"""
type workflow_privacy_docs_max_fields {
  SCHEMA_NAME: String
  ads_udi: String
  doc_cond: String
  p_acc_no: String
  priv_type: String
  status: String
}

"""
order by max() on columns of table "workflow.privacy_docs"
"""
input workflow_privacy_docs_max_order_by {
  SCHEMA_NAME: order_by
  ads_udi: order_by
  doc_cond: order_by
  p_acc_no: order_by
  priv_type: order_by
  status: order_by
}

"""
aggregate min on columns
"""
type workflow_privacy_docs_min_fields {
  SCHEMA_NAME: String
  ads_udi: String
  doc_cond: String
  p_acc_no: String
  priv_type: String
  status: String
}

"""
order by min() on columns of table "workflow.privacy_docs"
"""
input workflow_privacy_docs_min_order_by {
  SCHEMA_NAME: order_by
  ads_udi: order_by
  doc_cond: order_by
  p_acc_no: order_by
  priv_type: order_by
  status: order_by
}

"""
response of any mutation on the table "workflow.privacy_docs"
"""
type workflow_privacy_docs_mutation_response {
  """
  number of affected rows by the mutation
  """
  affected_rows: Int!

  """
  data of the affected rows by the mutation
  """
  returning: [workflow_privacy_docs!]!
}

"""
input type for inserting object relation for remote table "workflow.privacy_docs"
"""
input workflow_privacy_docs_obj_rel_insert_input {
  data: workflow_privacy_docs_insert_input!
}

"""
ordering options when selecting data from "workflow.privacy_docs"
"""
input workflow_privacy_docs_order_by {
  SCHEMA_NAME: order_by
  ads_udi: order_by
  doc_cond: order_by
  p_acc_no: order_by
  priv_type: order_by
  status: order_by
}

"""
select columns of table "workflow.privacy_docs"
"""
enum workflow_privacy_docs_select_column {
  """
  column name
  """
  SCHEMA_NAME

  """
  column name
  """
  ads_udi

  """
  column name
  """
  doc_cond

  """
  column name
  """
  p_acc_no

  """
  column name
  """
  priv_type

  """
  column name
  """
  status
}

"""
input type for updating data in table "workflow.privacy_docs"
"""
input workflow_privacy_docs_set_input {
  SCHEMA_NAME: String
  ads_udi: String
  doc_cond: String
  p_acc_no: String
  priv_type: String
  status: String
}

"""
columns and relationships of "workflow.redacted_docs"
"""
type workflow_redacted_docs {
  SCHEMA_NAME: String
  acc_no: String
  ads_udi: String
  doc_cond: String
  nrc_accession_number: String
  proc_date: timestamp
  reason: String
  workflow_id: String
}

"""
aggregated selection of "workflow.redacted_docs"
"""
type workflow_redacted_docs_aggregate {
  aggregate: workflow_redacted_docs_aggregate_fields
  nodes: [workflow_redacted_docs!]!
}

"""
aggregate fields of "workflow.redacted_docs"
"""
type workflow_redacted_docs_aggregate_fields {
  count(columns: [workflow_redacted_docs_select_column!], distinct: Boolean): Int
  max: workflow_redacted_docs_max_fields
  min: workflow_redacted_docs_min_fields
}

"""
order by aggregate values of table "workflow.redacted_docs"
"""
input workflow_redacted_docs_aggregate_order_by {
  count: order_by
  max: workflow_redacted_docs_max_order_by
  min: workflow_redacted_docs_min_order_by
}

"""
input type for inserting array relation for remote table "workflow.redacted_docs"
"""
input workflow_redacted_docs_arr_rel_insert_input {
  data: [workflow_redacted_docs_insert_input!]!
}

"""
Boolean expression to filter rows from the table "workflow.redacted_docs". All fields are combined with a logical 'AND'.
"""
input workflow_redacted_docs_bool_exp {
  SCHEMA_NAME: String_comparison_exp
  _and: [workflow_redacted_docs_bool_exp]
  _not: workflow_redacted_docs_bool_exp
  _or: [workflow_redacted_docs_bool_exp]
  acc_no: String_comparison_exp
  ads_udi: String_comparison_exp
  doc_cond: String_comparison_exp
  nrc_accession_number: String_comparison_exp
  proc_date: timestamp_comparison_exp
  reason: String_comparison_exp
  workflow_id: String_comparison_exp
}

"""
input type for inserting data into table "workflow.redacted_docs"
"""
input workflow_redacted_docs_insert_input {
  SCHEMA_NAME: String
  acc_no: String
  ads_udi: String
  doc_cond: String
  nrc_accession_number: String
  proc_date: timestamp
  reason: String
  workflow_id: String
}

"""
aggregate max on columns
"""
type workflow_redacted_docs_max_fields {
  SCHEMA_NAME: String
  acc_no: String
  ads_udi: String
  doc_cond: String
  nrc_accession_number: String
  proc_date: timestamp
  reason: String
  workflow_id: String
}

"""
order by max() on columns of table "workflow.redacted_docs"
"""
input workflow_redacted_docs_max_order_by {
  SCHEMA_NAME: order_by
  acc_no: order_by
  ads_udi: order_by
  doc_cond: order_by
  nrc_accession_number: order_by
  proc_date: order_by
  reason: order_by
  workflow_id: order_by
}

"""
aggregate min on columns
"""
type workflow_redacted_docs_min_fields {
  SCHEMA_NAME: String
  acc_no: String
  ads_udi: String
  doc_cond: String
  nrc_accession_number: String
  proc_date: timestamp
  reason: String
  workflow_id: String
}

"""
order by min() on columns of table "workflow.redacted_docs"
"""
input workflow_redacted_docs_min_order_by {
  SCHEMA_NAME: order_by
  acc_no: order_by
  ads_udi: order_by
  doc_cond: order_by
  nrc_accession_number: order_by
  proc_date: order_by
  reason: order_by
  workflow_id: order_by
}

"""
response of any mutation on the table "workflow.redacted_docs"
"""
type workflow_redacted_docs_mutation_response {
  """
  number of affected rows by the mutation
  """
  affected_rows: Int!

  """
  data of the affected rows by the mutation
  """
  returning: [workflow_redacted_docs!]!
}

"""
input type for inserting object relation for remote table "workflow.redacted_docs"
"""
input workflow_redacted_docs_obj_rel_insert_input {
  data: workflow_redacted_docs_insert_input!
}

"""
ordering options when selecting data from "workflow.redacted_docs"
"""
input workflow_redacted_docs_order_by {
  SCHEMA_NAME: order_by
  acc_no: order_by
  ads_udi: order_by
  doc_cond: order_by
  nrc_accession_number: order_by
  proc_date: order_by
  reason: order_by
  workflow_id: order_by
}

"""
select columns of table "workflow.redacted_docs"
"""
enum workflow_redacted_docs_select_column {
  """
  column name
  """
  SCHEMA_NAME

  """
  column name
  """
  acc_no

  """
  column name
  """
  ads_udi

  """
  column name
  """
  doc_cond

  """
  column name
  """
  nrc_accession_number

  """
  column name
  """
  proc_date

  """
  column name
  """
  reason

  """
  column name
  """
  workflow_id
}

"""
input type for updating data in table "workflow.redacted_docs"
"""
input workflow_redacted_docs_set_input {
  SCHEMA_NAME: String
  acc_no: String
  ads_udi: String
  doc_cond: String
  nrc_accession_number: String
  proc_date: timestamp
  reason: String
  workflow_id: String
}

"""
columns and relationships of "workflow.redacted_pages"
"""
type workflow_redacted_pages {
  doc_id: numeric
  old_ads_udi: String
  pageno: numeric
}

"""
aggregated selection of "workflow.redacted_pages"
"""
type workflow_redacted_pages_aggregate {
  aggregate: workflow_redacted_pages_aggregate_fields
  nodes: [workflow_redacted_pages!]!
}

"""
aggregate fields of "workflow.redacted_pages"
"""
type workflow_redacted_pages_aggregate_fields {
  avg: workflow_redacted_pages_avg_fields
  count(columns: [workflow_redacted_pages_select_column!], distinct: Boolean): Int
  max: workflow_redacted_pages_max_fields
  min: workflow_redacted_pages_min_fields
  stddev: workflow_redacted_pages_stddev_fields
  stddev_pop: workflow_redacted_pages_stddev_pop_fields
  stddev_samp: workflow_redacted_pages_stddev_samp_fields
  sum: workflow_redacted_pages_sum_fields
  var_pop: workflow_redacted_pages_var_pop_fields
  var_samp: workflow_redacted_pages_var_samp_fields
  variance: workflow_redacted_pages_variance_fields
}

"""
order by aggregate values of table "workflow.redacted_pages"
"""
input workflow_redacted_pages_aggregate_order_by {
  avg: workflow_redacted_pages_avg_order_by
  count: order_by
  max: workflow_redacted_pages_max_order_by
  min: workflow_redacted_pages_min_order_by
  stddev: workflow_redacted_pages_stddev_order_by
  stddev_pop: workflow_redacted_pages_stddev_pop_order_by
  stddev_samp: workflow_redacted_pages_stddev_samp_order_by
  sum: workflow_redacted_pages_sum_order_by
  var_pop: workflow_redacted_pages_var_pop_order_by
  var_samp: workflow_redacted_pages_var_samp_order_by
  variance: workflow_redacted_pages_variance_order_by
}

"""
input type for inserting array relation for remote table "workflow.redacted_pages"
"""
input workflow_redacted_pages_arr_rel_insert_input {
  data: [workflow_redacted_pages_insert_input!]!
}

"""
aggregate avg on columns
"""
type workflow_redacted_pages_avg_fields {
  doc_id: Float
  pageno: Float
}

"""
order by avg() on columns of table "workflow.redacted_pages"
"""
input workflow_redacted_pages_avg_order_by {
  doc_id: order_by
  pageno: order_by
}

"""
Boolean expression to filter rows from the table "workflow.redacted_pages". All fields are combined with a logical 'AND'.
"""
input workflow_redacted_pages_bool_exp {
  _and: [workflow_redacted_pages_bool_exp]
  _not: workflow_redacted_pages_bool_exp
  _or: [workflow_redacted_pages_bool_exp]
  doc_id: numeric_comparison_exp
  old_ads_udi: String_comparison_exp
  pageno: numeric_comparison_exp
}

"""
input type for incrementing integer column in table "workflow.redacted_pages"
"""
input workflow_redacted_pages_inc_input {
  doc_id: numeric
  pageno: numeric
}

"""
input type for inserting data into table "workflow.redacted_pages"
"""
input workflow_redacted_pages_insert_input {
  doc_id: numeric
  old_ads_udi: String
  pageno: numeric
}

"""
aggregate max on columns
"""
type workflow_redacted_pages_max_fields {
  doc_id: numeric
  old_ads_udi: String
  pageno: numeric
}

"""
order by max() on columns of table "workflow.redacted_pages"
"""
input workflow_redacted_pages_max_order_by {
  doc_id: order_by
  old_ads_udi: order_by
  pageno: order_by
}

"""
aggregate min on columns
"""
type workflow_redacted_pages_min_fields {
  doc_id: numeric
  old_ads_udi: String
  pageno: numeric
}

"""
order by min() on columns of table "workflow.redacted_pages"
"""
input workflow_redacted_pages_min_order_by {
  doc_id: order_by
  old_ads_udi: order_by
  pageno: order_by
}

"""
response of any mutation on the table "workflow.redacted_pages"
"""
type workflow_redacted_pages_mutation_response {
  """
  number of affected rows by the mutation
  """
  affected_rows: Int!

  """
  data of the affected rows by the mutation
  """
  returning: [workflow_redacted_pages!]!
}

"""
input type for inserting object relation for remote table "workflow.redacted_pages"
"""
input workflow_redacted_pages_obj_rel_insert_input {
  data: workflow_redacted_pages_insert_input!
}

"""
ordering options when selecting data from "workflow.redacted_pages"
"""
input workflow_redacted_pages_order_by {
  doc_id: order_by
  old_ads_udi: order_by
  pageno: order_by
}

"""
select columns of table "workflow.redacted_pages"
"""
enum workflow_redacted_pages_select_column {
  """
  column name
  """
  doc_id

  """
  column name
  """
  old_ads_udi

  """
  column name
  """
  pageno
}

"""
input type for updating data in table "workflow.redacted_pages"
"""
input workflow_redacted_pages_set_input {
  doc_id: numeric
  old_ads_udi: String
  pageno: numeric
}

"""
aggregate stddev on columns
"""
type workflow_redacted_pages_stddev_fields {
  doc_id: Float
  pageno: Float
}

"""
order by stddev() on columns of table "workflow.redacted_pages"
"""
input workflow_redacted_pages_stddev_order_by {
  doc_id: order_by
  pageno: order_by
}

"""
aggregate stddev_pop on columns
"""
type workflow_redacted_pages_stddev_pop_fields {
  doc_id: Float
  pageno: Float
}

"""
order by stddev_pop() on columns of table "workflow.redacted_pages"
"""
input workflow_redacted_pages_stddev_pop_order_by {
  doc_id: order_by
  pageno: order_by
}

"""
aggregate stddev_samp on columns
"""
type workflow_redacted_pages_stddev_samp_fields {
  doc_id: Float
  pageno: Float
}

"""
order by stddev_samp() on columns of table "workflow.redacted_pages"
"""
input workflow_redacted_pages_stddev_samp_order_by {
  doc_id: order_by
  pageno: order_by
}

"""
aggregate sum on columns
"""
type workflow_redacted_pages_sum_fields {
  doc_id: numeric
  pageno: numeric
}

"""
order by sum() on columns of table "workflow.redacted_pages"
"""
input workflow_redacted_pages_sum_order_by {
  doc_id: order_by
  pageno: order_by
}

"""
aggregate var_pop on columns
"""
type workflow_redacted_pages_var_pop_fields {
  doc_id: Float
  pageno: Float
}

"""
order by var_pop() on columns of table "workflow.redacted_pages"
"""
input workflow_redacted_pages_var_pop_order_by {
  doc_id: order_by
  pageno: order_by
}

"""
aggregate var_samp on columns
"""
type workflow_redacted_pages_var_samp_fields {
  doc_id: Float
  pageno: Float
}

"""
order by var_samp() on columns of table "workflow.redacted_pages"
"""
input workflow_redacted_pages_var_samp_order_by {
  doc_id: order_by
  pageno: order_by
}

"""
aggregate variance on columns
"""
type workflow_redacted_pages_variance_fields {
  doc_id: Float
  pageno: Float
}

"""
order by variance() on columns of table "workflow.redacted_pages"
"""
input workflow_redacted_pages_variance_order_by {
  doc_id: order_by
  pageno: order_by
}

"""
columns and relationships of "workflow.redaction_processing"
"""
type workflow_redaction_processing {
  SCHEMA_NAME: String
  acc_no: String
  adiis_load_date: timestamp
  adiis_load_error: String
  adiis_load_status: String
  adiis_load_user: String
  ads_ctrname: String
  ads_fpage: numeric
  ads_lpage: numeric
  ads_udi: String
  batch_id: String
  image_path: String
  insert_date: timestamp
  insert_user: String
  nrc_accession_number: String
  old_acc_no: String
  qa_date: timestamp
  qa_status: String
  qc_date: timestamp
  qc_status: String
  qc_user: String
  reason: String
  redacted_title: String
  status: String
  update_date: timestamp
  update_user: String
}

"""
aggregated selection of "workflow.redaction_processing"
"""
type workflow_redaction_processing_aggregate {
  aggregate: workflow_redaction_processing_aggregate_fields
  nodes: [workflow_redaction_processing!]!
}

"""
aggregate fields of "workflow.redaction_processing"
"""
type workflow_redaction_processing_aggregate_fields {
  avg: workflow_redaction_processing_avg_fields
  count(columns: [workflow_redaction_processing_select_column!], distinct: Boolean): Int
  max: workflow_redaction_processing_max_fields
  min: workflow_redaction_processing_min_fields
  stddev: workflow_redaction_processing_stddev_fields
  stddev_pop: workflow_redaction_processing_stddev_pop_fields
  stddev_samp: workflow_redaction_processing_stddev_samp_fields
  sum: workflow_redaction_processing_sum_fields
  var_pop: workflow_redaction_processing_var_pop_fields
  var_samp: workflow_redaction_processing_var_samp_fields
  variance: workflow_redaction_processing_variance_fields
}

"""
order by aggregate values of table "workflow.redaction_processing"
"""
input workflow_redaction_processing_aggregate_order_by {
  avg: workflow_redaction_processing_avg_order_by
  count: order_by
  max: workflow_redaction_processing_max_order_by
  min: workflow_redaction_processing_min_order_by
  stddev: workflow_redaction_processing_stddev_order_by
  stddev_pop: workflow_redaction_processing_stddev_pop_order_by
  stddev_samp: workflow_redaction_processing_stddev_samp_order_by
  sum: workflow_redaction_processing_sum_order_by
  var_pop: workflow_redaction_processing_var_pop_order_by
  var_samp: workflow_redaction_processing_var_samp_order_by
  variance: workflow_redaction_processing_variance_order_by
}

"""
input type for inserting array relation for remote table "workflow.redaction_processing"
"""
input workflow_redaction_processing_arr_rel_insert_input {
  data: [workflow_redaction_processing_insert_input!]!
}

"""
aggregate avg on columns
"""
type workflow_redaction_processing_avg_fields {
  ads_fpage: Float
  ads_lpage: Float
}

"""
order by avg() on columns of table "workflow.redaction_processing"
"""
input workflow_redaction_processing_avg_order_by {
  ads_fpage: order_by
  ads_lpage: order_by
}

"""
Boolean expression to filter rows from the table
"workflow.redaction_processing". All fields are combined with a logical 'AND'.
"""
input workflow_redaction_processing_bool_exp {
  SCHEMA_NAME: String_comparison_exp
  _and: [workflow_redaction_processing_bool_exp]
  _not: workflow_redaction_processing_bool_exp
  _or: [workflow_redaction_processing_bool_exp]
  acc_no: String_comparison_exp
  adiis_load_date: timestamp_comparison_exp
  adiis_load_error: String_comparison_exp
  adiis_load_status: String_comparison_exp
  adiis_load_user: String_comparison_exp
  ads_ctrname: String_comparison_exp
  ads_fpage: numeric_comparison_exp
  ads_lpage: numeric_comparison_exp
  ads_udi: String_comparison_exp
  batch_id: String_comparison_exp
  image_path: String_comparison_exp
  insert_date: timestamp_comparison_exp
  insert_user: String_comparison_exp
  nrc_accession_number: String_comparison_exp
  old_acc_no: String_comparison_exp
  qa_date: timestamp_comparison_exp
  qa_status: String_comparison_exp
  qc_date: timestamp_comparison_exp
  qc_status: String_comparison_exp
  qc_user: String_comparison_exp
  reason: String_comparison_exp
  redacted_title: String_comparison_exp
  status: String_comparison_exp
  update_date: timestamp_comparison_exp
  update_user: String_comparison_exp
}

"""
input type for incrementing integer column in table "workflow.redaction_processing"
"""
input workflow_redaction_processing_inc_input {
  ads_fpage: numeric
  ads_lpage: numeric
}

"""
input type for inserting data into table "workflow.redaction_processing"
"""
input workflow_redaction_processing_insert_input {
  SCHEMA_NAME: String
  acc_no: String
  adiis_load_date: timestamp
  adiis_load_error: String
  adiis_load_status: String
  adiis_load_user: String
  ads_ctrname: String
  ads_fpage: numeric
  ads_lpage: numeric
  ads_udi: String
  batch_id: String
  image_path: String
  insert_date: timestamp
  insert_user: String
  nrc_accession_number: String
  old_acc_no: String
  qa_date: timestamp
  qa_status: String
  qc_date: timestamp
  qc_status: String
  qc_user: String
  reason: String
  redacted_title: String
  status: String
  update_date: timestamp
  update_user: String
}

"""
aggregate max on columns
"""
type workflow_redaction_processing_max_fields {
  SCHEMA_NAME: String
  acc_no: String
  adiis_load_date: timestamp
  adiis_load_error: String
  adiis_load_status: String
  adiis_load_user: String
  ads_ctrname: String
  ads_fpage: numeric
  ads_lpage: numeric
  ads_udi: String
  batch_id: String
  image_path: String
  insert_date: timestamp
  insert_user: String
  nrc_accession_number: String
  old_acc_no: String
  qa_date: timestamp
  qa_status: String
  qc_date: timestamp
  qc_status: String
  qc_user: String
  reason: String
  redacted_title: String
  status: String
  update_date: timestamp
  update_user: String
}

"""
order by max() on columns of table "workflow.redaction_processing"
"""
input workflow_redaction_processing_max_order_by {
  SCHEMA_NAME: order_by
  acc_no: order_by
  adiis_load_date: order_by
  adiis_load_error: order_by
  adiis_load_status: order_by
  adiis_load_user: order_by
  ads_ctrname: order_by
  ads_fpage: order_by
  ads_lpage: order_by
  ads_udi: order_by
  batch_id: order_by
  image_path: order_by
  insert_date: order_by
  insert_user: order_by
  nrc_accession_number: order_by
  old_acc_no: order_by
  qa_date: order_by
  qa_status: order_by
  qc_date: order_by
  qc_status: order_by
  qc_user: order_by
  reason: order_by
  redacted_title: order_by
  status: order_by
  update_date: order_by
  update_user: order_by
}

"""
aggregate min on columns
"""
type workflow_redaction_processing_min_fields {
  SCHEMA_NAME: String
  acc_no: String
  adiis_load_date: timestamp
  adiis_load_error: String
  adiis_load_status: String
  adiis_load_user: String
  ads_ctrname: String
  ads_fpage: numeric
  ads_lpage: numeric
  ads_udi: String
  batch_id: String
  image_path: String
  insert_date: timestamp
  insert_user: String
  nrc_accession_number: String
  old_acc_no: String
  qa_date: timestamp
  qa_status: String
  qc_date: timestamp
  qc_status: String
  qc_user: String
  reason: String
  redacted_title: String
  status: String
  update_date: timestamp
  update_user: String
}

"""
order by min() on columns of table "workflow.redaction_processing"
"""
input workflow_redaction_processing_min_order_by {
  SCHEMA_NAME: order_by
  acc_no: order_by
  adiis_load_date: order_by
  adiis_load_error: order_by
  adiis_load_status: order_by
  adiis_load_user: order_by
  ads_ctrname: order_by
  ads_fpage: order_by
  ads_lpage: order_by
  ads_udi: order_by
  batch_id: order_by
  image_path: order_by
  insert_date: order_by
  insert_user: order_by
  nrc_accession_number: order_by
  old_acc_no: order_by
  qa_date: order_by
  qa_status: order_by
  qc_date: order_by
  qc_status: order_by
  qc_user: order_by
  reason: order_by
  redacted_title: order_by
  status: order_by
  update_date: order_by
  update_user: order_by
}

"""
response of any mutation on the table "workflow.redaction_processing"
"""
type workflow_redaction_processing_mutation_response {
  """
  number of affected rows by the mutation
  """
  affected_rows: Int!

  """
  data of the affected rows by the mutation
  """
  returning: [workflow_redaction_processing!]!
}

"""
input type for inserting object relation for remote table "workflow.redaction_processing"
"""
input workflow_redaction_processing_obj_rel_insert_input {
  data: workflow_redaction_processing_insert_input!
}

"""
ordering options when selecting data from "workflow.redaction_processing"
"""
input workflow_redaction_processing_order_by {
  SCHEMA_NAME: order_by
  acc_no: order_by
  adiis_load_date: order_by
  adiis_load_error: order_by
  adiis_load_status: order_by
  adiis_load_user: order_by
  ads_ctrname: order_by
  ads_fpage: order_by
  ads_lpage: order_by
  ads_udi: order_by
  batch_id: order_by
  image_path: order_by
  insert_date: order_by
  insert_user: order_by
  nrc_accession_number: order_by
  old_acc_no: order_by
  qa_date: order_by
  qa_status: order_by
  qc_date: order_by
  qc_status: order_by
  qc_user: order_by
  reason: order_by
  redacted_title: order_by
  status: order_by
  update_date: order_by
  update_user: order_by
}

"""
select columns of table "workflow.redaction_processing"
"""
enum workflow_redaction_processing_select_column {
  """
  column name
  """
  SCHEMA_NAME

  """
  column name
  """
  acc_no

  """
  column name
  """
  adiis_load_date

  """
  column name
  """
  adiis_load_error

  """
  column name
  """
  adiis_load_status

  """
  column name
  """
  adiis_load_user

  """
  column name
  """
  ads_ctrname

  """
  column name
  """
  ads_fpage

  """
  column name
  """
  ads_lpage

  """
  column name
  """
  ads_udi

  """
  column name
  """
  batch_id

  """
  column name
  """
  image_path

  """
  column name
  """
  insert_date

  """
  column name
  """
  insert_user

  """
  column name
  """
  nrc_accession_number

  """
  column name
  """
  old_acc_no

  """
  column name
  """
  qa_date

  """
  column name
  """
  qa_status

  """
  column name
  """
  qc_date

  """
  column name
  """
  qc_status

  """
  column name
  """
  qc_user

  """
  column name
  """
  reason

  """
  column name
  """
  redacted_title

  """
  column name
  """
  status

  """
  column name
  """
  update_date

  """
  column name
  """
  update_user
}

"""
input type for updating data in table "workflow.redaction_processing"
"""
input workflow_redaction_processing_set_input {
  SCHEMA_NAME: String
  acc_no: String
  adiis_load_date: timestamp
  adiis_load_error: String
  adiis_load_status: String
  adiis_load_user: String
  ads_ctrname: String
  ads_fpage: numeric
  ads_lpage: numeric
  ads_udi: String
  batch_id: String
  image_path: String
  insert_date: timestamp
  insert_user: String
  nrc_accession_number: String
  old_acc_no: String
  qa_date: timestamp
  qa_status: String
  qc_date: timestamp
  qc_status: String
  qc_user: String
  reason: String
  redacted_title: String
  status: String
  update_date: timestamp
  update_user: String
}

"""
aggregate stddev on columns
"""
type workflow_redaction_processing_stddev_fields {
  ads_fpage: Float
  ads_lpage: Float
}

"""
order by stddev() on columns of table "workflow.redaction_processing"
"""
input workflow_redaction_processing_stddev_order_by {
  ads_fpage: order_by
  ads_lpage: order_by
}

"""
aggregate stddev_pop on columns
"""
type workflow_redaction_processing_stddev_pop_fields {
  ads_fpage: Float
  ads_lpage: Float
}

"""
order by stddev_pop() on columns of table "workflow.redaction_processing"
"""
input workflow_redaction_processing_stddev_pop_order_by {
  ads_fpage: order_by
  ads_lpage: order_by
}

"""
aggregate stddev_samp on columns
"""
type workflow_redaction_processing_stddev_samp_fields {
  ads_fpage: Float
  ads_lpage: Float
}

"""
order by stddev_samp() on columns of table "workflow.redaction_processing"
"""
input workflow_redaction_processing_stddev_samp_order_by {
  ads_fpage: order_by
  ads_lpage: order_by
}

"""
aggregate sum on columns
"""
type workflow_redaction_processing_sum_fields {
  ads_fpage: numeric
  ads_lpage: numeric
}

"""
order by sum() on columns of table "workflow.redaction_processing"
"""
input workflow_redaction_processing_sum_order_by {
  ads_fpage: order_by
  ads_lpage: order_by
}

"""
aggregate var_pop on columns
"""
type workflow_redaction_processing_var_pop_fields {
  ads_fpage: Float
  ads_lpage: Float
}

"""
order by var_pop() on columns of table "workflow.redaction_processing"
"""
input workflow_redaction_processing_var_pop_order_by {
  ads_fpage: order_by
  ads_lpage: order_by
}

"""
aggregate var_samp on columns
"""
type workflow_redaction_processing_var_samp_fields {
  ads_fpage: Float
  ads_lpage: Float
}

"""
order by var_samp() on columns of table "workflow.redaction_processing"
"""
input workflow_redaction_processing_var_samp_order_by {
  ads_fpage: order_by
  ads_lpage: order_by
}

"""
aggregate variance on columns
"""
type workflow_redaction_processing_variance_fields {
  ads_fpage: Float
  ads_lpage: Float
}

"""
order by variance() on columns of table "workflow.redaction_processing"
"""
input workflow_redaction_processing_variance_order_by {
  ads_fpage: order_by
  ads_lpage: order_by
}

"""
columns and relationships of "workflow.released_docs"
"""
type workflow_released_docs {
  EXCLUDE: String
  SCHEMA_NAME: String!
  ads_udi: String!
  cert_set: String
  clawback: String
  container: String
  doc_cond: String
  legal: String
  legal_rel: String
  lv: String
  p_acc_no: String
  priv: String
  proc_date: timestamp
  prop: String
  reason: String
  sec: String
  setnum: String
  trans: String
  w32_rel: String
  w41_rel: String
}

"""
aggregated selection of "workflow.released_docs"
"""
type workflow_released_docs_aggregate {
  aggregate: workflow_released_docs_aggregate_fields
  nodes: [workflow_released_docs!]!
}

"""
aggregate fields of "workflow.released_docs"
"""
type workflow_released_docs_aggregate_fields {
  count(columns: [workflow_released_docs_select_column!], distinct: Boolean): Int
  max: workflow_released_docs_max_fields
  min: workflow_released_docs_min_fields
}

"""
order by aggregate values of table "workflow.released_docs"
"""
input workflow_released_docs_aggregate_order_by {
  count: order_by
  max: workflow_released_docs_max_order_by
  min: workflow_released_docs_min_order_by
}

"""
input type for inserting array relation for remote table "workflow.released_docs"
"""
input workflow_released_docs_arr_rel_insert_input {
  data: [workflow_released_docs_insert_input!]!
}

"""
Boolean expression to filter rows from the table "workflow.released_docs". All fields are combined with a logical 'AND'.
"""
input workflow_released_docs_bool_exp {
  EXCLUDE: String_comparison_exp
  SCHEMA_NAME: String_comparison_exp
  _and: [workflow_released_docs_bool_exp]
  _not: workflow_released_docs_bool_exp
  _or: [workflow_released_docs_bool_exp]
  ads_udi: String_comparison_exp
  cert_set: String_comparison_exp
  clawback: String_comparison_exp
  container: String_comparison_exp
  doc_cond: String_comparison_exp
  legal: String_comparison_exp
  legal_rel: String_comparison_exp
  lv: String_comparison_exp
  p_acc_no: String_comparison_exp
  priv: String_comparison_exp
  proc_date: timestamp_comparison_exp
  prop: String_comparison_exp
  reason: String_comparison_exp
  sec: String_comparison_exp
  setnum: String_comparison_exp
  trans: String_comparison_exp
  w32_rel: String_comparison_exp
  w41_rel: String_comparison_exp
}

"""
input type for inserting data into table "workflow.released_docs"
"""
input workflow_released_docs_insert_input {
  EXCLUDE: String
  SCHEMA_NAME: String
  ads_udi: String
  cert_set: String
  clawback: String
  container: String
  doc_cond: String
  legal: String
  legal_rel: String
  lv: String
  p_acc_no: String
  priv: String
  proc_date: timestamp
  prop: String
  reason: String
  sec: String
  setnum: String
  trans: String
  w32_rel: String
  w41_rel: String
}

"""
aggregate max on columns
"""
type workflow_released_docs_max_fields {
  EXCLUDE: String
  SCHEMA_NAME: String
  ads_udi: String
  cert_set: String
  clawback: String
  container: String
  doc_cond: String
  legal: String
  legal_rel: String
  lv: String
  p_acc_no: String
  priv: String
  proc_date: timestamp
  prop: String
  reason: String
  sec: String
  setnum: String
  trans: String
  w32_rel: String
  w41_rel: String
}

"""
order by max() on columns of table "workflow.released_docs"
"""
input workflow_released_docs_max_order_by {
  EXCLUDE: order_by
  SCHEMA_NAME: order_by
  ads_udi: order_by
  cert_set: order_by
  clawback: order_by
  container: order_by
  doc_cond: order_by
  legal: order_by
  legal_rel: order_by
  lv: order_by
  p_acc_no: order_by
  priv: order_by
  proc_date: order_by
  prop: order_by
  reason: order_by
  sec: order_by
  setnum: order_by
  trans: order_by
  w32_rel: order_by
  w41_rel: order_by
}

"""
aggregate min on columns
"""
type workflow_released_docs_min_fields {
  EXCLUDE: String
  SCHEMA_NAME: String
  ads_udi: String
  cert_set: String
  clawback: String
  container: String
  doc_cond: String
  legal: String
  legal_rel: String
  lv: String
  p_acc_no: String
  priv: String
  proc_date: timestamp
  prop: String
  reason: String
  sec: String
  setnum: String
  trans: String
  w32_rel: String
  w41_rel: String
}

"""
order by min() on columns of table "workflow.released_docs"
"""
input workflow_released_docs_min_order_by {
  EXCLUDE: order_by
  SCHEMA_NAME: order_by
  ads_udi: order_by
  cert_set: order_by
  clawback: order_by
  container: order_by
  doc_cond: order_by
  legal: order_by
  legal_rel: order_by
  lv: order_by
  p_acc_no: order_by
  priv: order_by
  proc_date: order_by
  prop: order_by
  reason: order_by
  sec: order_by
  setnum: order_by
  trans: order_by
  w32_rel: order_by
  w41_rel: order_by
}

"""
response of any mutation on the table "workflow.released_docs"
"""
type workflow_released_docs_mutation_response {
  """
  number of affected rows by the mutation
  """
  affected_rows: Int!

  """
  data of the affected rows by the mutation
  """
  returning: [workflow_released_docs!]!
}

"""
input type for inserting object relation for remote table "workflow.released_docs"
"""
input workflow_released_docs_obj_rel_insert_input {
  data: workflow_released_docs_insert_input!
}

"""
ordering options when selecting data from "workflow.released_docs"
"""
input workflow_released_docs_order_by {
  EXCLUDE: order_by
  SCHEMA_NAME: order_by
  ads_udi: order_by
  cert_set: order_by
  clawback: order_by
  container: order_by
  doc_cond: order_by
  legal: order_by
  legal_rel: order_by
  lv: order_by
  p_acc_no: order_by
  priv: order_by
  proc_date: order_by
  prop: order_by
  reason: order_by
  sec: order_by
  setnum: order_by
  trans: order_by
  w32_rel: order_by
  w41_rel: order_by
}

"""
select columns of table "workflow.released_docs"
"""
enum workflow_released_docs_select_column {
  """
  column name
  """
  EXCLUDE

  """
  column name
  """
  SCHEMA_NAME

  """
  column name
  """
  ads_udi

  """
  column name
  """
  cert_set

  """
  column name
  """
  clawback

  """
  column name
  """
  container

  """
  column name
  """
  doc_cond

  """
  column name
  """
  legal

  """
  column name
  """
  legal_rel

  """
  column name
  """
  lv

  """
  column name
  """
  p_acc_no

  """
  column name
  """
  priv

  """
  column name
  """
  proc_date

  """
  column name
  """
  prop

  """
  column name
  """
  reason

  """
  column name
  """
  sec

  """
  column name
  """
  setnum

  """
  column name
  """
  trans

  """
  column name
  """
  w32_rel

  """
  column name
  """
  w41_rel
}

"""
input type for updating data in table "workflow.released_docs"
"""
input workflow_released_docs_set_input {
  EXCLUDE: String
  SCHEMA_NAME: String
  ads_udi: String
  cert_set: String
  clawback: String
  container: String
  doc_cond: String
  legal: String
  legal_rel: String
  lv: String
  p_acc_no: String
  priv: String
  proc_date: timestamp
  prop: String
  reason: String
  sec: String
  setnum: String
  trans: String
  w32_rel: String
  w41_rel: String
}

"""
columns and relationships of "workflow.sources"
"""
type workflow_sources {
  COMMENTS: String
  ID: float8!
  NAME: String
  created: timestamp
  workflow_id: float8
  workflows: String
}

"""
aggregated selection of "workflow.sources"
"""
type workflow_sources_aggregate {
  aggregate: workflow_sources_aggregate_fields
  nodes: [workflow_sources!]!
}

"""
aggregate fields of "workflow.sources"
"""
type workflow_sources_aggregate_fields {
  avg: workflow_sources_avg_fields
  count(columns: [workflow_sources_select_column!], distinct: Boolean): Int
  max: workflow_sources_max_fields
  min: workflow_sources_min_fields
  stddev: workflow_sources_stddev_fields
  stddev_pop: workflow_sources_stddev_pop_fields
  stddev_samp: workflow_sources_stddev_samp_fields
  sum: workflow_sources_sum_fields
  var_pop: workflow_sources_var_pop_fields
  var_samp: workflow_sources_var_samp_fields
  variance: workflow_sources_variance_fields
}

"""
order by aggregate values of table "workflow.sources"
"""
input workflow_sources_aggregate_order_by {
  avg: workflow_sources_avg_order_by
  count: order_by
  max: workflow_sources_max_order_by
  min: workflow_sources_min_order_by
  stddev: workflow_sources_stddev_order_by
  stddev_pop: workflow_sources_stddev_pop_order_by
  stddev_samp: workflow_sources_stddev_samp_order_by
  sum: workflow_sources_sum_order_by
  var_pop: workflow_sources_var_pop_order_by
  var_samp: workflow_sources_var_samp_order_by
  variance: workflow_sources_variance_order_by
}

"""
input type for inserting array relation for remote table "workflow.sources"
"""
input workflow_sources_arr_rel_insert_input {
  data: [workflow_sources_insert_input!]!
  on_conflict: workflow_sources_on_conflict
}

"""
aggregate avg on columns
"""
type workflow_sources_avg_fields {
  ID: Float
  workflow_id: Float
}

"""
order by avg() on columns of table "workflow.sources"
"""
input workflow_sources_avg_order_by {
  ID: order_by
  workflow_id: order_by
}

"""
Boolean expression to filter rows from the table "workflow.sources". All fields are combined with a logical 'AND'.
"""
input workflow_sources_bool_exp {
  COMMENTS: String_comparison_exp
  ID: float8_comparison_exp
  NAME: String_comparison_exp
  _and: [workflow_sources_bool_exp]
  _not: workflow_sources_bool_exp
  _or: [workflow_sources_bool_exp]
  created: timestamp_comparison_exp
  workflow_id: float8_comparison_exp
  workflows: String_comparison_exp
}

"""
unique or primary key constraints on table "workflow.sources"
"""
enum workflow_sources_constraint {
  """
  unique or primary key constraint
  """
  sources_pkey
}

"""
input type for incrementing integer column in table "workflow.sources"
"""
input workflow_sources_inc_input {
  ID: float8
  workflow_id: float8
}

"""
input type for inserting data into table "workflow.sources"
"""
input workflow_sources_insert_input {
  COMMENTS: String
  ID: float8
  NAME: String
  created: timestamp
  workflow_id: float8
  workflows: String
}

"""
aggregate max on columns
"""
type workflow_sources_max_fields {
  COMMENTS: String
  ID: float8
  NAME: String
  created: timestamp
  workflow_id: float8
  workflows: String
}

"""
order by max() on columns of table "workflow.sources"
"""
input workflow_sources_max_order_by {
  COMMENTS: order_by
  ID: order_by
  NAME: order_by
  created: order_by
  workflow_id: order_by
  workflows: order_by
}

"""
aggregate min on columns
"""
type workflow_sources_min_fields {
  COMMENTS: String
  ID: float8
  NAME: String
  created: timestamp
  workflow_id: float8
  workflows: String
}

"""
order by min() on columns of table "workflow.sources"
"""
input workflow_sources_min_order_by {
  COMMENTS: order_by
  ID: order_by
  NAME: order_by
  created: order_by
  workflow_id: order_by
  workflows: order_by
}

"""
response of any mutation on the table "workflow.sources"
"""
type workflow_sources_mutation_response {
  """
  number of affected rows by the mutation
  """
  affected_rows: Int!

  """
  data of the affected rows by the mutation
  """
  returning: [workflow_sources!]!
}

"""
input type for inserting object relation for remote table "workflow.sources"
"""
input workflow_sources_obj_rel_insert_input {
  data: workflow_sources_insert_input!
  on_conflict: workflow_sources_on_conflict
}

"""
on conflict condition type for table "workflow.sources"
"""
input workflow_sources_on_conflict {
  constraint: workflow_sources_constraint!
  update_columns: [workflow_sources_update_column!]!
  where: workflow_sources_bool_exp
}

"""
ordering options when selecting data from "workflow.sources"
"""
input workflow_sources_order_by {
  COMMENTS: order_by
  ID: order_by
  NAME: order_by
  created: order_by
  workflow_id: order_by
  workflows: order_by
}

"""
primary key columns input for table: "workflow.sources"
"""
input workflow_sources_pk_columns_input {
  ID: float8!
}

"""
select columns of table "workflow.sources"
"""
enum workflow_sources_select_column {
  """
  column name
  """
  COMMENTS

  """
  column name
  """
  ID

  """
  column name
  """
  NAME

  """
  column name
  """
  created

  """
  column name
  """
  workflow_id

  """
  column name
  """
  workflows
}

"""
input type for updating data in table "workflow.sources"
"""
input workflow_sources_set_input {
  COMMENTS: String
  ID: float8
  NAME: String
  created: timestamp
  workflow_id: float8
  workflows: String
}

"""
aggregate stddev on columns
"""
type workflow_sources_stddev_fields {
  ID: Float
  workflow_id: Float
}

"""
order by stddev() on columns of table "workflow.sources"
"""
input workflow_sources_stddev_order_by {
  ID: order_by
  workflow_id: order_by
}

"""
aggregate stddev_pop on columns
"""
type workflow_sources_stddev_pop_fields {
  ID: Float
  workflow_id: Float
}

"""
order by stddev_pop() on columns of table "workflow.sources"
"""
input workflow_sources_stddev_pop_order_by {
  ID: order_by
  workflow_id: order_by
}

"""
aggregate stddev_samp on columns
"""
type workflow_sources_stddev_samp_fields {
  ID: Float
  workflow_id: Float
}

"""
order by stddev_samp() on columns of table "workflow.sources"
"""
input workflow_sources_stddev_samp_order_by {
  ID: order_by
  workflow_id: order_by
}

"""
aggregate sum on columns
"""
type workflow_sources_sum_fields {
  ID: float8
  workflow_id: float8
}

"""
order by sum() on columns of table "workflow.sources"
"""
input workflow_sources_sum_order_by {
  ID: order_by
  workflow_id: order_by
}

"""
update columns of table "workflow.sources"
"""
enum workflow_sources_update_column {
  """
  column name
  """
  COMMENTS

  """
  column name
  """
  ID

  """
  column name
  """
  NAME

  """
  column name
  """
  created

  """
  column name
  """
  workflow_id

  """
  column name
  """
  workflows
}

"""
aggregate var_pop on columns
"""
type workflow_sources_var_pop_fields {
  ID: Float
  workflow_id: Float
}

"""
order by var_pop() on columns of table "workflow.sources"
"""
input workflow_sources_var_pop_order_by {
  ID: order_by
  workflow_id: order_by
}

"""
aggregate var_samp on columns
"""
type workflow_sources_var_samp_fields {
  ID: Float
  workflow_id: Float
}

"""
order by var_samp() on columns of table "workflow.sources"
"""
input workflow_sources_var_samp_order_by {
  ID: order_by
  workflow_id: order_by
}

"""
aggregate variance on columns
"""
type workflow_sources_variance_fields {
  ID: Float
  workflow_id: Float
}

"""
order by variance() on columns of table "workflow.sources"
"""
input workflow_sources_variance_order_by {
  ID: order_by
  workflow_id: order_by
}

"""
columns and relationships of "workflow.stages"
"""
type workflow_stages {
  s00_name: String
  s00_on: bpchar
  s10_name: String
  s10_on: bpchar
  s20_name: String
  s20_on: bpchar
  s30_name: String
  s30_on: bpchar
  s40_name: String
  s40_on: bpchar
  s50_name: String
  s50_on: bpchar
  s60_name: String
  s60_on: bpchar
  workflow_id: float8
}

"""
aggregated selection of "workflow.stages"
"""
type workflow_stages_aggregate {
  aggregate: workflow_stages_aggregate_fields
  nodes: [workflow_stages!]!
}

"""
aggregate fields of "workflow.stages"
"""
type workflow_stages_aggregate_fields {
  avg: workflow_stages_avg_fields
  count(columns: [workflow_stages_select_column!], distinct: Boolean): Int
  max: workflow_stages_max_fields
  min: workflow_stages_min_fields
  stddev: workflow_stages_stddev_fields
  stddev_pop: workflow_stages_stddev_pop_fields
  stddev_samp: workflow_stages_stddev_samp_fields
  sum: workflow_stages_sum_fields
  var_pop: workflow_stages_var_pop_fields
  var_samp: workflow_stages_var_samp_fields
  variance: workflow_stages_variance_fields
}

"""
order by aggregate values of table "workflow.stages"
"""
input workflow_stages_aggregate_order_by {
  avg: workflow_stages_avg_order_by
  count: order_by
  max: workflow_stages_max_order_by
  min: workflow_stages_min_order_by
  stddev: workflow_stages_stddev_order_by
  stddev_pop: workflow_stages_stddev_pop_order_by
  stddev_samp: workflow_stages_stddev_samp_order_by
  sum: workflow_stages_sum_order_by
  var_pop: workflow_stages_var_pop_order_by
  var_samp: workflow_stages_var_samp_order_by
  variance: workflow_stages_variance_order_by
}

"""
input type for inserting array relation for remote table "workflow.stages"
"""
input workflow_stages_arr_rel_insert_input {
  data: [workflow_stages_insert_input!]!
}

"""
aggregate avg on columns
"""
type workflow_stages_avg_fields {
  workflow_id: Float
}

"""
order by avg() on columns of table "workflow.stages"
"""
input workflow_stages_avg_order_by {
  workflow_id: order_by
}

"""
Boolean expression to filter rows from the table "workflow.stages". All fields are combined with a logical 'AND'.
"""
input workflow_stages_bool_exp {
  _and: [workflow_stages_bool_exp]
  _not: workflow_stages_bool_exp
  _or: [workflow_stages_bool_exp]
  s00_name: String_comparison_exp
  s00_on: bpchar_comparison_exp
  s10_name: String_comparison_exp
  s10_on: bpchar_comparison_exp
  s20_name: String_comparison_exp
  s20_on: bpchar_comparison_exp
  s30_name: String_comparison_exp
  s30_on: bpchar_comparison_exp
  s40_name: String_comparison_exp
  s40_on: bpchar_comparison_exp
  s50_name: String_comparison_exp
  s50_on: bpchar_comparison_exp
  s60_name: String_comparison_exp
  s60_on: bpchar_comparison_exp
  workflow_id: float8_comparison_exp
}

"""
input type for incrementing integer column in table "workflow.stages"
"""
input workflow_stages_inc_input {
  workflow_id: float8
}

"""
input type for inserting data into table "workflow.stages"
"""
input workflow_stages_insert_input {
  s00_name: String
  s00_on: bpchar
  s10_name: String
  s10_on: bpchar
  s20_name: String
  s20_on: bpchar
  s30_name: String
  s30_on: bpchar
  s40_name: String
  s40_on: bpchar
  s50_name: String
  s50_on: bpchar
  s60_name: String
  s60_on: bpchar
  workflow_id: float8
}

"""
aggregate max on columns
"""
type workflow_stages_max_fields {
  s00_name: String
  s10_name: String
  s20_name: String
  s30_name: String
  s40_name: String
  s50_name: String
  s60_name: String
  workflow_id: float8
}

"""
order by max() on columns of table "workflow.stages"
"""
input workflow_stages_max_order_by {
  s00_name: order_by
  s10_name: order_by
  s20_name: order_by
  s30_name: order_by
  s40_name: order_by
  s50_name: order_by
  s60_name: order_by
  workflow_id: order_by
}

"""
aggregate min on columns
"""
type workflow_stages_min_fields {
  s00_name: String
  s10_name: String
  s20_name: String
  s30_name: String
  s40_name: String
  s50_name: String
  s60_name: String
  workflow_id: float8
}

"""
order by min() on columns of table "workflow.stages"
"""
input workflow_stages_min_order_by {
  s00_name: order_by
  s10_name: order_by
  s20_name: order_by
  s30_name: order_by
  s40_name: order_by
  s50_name: order_by
  s60_name: order_by
  workflow_id: order_by
}

"""
response of any mutation on the table "workflow.stages"
"""
type workflow_stages_mutation_response {
  """
  number of affected rows by the mutation
  """
  affected_rows: Int!

  """
  data of the affected rows by the mutation
  """
  returning: [workflow_stages!]!
}

"""
input type for inserting object relation for remote table "workflow.stages"
"""
input workflow_stages_obj_rel_insert_input {
  data: workflow_stages_insert_input!
}

"""
ordering options when selecting data from "workflow.stages"
"""
input workflow_stages_order_by {
  s00_name: order_by
  s00_on: order_by
  s10_name: order_by
  s10_on: order_by
  s20_name: order_by
  s20_on: order_by
  s30_name: order_by
  s30_on: order_by
  s40_name: order_by
  s40_on: order_by
  s50_name: order_by
  s50_on: order_by
  s60_name: order_by
  s60_on: order_by
  workflow_id: order_by
}

"""
select columns of table "workflow.stages"
"""
enum workflow_stages_select_column {
  """
  column name
  """
  s00_name

  """
  column name
  """
  s00_on

  """
  column name
  """
  s10_name

  """
  column name
  """
  s10_on

  """
  column name
  """
  s20_name

  """
  column name
  """
  s20_on

  """
  column name
  """
  s30_name

  """
  column name
  """
  s30_on

  """
  column name
  """
  s40_name

  """
  column name
  """
  s40_on

  """
  column name
  """
  s50_name

  """
  column name
  """
  s50_on

  """
  column name
  """
  s60_name

  """
  column name
  """
  s60_on

  """
  column name
  """
  workflow_id
}

"""
input type for updating data in table "workflow.stages"
"""
input workflow_stages_set_input {
  s00_name: String
  s00_on: bpchar
  s10_name: String
  s10_on: bpchar
  s20_name: String
  s20_on: bpchar
  s30_name: String
  s30_on: bpchar
  s40_name: String
  s40_on: bpchar
  s50_name: String
  s50_on: bpchar
  s60_name: String
  s60_on: bpchar
  workflow_id: float8
}

"""
aggregate stddev on columns
"""
type workflow_stages_stddev_fields {
  workflow_id: Float
}

"""
order by stddev() on columns of table "workflow.stages"
"""
input workflow_stages_stddev_order_by {
  workflow_id: order_by
}

"""
aggregate stddev_pop on columns
"""
type workflow_stages_stddev_pop_fields {
  workflow_id: Float
}

"""
order by stddev_pop() on columns of table "workflow.stages"
"""
input workflow_stages_stddev_pop_order_by {
  workflow_id: order_by
}

"""
aggregate stddev_samp on columns
"""
type workflow_stages_stddev_samp_fields {
  workflow_id: Float
}

"""
order by stddev_samp() on columns of table "workflow.stages"
"""
input workflow_stages_stddev_samp_order_by {
  workflow_id: order_by
}

"""
aggregate sum on columns
"""
type workflow_stages_sum_fields {
  workflow_id: float8
}

"""
order by sum() on columns of table "workflow.stages"
"""
input workflow_stages_sum_order_by {
  workflow_id: order_by
}

"""
aggregate var_pop on columns
"""
type workflow_stages_var_pop_fields {
  workflow_id: Float
}

"""
order by var_pop() on columns of table "workflow.stages"
"""
input workflow_stages_var_pop_order_by {
  workflow_id: order_by
}

"""
aggregate var_samp on columns
"""
type workflow_stages_var_samp_fields {
  workflow_id: Float
}

"""
order by var_samp() on columns of table "workflow.stages"
"""
input workflow_stages_var_samp_order_by {
  workflow_id: order_by
}

"""
aggregate variance on columns
"""
type workflow_stages_variance_fields {
  workflow_id: Float
}

"""
order by variance() on columns of table "workflow.stages"
"""
input workflow_stages_variance_order_by {
  workflow_id: order_by
}

"""
columns and relationships of "workflow.stamped_pages"
"""
type workflow_stamped_pages {
  doc_id: numeric
  pageno: numeric
}

"""
aggregated selection of "workflow.stamped_pages"
"""
type workflow_stamped_pages_aggregate {
  aggregate: workflow_stamped_pages_aggregate_fields
  nodes: [workflow_stamped_pages!]!
}

"""
aggregate fields of "workflow.stamped_pages"
"""
type workflow_stamped_pages_aggregate_fields {
  avg: workflow_stamped_pages_avg_fields
  count(columns: [workflow_stamped_pages_select_column!], distinct: Boolean): Int
  max: workflow_stamped_pages_max_fields
  min: workflow_stamped_pages_min_fields
  stddev: workflow_stamped_pages_stddev_fields
  stddev_pop: workflow_stamped_pages_stddev_pop_fields
  stddev_samp: workflow_stamped_pages_stddev_samp_fields
  sum: workflow_stamped_pages_sum_fields
  var_pop: workflow_stamped_pages_var_pop_fields
  var_samp: workflow_stamped_pages_var_samp_fields
  variance: workflow_stamped_pages_variance_fields
}

"""
order by aggregate values of table "workflow.stamped_pages"
"""
input workflow_stamped_pages_aggregate_order_by {
  avg: workflow_stamped_pages_avg_order_by
  count: order_by
  max: workflow_stamped_pages_max_order_by
  min: workflow_stamped_pages_min_order_by
  stddev: workflow_stamped_pages_stddev_order_by
  stddev_pop: workflow_stamped_pages_stddev_pop_order_by
  stddev_samp: workflow_stamped_pages_stddev_samp_order_by
  sum: workflow_stamped_pages_sum_order_by
  var_pop: workflow_stamped_pages_var_pop_order_by
  var_samp: workflow_stamped_pages_var_samp_order_by
  variance: workflow_stamped_pages_variance_order_by
}

"""
input type for inserting array relation for remote table "workflow.stamped_pages"
"""
input workflow_stamped_pages_arr_rel_insert_input {
  data: [workflow_stamped_pages_insert_input!]!
}

"""
aggregate avg on columns
"""
type workflow_stamped_pages_avg_fields {
  doc_id: Float
  pageno: Float
}

"""
order by avg() on columns of table "workflow.stamped_pages"
"""
input workflow_stamped_pages_avg_order_by {
  doc_id: order_by
  pageno: order_by
}

"""
Boolean expression to filter rows from the table "workflow.stamped_pages". All fields are combined with a logical 'AND'.
"""
input workflow_stamped_pages_bool_exp {
  _and: [workflow_stamped_pages_bool_exp]
  _not: workflow_stamped_pages_bool_exp
  _or: [workflow_stamped_pages_bool_exp]
  doc_id: numeric_comparison_exp
  pageno: numeric_comparison_exp
}

"""
input type for incrementing integer column in table "workflow.stamped_pages"
"""
input workflow_stamped_pages_inc_input {
  doc_id: numeric
  pageno: numeric
}

"""
input type for inserting data into table "workflow.stamped_pages"
"""
input workflow_stamped_pages_insert_input {
  doc_id: numeric
  pageno: numeric
}

"""
aggregate max on columns
"""
type workflow_stamped_pages_max_fields {
  doc_id: numeric
  pageno: numeric
}

"""
order by max() on columns of table "workflow.stamped_pages"
"""
input workflow_stamped_pages_max_order_by {
  doc_id: order_by
  pageno: order_by
}

"""
aggregate min on columns
"""
type workflow_stamped_pages_min_fields {
  doc_id: numeric
  pageno: numeric
}

"""
order by min() on columns of table "workflow.stamped_pages"
"""
input workflow_stamped_pages_min_order_by {
  doc_id: order_by
  pageno: order_by
}

"""
response of any mutation on the table "workflow.stamped_pages"
"""
type workflow_stamped_pages_mutation_response {
  """
  number of affected rows by the mutation
  """
  affected_rows: Int!

  """
  data of the affected rows by the mutation
  """
  returning: [workflow_stamped_pages!]!
}

"""
input type for inserting object relation for remote table "workflow.stamped_pages"
"""
input workflow_stamped_pages_obj_rel_insert_input {
  data: workflow_stamped_pages_insert_input!
}

"""
ordering options when selecting data from "workflow.stamped_pages"
"""
input workflow_stamped_pages_order_by {
  doc_id: order_by
  pageno: order_by
}

"""
select columns of table "workflow.stamped_pages"
"""
enum workflow_stamped_pages_select_column {
  """
  column name
  """
  doc_id

  """
  column name
  """
  pageno
}

"""
input type for updating data in table "workflow.stamped_pages"
"""
input workflow_stamped_pages_set_input {
  doc_id: numeric
  pageno: numeric
}

"""
aggregate stddev on columns
"""
type workflow_stamped_pages_stddev_fields {
  doc_id: Float
  pageno: Float
}

"""
order by stddev() on columns of table "workflow.stamped_pages"
"""
input workflow_stamped_pages_stddev_order_by {
  doc_id: order_by
  pageno: order_by
}

"""
aggregate stddev_pop on columns
"""
type workflow_stamped_pages_stddev_pop_fields {
  doc_id: Float
  pageno: Float
}

"""
order by stddev_pop() on columns of table "workflow.stamped_pages"
"""
input workflow_stamped_pages_stddev_pop_order_by {
  doc_id: order_by
  pageno: order_by
}

"""
aggregate stddev_samp on columns
"""
type workflow_stamped_pages_stddev_samp_fields {
  doc_id: Float
  pageno: Float
}

"""
order by stddev_samp() on columns of table "workflow.stamped_pages"
"""
input workflow_stamped_pages_stddev_samp_order_by {
  doc_id: order_by
  pageno: order_by
}

"""
aggregate sum on columns
"""
type workflow_stamped_pages_sum_fields {
  doc_id: numeric
  pageno: numeric
}

"""
order by sum() on columns of table "workflow.stamped_pages"
"""
input workflow_stamped_pages_sum_order_by {
  doc_id: order_by
  pageno: order_by
}

"""
aggregate var_pop on columns
"""
type workflow_stamped_pages_var_pop_fields {
  doc_id: Float
  pageno: Float
}

"""
order by var_pop() on columns of table "workflow.stamped_pages"
"""
input workflow_stamped_pages_var_pop_order_by {
  doc_id: order_by
  pageno: order_by
}

"""
aggregate var_samp on columns
"""
type workflow_stamped_pages_var_samp_fields {
  doc_id: Float
  pageno: Float
}

"""
order by var_samp() on columns of table "workflow.stamped_pages"
"""
input workflow_stamped_pages_var_samp_order_by {
  doc_id: order_by
  pageno: order_by
}

"""
aggregate variance on columns
"""
type workflow_stamped_pages_variance_fields {
  doc_id: Float
  pageno: Float
}

"""
order by variance() on columns of table "workflow.stamped_pages"
"""
input workflow_stamped_pages_variance_order_by {
  doc_id: order_by
  pageno: order_by
}

"""
columns and relationships of "workflow.users"
"""
type workflow_users {
  limit2assigned: bpchar
  limit2source: bpchar
  stage_id: float8
  user_id: String

  """
  An array relationship
  """
  users_workflows(
    """
    distinct select on columns
    """
    distinct_on: [workflow_workflow_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_workflow_order_by!]

    """
    filter the rows returned
    """
    where: workflow_workflow_bool_exp
  ): [workflow_workflow!]!

  """
  An aggregated array relationship
  """
  users_workflows_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_workflow_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_workflow_order_by!]

    """
    filter the rows returned
    """
    where: workflow_workflow_bool_exp
  ): workflow_workflow_aggregate!
  workflow_id: float8
}

"""
aggregated selection of "workflow.users"
"""
type workflow_users_aggregate {
  aggregate: workflow_users_aggregate_fields
  nodes: [workflow_users!]!
}

"""
aggregate fields of "workflow.users"
"""
type workflow_users_aggregate_fields {
  avg: workflow_users_avg_fields
  count(columns: [workflow_users_select_column!], distinct: Boolean): Int
  max: workflow_users_max_fields
  min: workflow_users_min_fields
  stddev: workflow_users_stddev_fields
  stddev_pop: workflow_users_stddev_pop_fields
  stddev_samp: workflow_users_stddev_samp_fields
  sum: workflow_users_sum_fields
  var_pop: workflow_users_var_pop_fields
  var_samp: workflow_users_var_samp_fields
  variance: workflow_users_variance_fields
}

"""
order by aggregate values of table "workflow.users"
"""
input workflow_users_aggregate_order_by {
  avg: workflow_users_avg_order_by
  count: order_by
  max: workflow_users_max_order_by
  min: workflow_users_min_order_by
  stddev: workflow_users_stddev_order_by
  stddev_pop: workflow_users_stddev_pop_order_by
  stddev_samp: workflow_users_stddev_samp_order_by
  sum: workflow_users_sum_order_by
  var_pop: workflow_users_var_pop_order_by
  var_samp: workflow_users_var_samp_order_by
  variance: workflow_users_variance_order_by
}

"""
input type for inserting array relation for remote table "workflow.users"
"""
input workflow_users_arr_rel_insert_input {
  data: [workflow_users_insert_input!]!
}

"""
aggregate avg on columns
"""
type workflow_users_avg_fields {
  stage_id: Float
  workflow_id: Float
}

"""
order by avg() on columns of table "workflow.users"
"""
input workflow_users_avg_order_by {
  stage_id: order_by
  workflow_id: order_by
}

"""
Boolean expression to filter rows from the table "workflow.users". All fields are combined with a logical 'AND'.
"""
input workflow_users_bool_exp {
  _and: [workflow_users_bool_exp]
  _not: workflow_users_bool_exp
  _or: [workflow_users_bool_exp]
  limit2assigned: bpchar_comparison_exp
  limit2source: bpchar_comparison_exp
  stage_id: float8_comparison_exp
  user_id: String_comparison_exp
  users_workflows: workflow_workflow_bool_exp
  workflow_id: float8_comparison_exp
}

"""
input type for incrementing integer column in table "workflow.users"
"""
input workflow_users_inc_input {
  stage_id: float8
  workflow_id: float8
}

"""
input type for inserting data into table "workflow.users"
"""
input workflow_users_insert_input {
  limit2assigned: bpchar
  limit2source: bpchar
  stage_id: float8
  user_id: String
  users_workflows: workflow_workflow_arr_rel_insert_input
  workflow_id: float8
}

"""
aggregate max on columns
"""
type workflow_users_max_fields {
  stage_id: float8
  user_id: String
  workflow_id: float8
}

"""
order by max() on columns of table "workflow.users"
"""
input workflow_users_max_order_by {
  stage_id: order_by
  user_id: order_by
  workflow_id: order_by
}

"""
aggregate min on columns
"""
type workflow_users_min_fields {
  stage_id: float8
  user_id: String
  workflow_id: float8
}

"""
order by min() on columns of table "workflow.users"
"""
input workflow_users_min_order_by {
  stage_id: order_by
  user_id: order_by
  workflow_id: order_by
}

"""
response of any mutation on the table "workflow.users"
"""
type workflow_users_mutation_response {
  """
  number of affected rows by the mutation
  """
  affected_rows: Int!

  """
  data of the affected rows by the mutation
  """
  returning: [workflow_users!]!
}

"""
input type for inserting object relation for remote table "workflow.users"
"""
input workflow_users_obj_rel_insert_input {
  data: workflow_users_insert_input!
}

"""
ordering options when selecting data from "workflow.users"
"""
input workflow_users_order_by {
  limit2assigned: order_by
  limit2source: order_by
  stage_id: order_by
  user_id: order_by
  users_workflows_aggregate: workflow_workflow_aggregate_order_by
  workflow_id: order_by
}

"""
select columns of table "workflow.users"
"""
enum workflow_users_select_column {
  """
  column name
  """
  limit2assigned

  """
  column name
  """
  limit2source

  """
  column name
  """
  stage_id

  """
  column name
  """
  user_id

  """
  column name
  """
  workflow_id
}

"""
input type for updating data in table "workflow.users"
"""
input workflow_users_set_input {
  limit2assigned: bpchar
  limit2source: bpchar
  stage_id: float8
  user_id: String
  workflow_id: float8
}

"""
aggregate stddev on columns
"""
type workflow_users_stddev_fields {
  stage_id: Float
  workflow_id: Float
}

"""
order by stddev() on columns of table "workflow.users"
"""
input workflow_users_stddev_order_by {
  stage_id: order_by
  workflow_id: order_by
}

"""
aggregate stddev_pop on columns
"""
type workflow_users_stddev_pop_fields {
  stage_id: Float
  workflow_id: Float
}

"""
order by stddev_pop() on columns of table "workflow.users"
"""
input workflow_users_stddev_pop_order_by {
  stage_id: order_by
  workflow_id: order_by
}

"""
aggregate stddev_samp on columns
"""
type workflow_users_stddev_samp_fields {
  stage_id: Float
  workflow_id: Float
}

"""
order by stddev_samp() on columns of table "workflow.users"
"""
input workflow_users_stddev_samp_order_by {
  stage_id: order_by
  workflow_id: order_by
}

"""
aggregate sum on columns
"""
type workflow_users_sum_fields {
  stage_id: float8
  workflow_id: float8
}

"""
order by sum() on columns of table "workflow.users"
"""
input workflow_users_sum_order_by {
  stage_id: order_by
  workflow_id: order_by
}

"""
aggregate var_pop on columns
"""
type workflow_users_var_pop_fields {
  stage_id: Float
  workflow_id: Float
}

"""
order by var_pop() on columns of table "workflow.users"
"""
input workflow_users_var_pop_order_by {
  stage_id: order_by
  workflow_id: order_by
}

"""
aggregate var_samp on columns
"""
type workflow_users_var_samp_fields {
  stage_id: Float
  workflow_id: Float
}

"""
order by var_samp() on columns of table "workflow.users"
"""
input workflow_users_var_samp_order_by {
  stage_id: order_by
  workflow_id: order_by
}

"""
aggregate variance on columns
"""
type workflow_users_variance_fields {
  stage_id: Float
  workflow_id: Float
}

"""
order by variance() on columns of table "workflow.users"
"""
input workflow_users_variance_order_by {
  stage_id: order_by
  workflow_id: order_by
}

"""
columns and relationships of "workflow.workflow"
"""
type workflow_workflow {
  COMMENTS: String
  ID: float8!
  NAME: String
  active: bpchar
  app_form_id: float8
  app_form_mode: String
  application_id: float8
  decision_box_read_only: bpchar
  decision_box_visible: bpchar
  ignore_fields: bpchar
  ignore_text: bpchar
  package_mode: bpchar
  qa_enabled: bpchar
  redaction_enabled: bpchar
  redaction_path: String
  stamp_path: String

  """
  An array relationship
  """
  user_workflows(
    """
    distinct select on columns
    """
    distinct_on: [workflow_users_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_users_order_by!]

    """
    filter the rows returned
    """
    where: workflow_users_bool_exp
  ): [workflow_users!]!

  """
  An aggregated array relationship
  """
  user_workflows_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_users_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_users_order_by!]

    """
    filter the rows returned
    """
    where: workflow_users_bool_exp
  ): workflow_users_aggregate!

  """
  An array relationship
  """
  workflow_documents(
    """
    distinct select on columns
    """
    distinct_on: [workflow_documents_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_documents_order_by!]

    """
    filter the rows returned
    """
    where: workflow_documents_bool_exp
  ): [workflow_documents!]!

  """
  An aggregated array relationship
  """
  workflow_documents_aggregate(
    """
    distinct select on columns
    """
    distinct_on: [workflow_documents_select_column!]

    """
    limit the number of rows returned
    """
    limit: Int

    """
    skip the first n rows. Use only with order_by
    """
    offset: Int

    """
    sort the rows by one or more columns
    """
    order_by: [workflow_documents_order_by!]

    """
    filter the rows returned
    """
    where: workflow_documents_bool_exp
  ): workflow_documents_aggregate!
}

"""
aggregated selection of "workflow.workflow"
"""
type workflow_workflow_aggregate {
  aggregate: workflow_workflow_aggregate_fields
  nodes: [workflow_workflow!]!
}

"""
aggregate fields of "workflow.workflow"
"""
type workflow_workflow_aggregate_fields {
  avg: workflow_workflow_avg_fields
  count(columns: [workflow_workflow_select_column!], distinct: Boolean): Int
  max: workflow_workflow_max_fields
  min: workflow_workflow_min_fields
  stddev: workflow_workflow_stddev_fields
  stddev_pop: workflow_workflow_stddev_pop_fields
  stddev_samp: workflow_workflow_stddev_samp_fields
  sum: workflow_workflow_sum_fields
  var_pop: workflow_workflow_var_pop_fields
  var_samp: workflow_workflow_var_samp_fields
  variance: workflow_workflow_variance_fields
}

"""
order by aggregate values of table "workflow.workflow"
"""
input workflow_workflow_aggregate_order_by {
  avg: workflow_workflow_avg_order_by
  count: order_by
  max: workflow_workflow_max_order_by
  min: workflow_workflow_min_order_by
  stddev: workflow_workflow_stddev_order_by
  stddev_pop: workflow_workflow_stddev_pop_order_by
  stddev_samp: workflow_workflow_stddev_samp_order_by
  sum: workflow_workflow_sum_order_by
  var_pop: workflow_workflow_var_pop_order_by
  var_samp: workflow_workflow_var_samp_order_by
  variance: workflow_workflow_variance_order_by
}

"""
input type for inserting array relation for remote table "workflow.workflow"
"""
input workflow_workflow_arr_rel_insert_input {
  data: [workflow_workflow_insert_input!]!
  on_conflict: workflow_workflow_on_conflict
}

"""
aggregate avg on columns
"""
type workflow_workflow_avg_fields {
  ID: Float
  app_form_id: Float
  application_id: Float
}

"""
order by avg() on columns of table "workflow.workflow"
"""
input workflow_workflow_avg_order_by {
  ID: order_by
  app_form_id: order_by
  application_id: order_by
}

"""
Boolean expression to filter rows from the table "workflow.workflow". All fields are combined with a logical 'AND'.
"""
input workflow_workflow_bool_exp {
  COMMENTS: String_comparison_exp
  ID: float8_comparison_exp
  NAME: String_comparison_exp
  _and: [workflow_workflow_bool_exp]
  _not: workflow_workflow_bool_exp
  _or: [workflow_workflow_bool_exp]
  active: bpchar_comparison_exp
  app_form_id: float8_comparison_exp
  app_form_mode: String_comparison_exp
  application_id: float8_comparison_exp
  decision_box_read_only: bpchar_comparison_exp
  decision_box_visible: bpchar_comparison_exp
  ignore_fields: bpchar_comparison_exp
  ignore_text: bpchar_comparison_exp
  package_mode: bpchar_comparison_exp
  qa_enabled: bpchar_comparison_exp
  redaction_enabled: bpchar_comparison_exp
  redaction_path: String_comparison_exp
  stamp_path: String_comparison_exp
  user_workflows: workflow_users_bool_exp
  workflow_documents: workflow_documents_bool_exp
}

"""
unique or primary key constraints on table "workflow.workflow"
"""
enum workflow_workflow_constraint {
  """
  unique or primary key constraint
  """
  workflow_pkey
}

"""
columns and relationships of "workflow.workflow_decision"
"""
type workflow_workflow_decision {
  NAME: String
  alert_check: float8
  alert_radio: float8
  check1: String
  check10: String
  check10_parent: float8
  check11: String
  check11_parent: float8
  check12: String
  check12_parent: float8
  check13: String
  check13_parent: float8
  check14: String
  check14_parent: float8
  check15: String
  check15_parent: float8
  check1_parent: float8
  check2: String
  check2_parent: float8
  check3: String
  check3_parent: float8
  check4: String
  check4_parent: float8
  check5: String
  check5_parent: float8
  check6: String
  check6_parent: float8
  check7: String
  check7_parent: float8
  check8: String
  check8_parent: float8
  check9: String
  check9_parent: float8
  default_radio: float8
  edit_field_name: String
  edit_field_reguired: bpchar
  hide_unknown: bpchar
  radio1: String
  radio10: String
  radio2: String
  radio3: String
  radio4: String
  radio5: String
  radio6: String
  radio7: String
  radio8: String
  radio9: String
  workflow_id: float8
}

"""
aggregated selection of "workflow.workflow_decision"
"""
type workflow_workflow_decision_aggregate {
  aggregate: workflow_workflow_decision_aggregate_fields
  nodes: [workflow_workflow_decision!]!
}

"""
aggregate fields of "workflow.workflow_decision"
"""
type workflow_workflow_decision_aggregate_fields {
  avg: workflow_workflow_decision_avg_fields
  count(columns: [workflow_workflow_decision_select_column!], distinct: Boolean): Int
  max: workflow_workflow_decision_max_fields
  min: workflow_workflow_decision_min_fields
  stddev: workflow_workflow_decision_stddev_fields
  stddev_pop: workflow_workflow_decision_stddev_pop_fields
  stddev_samp: workflow_workflow_decision_stddev_samp_fields
  sum: workflow_workflow_decision_sum_fields
  var_pop: workflow_workflow_decision_var_pop_fields
  var_samp: workflow_workflow_decision_var_samp_fields
  variance: workflow_workflow_decision_variance_fields
}

"""
order by aggregate values of table "workflow.workflow_decision"
"""
input workflow_workflow_decision_aggregate_order_by {
  avg: workflow_workflow_decision_avg_order_by
  count: order_by
  max: workflow_workflow_decision_max_order_by
  min: workflow_workflow_decision_min_order_by
  stddev: workflow_workflow_decision_stddev_order_by
  stddev_pop: workflow_workflow_decision_stddev_pop_order_by
  stddev_samp: workflow_workflow_decision_stddev_samp_order_by
  sum: workflow_workflow_decision_sum_order_by
  var_pop: workflow_workflow_decision_var_pop_order_by
  var_samp: workflow_workflow_decision_var_samp_order_by
  variance: workflow_workflow_decision_variance_order_by
}

"""
input type for inserting array relation for remote table "workflow.workflow_decision"
"""
input workflow_workflow_decision_arr_rel_insert_input {
  data: [workflow_workflow_decision_insert_input!]!
}

"""
aggregate avg on columns
"""
type workflow_workflow_decision_avg_fields {
  alert_check: Float
  alert_radio: Float
  check10_parent: Float
  check11_parent: Float
  check12_parent: Float
  check13_parent: Float
  check14_parent: Float
  check15_parent: Float
  check1_parent: Float
  check2_parent: Float
  check3_parent: Float
  check4_parent: Float
  check5_parent: Float
  check6_parent: Float
  check7_parent: Float
  check8_parent: Float
  check9_parent: Float
  default_radio: Float
  workflow_id: Float
}

"""
order by avg() on columns of table "workflow.workflow_decision"
"""
input workflow_workflow_decision_avg_order_by {
  alert_check: order_by
  alert_radio: order_by
  check10_parent: order_by
  check11_parent: order_by
  check12_parent: order_by
  check13_parent: order_by
  check14_parent: order_by
  check15_parent: order_by
  check1_parent: order_by
  check2_parent: order_by
  check3_parent: order_by
  check4_parent: order_by
  check5_parent: order_by
  check6_parent: order_by
  check7_parent: order_by
  check8_parent: order_by
  check9_parent: order_by
  default_radio: order_by
  workflow_id: order_by
}

"""
Boolean expression to filter rows from the table "workflow.workflow_decision". All fields are combined with a logical 'AND'.
"""
input workflow_workflow_decision_bool_exp {
  NAME: String_comparison_exp
  _and: [workflow_workflow_decision_bool_exp]
  _not: workflow_workflow_decision_bool_exp
  _or: [workflow_workflow_decision_bool_exp]
  alert_check: float8_comparison_exp
  alert_radio: float8_comparison_exp
  check1: String_comparison_exp
  check10: String_comparison_exp
  check10_parent: float8_comparison_exp
  check11: String_comparison_exp
  check11_parent: float8_comparison_exp
  check12: String_comparison_exp
  check12_parent: float8_comparison_exp
  check13: String_comparison_exp
  check13_parent: float8_comparison_exp
  check14: String_comparison_exp
  check14_parent: float8_comparison_exp
  check15: String_comparison_exp
  check15_parent: float8_comparison_exp
  check1_parent: float8_comparison_exp
  check2: String_comparison_exp
  check2_parent: float8_comparison_exp
  check3: String_comparison_exp
  check3_parent: float8_comparison_exp
  check4: String_comparison_exp
  check4_parent: float8_comparison_exp
  check5: String_comparison_exp
  check5_parent: float8_comparison_exp
  check6: String_comparison_exp
  check6_parent: float8_comparison_exp
  check7: String_comparison_exp
  check7_parent: float8_comparison_exp
  check8: String_comparison_exp
  check8_parent: float8_comparison_exp
  check9: String_comparison_exp
  check9_parent: float8_comparison_exp
  default_radio: float8_comparison_exp
  edit_field_name: String_comparison_exp
  edit_field_reguired: bpchar_comparison_exp
  hide_unknown: bpchar_comparison_exp
  radio1: String_comparison_exp
  radio10: String_comparison_exp
  radio2: String_comparison_exp
  radio3: String_comparison_exp
  radio4: String_comparison_exp
  radio5: String_comparison_exp
  radio6: String_comparison_exp
  radio7: String_comparison_exp
  radio8: String_comparison_exp
  radio9: String_comparison_exp
  workflow_id: float8_comparison_exp
}

"""
input type for incrementing integer column in table "workflow.workflow_decision"
"""
input workflow_workflow_decision_inc_input {
  alert_check: float8
  alert_radio: float8
  check10_parent: float8
  check11_parent: float8
  check12_parent: float8
  check13_parent: float8
  check14_parent: float8
  check15_parent: float8
  check1_parent: float8
  check2_parent: float8
  check3_parent: float8
  check4_parent: float8
  check5_parent: float8
  check6_parent: float8
  check7_parent: float8
  check8_parent: float8
  check9_parent: float8
  default_radio: float8
  workflow_id: float8
}

"""
input type for inserting data into table "workflow.workflow_decision"
"""
input workflow_workflow_decision_insert_input {
  NAME: String
  alert_check: float8
  alert_radio: float8
  check1: String
  check10: String
  check10_parent: float8
  check11: String
  check11_parent: float8
  check12: String
  check12_parent: float8
  check13: String
  check13_parent: float8
  check14: String
  check14_parent: float8
  check15: String
  check15_parent: float8
  check1_parent: float8
  check2: String
  check2_parent: float8
  check3: String
  check3_parent: float8
  check4: String
  check4_parent: float8
  check5: String
  check5_parent: float8
  check6: String
  check6_parent: float8
  check7: String
  check7_parent: float8
  check8: String
  check8_parent: float8
  check9: String
  check9_parent: float8
  default_radio: float8
  edit_field_name: String
  edit_field_reguired: bpchar
  hide_unknown: bpchar
  radio1: String
  radio10: String
  radio2: String
  radio3: String
  radio4: String
  radio5: String
  radio6: String
  radio7: String
  radio8: String
  radio9: String
  workflow_id: float8
}

"""
aggregate max on columns
"""
type workflow_workflow_decision_max_fields {
  NAME: String
  alert_check: float8
  alert_radio: float8
  check1: String
  check10: String
  check10_parent: float8
  check11: String
  check11_parent: float8
  check12: String
  check12_parent: float8
  check13: String
  check13_parent: float8
  check14: String
  check14_parent: float8
  check15: String
  check15_parent: float8
  check1_parent: float8
  check2: String
  check2_parent: float8
  check3: String
  check3_parent: float8
  check4: String
  check4_parent: float8
  check5: String
  check5_parent: float8
  check6: String
  check6_parent: float8
  check7: String
  check7_parent: float8
  check8: String
  check8_parent: float8
  check9: String
  check9_parent: float8
  default_radio: float8
  edit_field_name: String
  radio1: String
  radio10: String
  radio2: String
  radio3: String
  radio4: String
  radio5: String
  radio6: String
  radio7: String
  radio8: String
  radio9: String
  workflow_id: float8
}

"""
order by max() on columns of table "workflow.workflow_decision"
"""
input workflow_workflow_decision_max_order_by {
  NAME: order_by
  alert_check: order_by
  alert_radio: order_by
  check1: order_by
  check10: order_by
  check10_parent: order_by
  check11: order_by
  check11_parent: order_by
  check12: order_by
  check12_parent: order_by
  check13: order_by
  check13_parent: order_by
  check14: order_by
  check14_parent: order_by
  check15: order_by
  check15_parent: order_by
  check1_parent: order_by
  check2: order_by
  check2_parent: order_by
  check3: order_by
  check3_parent: order_by
  check4: order_by
  check4_parent: order_by
  check5: order_by
  check5_parent: order_by
  check6: order_by
  check6_parent: order_by
  check7: order_by
  check7_parent: order_by
  check8: order_by
  check8_parent: order_by
  check9: order_by
  check9_parent: order_by
  default_radio: order_by
  edit_field_name: order_by
  radio1: order_by
  radio10: order_by
  radio2: order_by
  radio3: order_by
  radio4: order_by
  radio5: order_by
  radio6: order_by
  radio7: order_by
  radio8: order_by
  radio9: order_by
  workflow_id: order_by
}

"""
aggregate min on columns
"""
type workflow_workflow_decision_min_fields {
  NAME: String
  alert_check: float8
  alert_radio: float8
  check1: String
  check10: String
  check10_parent: float8
  check11: String
  check11_parent: float8
  check12: String
  check12_parent: float8
  check13: String
  check13_parent: float8
  check14: String
  check14_parent: float8
  check15: String
  check15_parent: float8
  check1_parent: float8
  check2: String
  check2_parent: float8
  check3: String
  check3_parent: float8
  check4: String
  check4_parent: float8
  check5: String
  check5_parent: float8
  check6: String
  check6_parent: float8
  check7: String
  check7_parent: float8
  check8: String
  check8_parent: float8
  check9: String
  check9_parent: float8
  default_radio: float8
  edit_field_name: String
  radio1: String
  radio10: String
  radio2: String
  radio3: String
  radio4: String
  radio5: String
  radio6: String
  radio7: String
  radio8: String
  radio9: String
  workflow_id: float8
}

"""
order by min() on columns of table "workflow.workflow_decision"
"""
input workflow_workflow_decision_min_order_by {
  NAME: order_by
  alert_check: order_by
  alert_radio: order_by
  check1: order_by
  check10: order_by
  check10_parent: order_by
  check11: order_by
  check11_parent: order_by
  check12: order_by
  check12_parent: order_by
  check13: order_by
  check13_parent: order_by
  check14: order_by
  check14_parent: order_by
  check15: order_by
  check15_parent: order_by
  check1_parent: order_by
  check2: order_by
  check2_parent: order_by
  check3: order_by
  check3_parent: order_by
  check4: order_by
  check4_parent: order_by
  check5: order_by
  check5_parent: order_by
  check6: order_by
  check6_parent: order_by
  check7: order_by
  check7_parent: order_by
  check8: order_by
  check8_parent: order_by
  check9: order_by
  check9_parent: order_by
  default_radio: order_by
  edit_field_name: order_by
  radio1: order_by
  radio10: order_by
  radio2: order_by
  radio3: order_by
  radio4: order_by
  radio5: order_by
  radio6: order_by
  radio7: order_by
  radio8: order_by
  radio9: order_by
  workflow_id: order_by
}

"""
response of any mutation on the table "workflow.workflow_decision"
"""
type workflow_workflow_decision_mutation_response {
  """
  number of affected rows by the mutation
  """
  affected_rows: Int!

  """
  data of the affected rows by the mutation
  """
  returning: [workflow_workflow_decision!]!
}

"""
input type for inserting object relation for remote table "workflow.workflow_decision"
"""
input workflow_workflow_decision_obj_rel_insert_input {
  data: workflow_workflow_decision_insert_input!
}

"""
ordering options when selecting data from "workflow.workflow_decision"
"""
input workflow_workflow_decision_order_by {
  NAME: order_by
  alert_check: order_by
  alert_radio: order_by
  check1: order_by
  check10: order_by
  check10_parent: order_by
  check11: order_by
  check11_parent: order_by
  check12: order_by
  check12_parent: order_by
  check13: order_by
  check13_parent: order_by
  check14: order_by
  check14_parent: order_by
  check15: order_by
  check15_parent: order_by
  check1_parent: order_by
  check2: order_by
  check2_parent: order_by
  check3: order_by
  check3_parent: order_by
  check4: order_by
  check4_parent: order_by
  check5: order_by
  check5_parent: order_by
  check6: order_by
  check6_parent: order_by
  check7: order_by
  check7_parent: order_by
  check8: order_by
  check8_parent: order_by
  check9: order_by
  check9_parent: order_by
  default_radio: order_by
  edit_field_name: order_by
  edit_field_reguired: order_by
  hide_unknown: order_by
  radio1: order_by
  radio10: order_by
  radio2: order_by
  radio3: order_by
  radio4: order_by
  radio5: order_by
  radio6: order_by
  radio7: order_by
  radio8: order_by
  radio9: order_by
  workflow_id: order_by
}

"""
select columns of table "workflow.workflow_decision"
"""
enum workflow_workflow_decision_select_column {
  """
  column name
  """
  NAME

  """
  column name
  """
  alert_check

  """
  column name
  """
  alert_radio

  """
  column name
  """
  check1

  """
  column name
  """
  check10

  """
  column name
  """
  check10_parent

  """
  column name
  """
  check11

  """
  column name
  """
  check11_parent

  """
  column name
  """
  check12

  """
  column name
  """
  check12_parent

  """
  column name
  """
  check13

  """
  column name
  """
  check13_parent

  """
  column name
  """
  check14

  """
  column name
  """
  check14_parent

  """
  column name
  """
  check15

  """
  column name
  """
  check15_parent

  """
  column name
  """
  check1_parent

  """
  column name
  """
  check2

  """
  column name
  """
  check2_parent

  """
  column name
  """
  check3

  """
  column name
  """
  check3_parent

  """
  column name
  """
  check4

  """
  column name
  """
  check4_parent

  """
  column name
  """
  check5

  """
  column name
  """
  check5_parent

  """
  column name
  """
  check6

  """
  column name
  """
  check6_parent

  """
  column name
  """
  check7

  """
  column name
  """
  check7_parent

  """
  column name
  """
  check8

  """
  column name
  """
  check8_parent

  """
  column name
  """
  check9

  """
  column name
  """
  check9_parent

  """
  column name
  """
  default_radio

  """
  column name
  """
  edit_field_name

  """
  column name
  """
  edit_field_reguired

  """
  column name
  """
  hide_unknown

  """
  column name
  """
  radio1

  """
  column name
  """
  radio10

  """
  column name
  """
  radio2

  """
  column name
  """
  radio3

  """
  column name
  """
  radio4

  """
  column name
  """
  radio5

  """
  column name
  """
  radio6

  """
  column name
  """
  radio7

  """
  column name
  """
  radio8

  """
  column name
  """
  radio9

  """
  column name
  """
  workflow_id
}

"""
input type for updating data in table "workflow.workflow_decision"
"""
input workflow_workflow_decision_set_input {
  NAME: String
  alert_check: float8
  alert_radio: float8
  check1: String
  check10: String
  check10_parent: float8
  check11: String
  check11_parent: float8
  check12: String
  check12_parent: float8
  check13: String
  check13_parent: float8
  check14: String
  check14_parent: float8
  check15: String
  check15_parent: float8
  check1_parent: float8
  check2: String
  check2_parent: float8
  check3: String
  check3_parent: float8
  check4: String
  check4_parent: float8
  check5: String
  check5_parent: float8
  check6: String
  check6_parent: float8
  check7: String
  check7_parent: float8
  check8: String
  check8_parent: float8
  check9: String
  check9_parent: float8
  default_radio: float8
  edit_field_name: String
  edit_field_reguired: bpchar
  hide_unknown: bpchar
  radio1: String
  radio10: String
  radio2: String
  radio3: String
  radio4: String
  radio5: String
  radio6: String
  radio7: String
  radio8: String
  radio9: String
  workflow_id: float8
}

"""
aggregate stddev on columns
"""
type workflow_workflow_decision_stddev_fields {
  alert_check: Float
  alert_radio: Float
  check10_parent: Float
  check11_parent: Float
  check12_parent: Float
  check13_parent: Float
  check14_parent: Float
  check15_parent: Float
  check1_parent: Float
  check2_parent: Float
  check3_parent: Float
  check4_parent: Float
  check5_parent: Float
  check6_parent: Float
  check7_parent: Float
  check8_parent: Float
  check9_parent: Float
  default_radio: Float
  workflow_id: Float
}

"""
order by stddev() on columns of table "workflow.workflow_decision"
"""
input workflow_workflow_decision_stddev_order_by {
  alert_check: order_by
  alert_radio: order_by
  check10_parent: order_by
  check11_parent: order_by
  check12_parent: order_by
  check13_parent: order_by
  check14_parent: order_by
  check15_parent: order_by
  check1_parent: order_by
  check2_parent: order_by
  check3_parent: order_by
  check4_parent: order_by
  check5_parent: order_by
  check6_parent: order_by
  check7_parent: order_by
  check8_parent: order_by
  check9_parent: order_by
  default_radio: order_by
  workflow_id: order_by
}

"""
aggregate stddev_pop on columns
"""
type workflow_workflow_decision_stddev_pop_fields {
  alert_check: Float
  alert_radio: Float
  check10_parent: Float
  check11_parent: Float
  check12_parent: Float
  check13_parent: Float
  check14_parent: Float
  check15_parent: Float
  check1_parent: Float
  check2_parent: Float
  check3_parent: Float
  check4_parent: Float
  check5_parent: Float
  check6_parent: Float
  check7_parent: Float
  check8_parent: Float
  check9_parent: Float
  default_radio: Float
  workflow_id: Float
}

"""
order by stddev_pop() on columns of table "workflow.workflow_decision"
"""
input workflow_workflow_decision_stddev_pop_order_by {
  alert_check: order_by
  alert_radio: order_by
  check10_parent: order_by
  check11_parent: order_by
  check12_parent: order_by
  check13_parent: order_by
  check14_parent: order_by
  check15_parent: order_by
  check1_parent: order_by
  check2_parent: order_by
  check3_parent: order_by
  check4_parent: order_by
  check5_parent: order_by
  check6_parent: order_by
  check7_parent: order_by
  check8_parent: order_by
  check9_parent: order_by
  default_radio: order_by
  workflow_id: order_by
}

"""
aggregate stddev_samp on columns
"""
type workflow_workflow_decision_stddev_samp_fields {
  alert_check: Float
  alert_radio: Float
  check10_parent: Float
  check11_parent: Float
  check12_parent: Float
  check13_parent: Float
  check14_parent: Float
  check15_parent: Float
  check1_parent: Float
  check2_parent: Float
  check3_parent: Float
  check4_parent: Float
  check5_parent: Float
  check6_parent: Float
  check7_parent: Float
  check8_parent: Float
  check9_parent: Float
  default_radio: Float
  workflow_id: Float
}

"""
order by stddev_samp() on columns of table "workflow.workflow_decision"
"""
input workflow_workflow_decision_stddev_samp_order_by {
  alert_check: order_by
  alert_radio: order_by
  check10_parent: order_by
  check11_parent: order_by
  check12_parent: order_by
  check13_parent: order_by
  check14_parent: order_by
  check15_parent: order_by
  check1_parent: order_by
  check2_parent: order_by
  check3_parent: order_by
  check4_parent: order_by
  check5_parent: order_by
  check6_parent: order_by
  check7_parent: order_by
  check8_parent: order_by
  check9_parent: order_by
  default_radio: order_by
  workflow_id: order_by
}

"""
aggregate sum on columns
"""
type workflow_workflow_decision_sum_fields {
  alert_check: float8
  alert_radio: float8
  check10_parent: float8
  check11_parent: float8
  check12_parent: float8
  check13_parent: float8
  check14_parent: float8
  check15_parent: float8
  check1_parent: float8
  check2_parent: float8
  check3_parent: float8
  check4_parent: float8
  check5_parent: float8
  check6_parent: float8
  check7_parent: float8
  check8_parent: float8
  check9_parent: float8
  default_radio: float8
  workflow_id: float8
}

"""
order by sum() on columns of table "workflow.workflow_decision"
"""
input workflow_workflow_decision_sum_order_by {
  alert_check: order_by
  alert_radio: order_by
  check10_parent: order_by
  check11_parent: order_by
  check12_parent: order_by
  check13_parent: order_by
  check14_parent: order_by
  check15_parent: order_by
  check1_parent: order_by
  check2_parent: order_by
  check3_parent: order_by
  check4_parent: order_by
  check5_parent: order_by
  check6_parent: order_by
  check7_parent: order_by
  check8_parent: order_by
  check9_parent: order_by
  default_radio: order_by
  workflow_id: order_by
}

"""
aggregate var_pop on columns
"""
type workflow_workflow_decision_var_pop_fields {
  alert_check: Float
  alert_radio: Float
  check10_parent: Float
  check11_parent: Float
  check12_parent: Float
  check13_parent: Float
  check14_parent: Float
  check15_parent: Float
  check1_parent: Float
  check2_parent: Float
  check3_parent: Float
  check4_parent: Float
  check5_parent: Float
  check6_parent: Float
  check7_parent: Float
  check8_parent: Float
  check9_parent: Float
  default_radio: Float
  workflow_id: Float
}

"""
order by var_pop() on columns of table "workflow.workflow_decision"
"""
input workflow_workflow_decision_var_pop_order_by {
  alert_check: order_by
  alert_radio: order_by
  check10_parent: order_by
  check11_parent: order_by
  check12_parent: order_by
  check13_parent: order_by
  check14_parent: order_by
  check15_parent: order_by
  check1_parent: order_by
  check2_parent: order_by
  check3_parent: order_by
  check4_parent: order_by
  check5_parent: order_by
  check6_parent: order_by
  check7_parent: order_by
  check8_parent: order_by
  check9_parent: order_by
  default_radio: order_by
  workflow_id: order_by
}

"""
aggregate var_samp on columns
"""
type workflow_workflow_decision_var_samp_fields {
  alert_check: Float
  alert_radio: Float
  check10_parent: Float
  check11_parent: Float
  check12_parent: Float
  check13_parent: Float
  check14_parent: Float
  check15_parent: Float
  check1_parent: Float
  check2_parent: Float
  check3_parent: Float
  check4_parent: Float
  check5_parent: Float
  check6_parent: Float
  check7_parent: Float
  check8_parent: Float
  check9_parent: Float
  default_radio: Float
  workflow_id: Float
}

"""
order by var_samp() on columns of table "workflow.workflow_decision"
"""
input workflow_workflow_decision_var_samp_order_by {
  alert_check: order_by
  alert_radio: order_by
  check10_parent: order_by
  check11_parent: order_by
  check12_parent: order_by
  check13_parent: order_by
  check14_parent: order_by
  check15_parent: order_by
  check1_parent: order_by
  check2_parent: order_by
  check3_parent: order_by
  check4_parent: order_by
  check5_parent: order_by
  check6_parent: order_by
  check7_parent: order_by
  check8_parent: order_by
  check9_parent: order_by
  default_radio: order_by
  workflow_id: order_by
}

"""
aggregate variance on columns
"""
type workflow_workflow_decision_variance_fields {
  alert_check: Float
  alert_radio: Float
  check10_parent: Float
  check11_parent: Float
  check12_parent: Float
  check13_parent: Float
  check14_parent: Float
  check15_parent: Float
  check1_parent: Float
  check2_parent: Float
  check3_parent: Float
  check4_parent: Float
  check5_parent: Float
  check6_parent: Float
  check7_parent: Float
  check8_parent: Float
  check9_parent: Float
  default_radio: Float
  workflow_id: Float
}

"""
order by variance() on columns of table "workflow.workflow_decision"
"""
input workflow_workflow_decision_variance_order_by {
  alert_check: order_by
  alert_radio: order_by
  check10_parent: order_by
  check11_parent: order_by
  check12_parent: order_by
  check13_parent: order_by
  check14_parent: order_by
  check15_parent: order_by
  check1_parent: order_by
  check2_parent: order_by
  check3_parent: order_by
  check4_parent: order_by
  check5_parent: order_by
  check6_parent: order_by
  check7_parent: order_by
  check8_parent: order_by
  check9_parent: order_by
  default_radio: order_by
  workflow_id: order_by
}

"""
input type for incrementing integer column in table "workflow.workflow"
"""
input workflow_workflow_inc_input {
  ID: float8
  app_form_id: float8
  application_id: float8
}

"""
input type for inserting data into table "workflow.workflow"
"""
input workflow_workflow_insert_input {
  COMMENTS: String
  ID: float8
  NAME: String
  active: bpchar
  app_form_id: float8
  app_form_mode: String
  application_id: float8
  decision_box_read_only: bpchar
  decision_box_visible: bpchar
  ignore_fields: bpchar
  ignore_text: bpchar
  package_mode: bpchar
  qa_enabled: bpchar
  redaction_enabled: bpchar
  redaction_path: String
  stamp_path: String
  user_workflows: workflow_users_arr_rel_insert_input
  workflow_documents: workflow_documents_arr_rel_insert_input
}

"""
aggregate max on columns
"""
type workflow_workflow_max_fields {
  COMMENTS: String
  ID: float8
  NAME: String
  app_form_id: float8
  app_form_mode: String
  application_id: float8
  redaction_path: String
  stamp_path: String
}

"""
order by max() on columns of table "workflow.workflow"
"""
input workflow_workflow_max_order_by {
  COMMENTS: order_by
  ID: order_by
  NAME: order_by
  app_form_id: order_by
  app_form_mode: order_by
  application_id: order_by
  redaction_path: order_by
  stamp_path: order_by
}

"""
aggregate min on columns
"""
type workflow_workflow_min_fields {
  COMMENTS: String
  ID: float8
  NAME: String
  app_form_id: float8
  app_form_mode: String
  application_id: float8
  redaction_path: String
  stamp_path: String
}

"""
order by min() on columns of table "workflow.workflow"
"""
input workflow_workflow_min_order_by {
  COMMENTS: order_by
  ID: order_by
  NAME: order_by
  app_form_id: order_by
  app_form_mode: order_by
  application_id: order_by
  redaction_path: order_by
  stamp_path: order_by
}

"""
response of any mutation on the table "workflow.workflow"
"""
type workflow_workflow_mutation_response {
  """
  number of affected rows by the mutation
  """
  affected_rows: Int!

  """
  data of the affected rows by the mutation
  """
  returning: [workflow_workflow!]!
}

"""
input type for inserting object relation for remote table "workflow.workflow"
"""
input workflow_workflow_obj_rel_insert_input {
  data: workflow_workflow_insert_input!
  on_conflict: workflow_workflow_on_conflict
}

"""
on conflict condition type for table "workflow.workflow"
"""
input workflow_workflow_on_conflict {
  constraint: workflow_workflow_constraint!
  update_columns: [workflow_workflow_update_column!]!
  where: workflow_workflow_bool_exp
}

"""
ordering options when selecting data from "workflow.workflow"
"""
input workflow_workflow_order_by {
  COMMENTS: order_by
  ID: order_by
  NAME: order_by
  active: order_by
  app_form_id: order_by
  app_form_mode: order_by
  application_id: order_by
  decision_box_read_only: order_by
  decision_box_visible: order_by
  ignore_fields: order_by
  ignore_text: order_by
  package_mode: order_by
  qa_enabled: order_by
  redaction_enabled: order_by
  redaction_path: order_by
  stamp_path: order_by
  user_workflows_aggregate: workflow_users_aggregate_order_by
  workflow_documents_aggregate: workflow_documents_aggregate_order_by
}

"""
primary key columns input for table: "workflow.workflow"
"""
input workflow_workflow_pk_columns_input {
  ID: float8!
}

"""
select columns of table "workflow.workflow"
"""
enum workflow_workflow_select_column {
  """
  column name
  """
  COMMENTS

  """
  column name
  """
  ID

  """
  column name
  """
  NAME

  """
  column name
  """
  active

  """
  column name
  """
  app_form_id

  """
  column name
  """
  app_form_mode

  """
  column name
  """
  application_id

  """
  column name
  """
  decision_box_read_only

  """
  column name
  """
  decision_box_visible

  """
  column name
  """
  ignore_fields

  """
  column name
  """
  ignore_text

  """
  column name
  """
  package_mode

  """
  column name
  """
  qa_enabled

  """
  column name
  """
  redaction_enabled

  """
  column name
  """
  redaction_path

  """
  column name
  """
  stamp_path
}

"""
input type for updating data in table "workflow.workflow"
"""
input workflow_workflow_set_input {
  COMMENTS: String
  ID: float8
  NAME: String
  active: bpchar
  app_form_id: float8
  app_form_mode: String
  application_id: float8
  decision_box_read_only: bpchar
  decision_box_visible: bpchar
  ignore_fields: bpchar
  ignore_text: bpchar
  package_mode: bpchar
  qa_enabled: bpchar
  redaction_enabled: bpchar
  redaction_path: String
  stamp_path: String
}

"""
aggregate stddev on columns
"""
type workflow_workflow_stddev_fields {
  ID: Float
  app_form_id: Float
  application_id: Float
}

"""
order by stddev() on columns of table "workflow.workflow"
"""
input workflow_workflow_stddev_order_by {
  ID: order_by
  app_form_id: order_by
  application_id: order_by
}

"""
aggregate stddev_pop on columns
"""
type workflow_workflow_stddev_pop_fields {
  ID: Float
  app_form_id: Float
  application_id: Float
}

"""
order by stddev_pop() on columns of table "workflow.workflow"
"""
input workflow_workflow_stddev_pop_order_by {
  ID: order_by
  app_form_id: order_by
  application_id: order_by
}

"""
aggregate stddev_samp on columns
"""
type workflow_workflow_stddev_samp_fields {
  ID: Float
  app_form_id: Float
  application_id: Float
}

"""
order by stddev_samp() on columns of table "workflow.workflow"
"""
input workflow_workflow_stddev_samp_order_by {
  ID: order_by
  app_form_id: order_by
  application_id: order_by
}

"""
aggregate sum on columns
"""
type workflow_workflow_sum_fields {
  ID: float8
  app_form_id: float8
  application_id: float8
}

"""
order by sum() on columns of table "workflow.workflow"
"""
input workflow_workflow_sum_order_by {
  ID: order_by
  app_form_id: order_by
  application_id: order_by
}

"""
update columns of table "workflow.workflow"
"""
enum workflow_workflow_update_column {
  """
  column name
  """
  COMMENTS

  """
  column name
  """
  ID

  """
  column name
  """
  NAME

  """
  column name
  """
  active

  """
  column name
  """
  app_form_id

  """
  column name
  """
  app_form_mode

  """
  column name
  """
  application_id

  """
  column name
  """
  decision_box_read_only

  """
  column name
  """
  decision_box_visible

  """
  column name
  """
  ignore_fields

  """
  column name
  """
  ignore_text

  """
  column name
  """
  package_mode

  """
  column name
  """
  qa_enabled

  """
  column name
  """
  redaction_enabled

  """
  column name
  """
  redaction_path

  """
  column name
  """
  stamp_path
}

"""
aggregate var_pop on columns
"""
type workflow_workflow_var_pop_fields {
  ID: Float
  app_form_id: Float
  application_id: Float
}

"""
order by var_pop() on columns of table "workflow.workflow"
"""
input workflow_workflow_var_pop_order_by {
  ID: order_by
  app_form_id: order_by
  application_id: order_by
}

"""
aggregate var_samp on columns
"""
type workflow_workflow_var_samp_fields {
  ID: Float
  app_form_id: Float
  application_id: Float
}

"""
order by var_samp() on columns of table "workflow.workflow"
"""
input workflow_workflow_var_samp_order_by {
  ID: order_by
  app_form_id: order_by
  application_id: order_by
}

"""
aggregate variance on columns
"""
type workflow_workflow_variance_fields {
  ID: Float
  app_form_id: Float
  application_id: Float
}

"""
order by variance() on columns of table "workflow.workflow"
"""
input workflow_workflow_variance_order_by {
  ID: order_by
  app_form_id: order_by
  application_id: order_by
}
